import{_ as t}from"./chunks/ArticleMetadata.59a467b2.js";import{_ as r,v as l,b as c,t as y,O as A,F as p,L as D,R as i,M as C,C as B,B as F}from"./chunks/framework.5cbdba25.js";import"./chunks/md5.02486a14.js";const b=JSON.parse('{"title":"归并排序提高","description":"","frontmatter":{"title":"归并排序提高","author":"阿源","date":"2023/03/05 12:00","categories":["数据结构与算法"],"tags":["数据结构与算法"]},"headers":[],"relativePath":"courses/algorithm/01-左程云算法基础/05-归并排序提高.md","filePath":"courses/algorithm/01-左程云算法基础/05-归并排序提高.md","lastUpdated":1691397650000}'),E={name:"courses/algorithm/01-左程云算法基础/05-归并排序提高.md"},u=p("h1",{id:"归并排序提高",tabindex:"-1"},[D("归并排序提高 "),p("a",{class:"header-anchor",href:"#归并排序提高","aria-label":'Permalink to "归并排序提高"'},"​")],-1),m=i(`<h2 id="_1-countofrangesum" tabindex="-1">1.CountOfRangeSum <a class="header-anchor" href="#_1-countofrangesum" aria-label="Permalink to &quot;1.CountOfRangeSum&quot;">​</a></h2><p>给定一个数组arr，和两个整数lower和upper，返回arr中有多少个子数组的累加在[lower,upper]范围上 // <a href="https://leetcode.com/problems/count-of-range-sum/" target="_blank" rel="noreferrer">https://leetcode.com/problems/count-of-range-sum/</a></p><ul><li>前缀数组的运用，i到j位置的和是多少，用前缀和</li><li>求以i位置结尾的子数组，目标有多少个在[lower , upper] = 求i之前的所有前缀和中有多少个前缀和在[X - upper , X - lower]</li><li>[1,3,4,4,5] | [2,7,8,8,9] 范围是【0，5】</li><li>当右组指向2时，看左组有多少个数字落在【0,3】上</li><li>由于每组是有序的，范围的上限和下限都不会回退</li></ul><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">static</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">countRangeSum</span><span style="color:#ADBAC7;">(</span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;">[] nums , </span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;"> lower , </span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;"> upper){</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;"> (nums </span><span style="color:#F47067;">==</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">null</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">||</span><span style="color:#ADBAC7;"> nums.length </span><span style="color:#F47067;">==</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">) </span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#768390;">//求前缀和</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#F47067;">long</span><span style="color:#F69D50;">[] </span><span style="color:#ADBAC7;">sum</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">new</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">long</span><span style="color:#ADBAC7;">[nums.length];</span></span>
<span class="line"><span style="color:#ADBAC7;">        sum[</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">] </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> nums[</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">];</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#F47067;">for</span><span style="color:#ADBAC7;"> (</span><span style="color:#F47067;">int</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">i</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;"> ; i </span><span style="color:#F47067;">&lt;</span><span style="color:#ADBAC7;"> nums.length ; i</span><span style="color:#F47067;">++</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">            sum[i] </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> sum[i </span><span style="color:#F47067;">-</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">] </span><span style="color:#F47067;">+</span><span style="color:#ADBAC7;"> nums[i];</span></span>
<span class="line"><span style="color:#ADBAC7;">        }</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">process</span><span style="color:#ADBAC7;">(sum , </span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;"> , sum.length </span><span style="color:#F47067;">-</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;"> , lower , upper);</span></span>
<span class="line"><span style="color:#ADBAC7;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">static</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">process</span><span style="color:#ADBAC7;">(</span><span style="color:#F47067;">long</span><span style="color:#ADBAC7;">[] sum, </span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;"> L, </span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;"> R, </span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;"> lower, </span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;"> upper){</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;"> (L </span><span style="color:#F47067;">==</span><span style="color:#ADBAC7;"> R){</span></span>
<span class="line"><span style="color:#ADBAC7;">            </span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> sum[L] </span><span style="color:#F47067;">&gt;=</span><span style="color:#ADBAC7;"> lower </span><span style="color:#F47067;">&amp;&amp;</span><span style="color:#ADBAC7;"> sum[R] </span><span style="color:#F47067;">&lt;=</span><span style="color:#ADBAC7;"> upper </span><span style="color:#F47067;">?</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">:</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">        }</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#F47067;">int</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">M</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> L </span><span style="color:#F47067;">+</span><span style="color:#ADBAC7;"> ( (R </span><span style="color:#F47067;">-</span><span style="color:#ADBAC7;"> L) </span><span style="color:#F47067;">&gt;&gt;</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">process</span><span style="color:#ADBAC7;">(sum, L, M, lower, upper) </span><span style="color:#F47067;">+</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">process</span><span style="color:#ADBAC7;">(sum , M </span><span style="color:#F47067;">+</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;"> , R , lower , upper) </span><span style="color:#F47067;">+</span></span>
<span class="line"><span style="color:#ADBAC7;">                </span><span style="color:#DCBDFB;">merge</span><span style="color:#ADBAC7;">(sum , L , M , R , lower , upper);</span></span>
<span class="line"><span style="color:#ADBAC7;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">static</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">merge</span><span style="color:#ADBAC7;">(</span><span style="color:#F47067;">long</span><span style="color:#ADBAC7;">[] arr, </span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;"> L, </span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;"> M, </span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;"> R, </span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;"> lower, </span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;"> upper){</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#F47067;">int</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">ans</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#F47067;">int</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">windowL</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> L;</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#F47067;">int</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">windowR</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> L;</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#768390;">// [windowL, windowR)</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#768390;">//这样的话本来【13,15】的，就是求得[13 , 16），不用+1</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#F47067;">for</span><span style="color:#ADBAC7;">(</span><span style="color:#F47067;">int</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">i</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> M </span><span style="color:#F47067;">+</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;"> ; i </span><span style="color:#F47067;">&lt;=</span><span style="color:#ADBAC7;"> R ; i</span><span style="color:#F47067;">++</span><span style="color:#ADBAC7;">){</span></span>
<span class="line"><span style="color:#ADBAC7;">            </span><span style="color:#F47067;">long</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">min</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> arr[i] </span><span style="color:#F47067;">-</span><span style="color:#ADBAC7;"> upper;</span></span>
<span class="line"><span style="color:#ADBAC7;">            </span><span style="color:#F47067;">long</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">max</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> arr[i] </span><span style="color:#F47067;">-</span><span style="color:#ADBAC7;"> lower;</span></span>
<span class="line"><span style="color:#ADBAC7;">            </span><span style="color:#F47067;">while</span><span style="color:#ADBAC7;"> (windowR </span><span style="color:#F47067;">&lt;=</span><span style="color:#ADBAC7;"> M </span><span style="color:#F47067;">&amp;&amp;</span><span style="color:#ADBAC7;"> arr[windowR] </span><span style="color:#F47067;">&lt;=</span><span style="color:#ADBAC7;"> max) windowR</span><span style="color:#F47067;">++</span><span style="color:#ADBAC7;">;  </span><span style="color:#768390;">//要大于max才会++</span></span>
<span class="line"><span style="color:#ADBAC7;">            </span><span style="color:#F47067;">while</span><span style="color:#ADBAC7;"> (windowL </span><span style="color:#F47067;">&lt;=</span><span style="color:#ADBAC7;"> M </span><span style="color:#F47067;">&amp;&amp;</span><span style="color:#ADBAC7;"> arr[windowL] </span><span style="color:#F47067;">&lt;</span><span style="color:#ADBAC7;"> min) windowL</span><span style="color:#F47067;">++</span><span style="color:#ADBAC7;">;   </span><span style="color:#768390;">//</span></span>
<span class="line"><span style="color:#ADBAC7;">            ans </span><span style="color:#F47067;">+=</span><span style="color:#ADBAC7;"> windowR </span><span style="color:#F47067;">-</span><span style="color:#ADBAC7;"> windowL;</span></span>
<span class="line"><span style="color:#ADBAC7;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#F47067;">long</span><span style="color:#F69D50;">[] </span><span style="color:#ADBAC7;">help</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">new</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">long</span><span style="color:#ADBAC7;">[R </span><span style="color:#F47067;">-</span><span style="color:#ADBAC7;"> L </span><span style="color:#F47067;">+</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">];</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#F47067;">int</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">i</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;"> ;</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#F47067;">int</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">p1</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> L;</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#F47067;">int</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">p2</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> M </span><span style="color:#F47067;">+</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#F47067;">while</span><span style="color:#ADBAC7;"> (p1 </span><span style="color:#F47067;">&lt;=</span><span style="color:#ADBAC7;"> M </span><span style="color:#F47067;">&amp;&amp;</span><span style="color:#ADBAC7;"> p2 </span><span style="color:#F47067;">&lt;=</span><span style="color:#ADBAC7;"> R){</span></span>
<span class="line"><span style="color:#ADBAC7;">            help[i</span><span style="color:#F47067;">++</span><span style="color:#ADBAC7;">] </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> arr[p1] </span><span style="color:#F47067;">&lt;</span><span style="color:#ADBAC7;"> arr[p2] </span><span style="color:#F47067;">?</span><span style="color:#ADBAC7;"> arr[p1</span><span style="color:#F47067;">++</span><span style="color:#ADBAC7;">] </span><span style="color:#F47067;">:</span><span style="color:#ADBAC7;"> arr[p2</span><span style="color:#F47067;">++</span><span style="color:#ADBAC7;">];</span></span>
<span class="line"><span style="color:#ADBAC7;">        }</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#F47067;">while</span><span style="color:#ADBAC7;"> (p1 </span><span style="color:#F47067;">&lt;=</span><span style="color:#ADBAC7;"> M){</span></span>
<span class="line"><span style="color:#ADBAC7;">            help[i</span><span style="color:#F47067;">++</span><span style="color:#ADBAC7;">] </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> arr[p1</span><span style="color:#F47067;">++</span><span style="color:#ADBAC7;">];</span></span>
<span class="line"><span style="color:#ADBAC7;">        }</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#F47067;">while</span><span style="color:#ADBAC7;"> (p2 </span><span style="color:#F47067;">&lt;=</span><span style="color:#ADBAC7;"> R){</span></span>
<span class="line"><span style="color:#ADBAC7;">            help[i</span><span style="color:#F47067;">++</span><span style="color:#ADBAC7;">] </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> arr[p2</span><span style="color:#F47067;">++</span><span style="color:#ADBAC7;">];</span></span>
<span class="line"><span style="color:#ADBAC7;">        }</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#F47067;">for</span><span style="color:#ADBAC7;"> (i </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;"> ; i </span><span style="color:#F47067;">&lt;</span><span style="color:#ADBAC7;"> help.length ; i</span><span style="color:#F47067;">++</span><span style="color:#ADBAC7;">){</span></span>
<span class="line"><span style="color:#ADBAC7;">            arr[L </span><span style="color:#F47067;">+</span><span style="color:#ADBAC7;"> i] </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> help[i];</span></span>
<span class="line"><span style="color:#ADBAC7;">        }</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> ans;</span></span>
<span class="line"><span style="color:#ADBAC7;">    }</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">countRangeSum</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;">[] nums , </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> lower , </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> upper){</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (nums </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">||</span><span style="color:#24292E;"> nums.length </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//求前缀和</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">long</span><span style="color:#24292E;">[] sum </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">long</span><span style="color:#24292E;">[nums.length];</span></span>
<span class="line"><span style="color:#24292E;">        sum[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> nums[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> ; i </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> nums.length ; i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">            sum[i] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> sum[i </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> nums[i];</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">process</span><span style="color:#24292E;">(sum , </span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> , sum.length </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> , lower , upper);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">process</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">long</span><span style="color:#24292E;">[] sum, </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> L, </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> R, </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> lower, </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> upper){</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (L </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> R){</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> sum[L] </span><span style="color:#D73A49;">&gt;=</span><span style="color:#24292E;"> lower </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> sum[R] </span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;"> upper </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> M </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> L </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> ( (R </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> L) </span><span style="color:#D73A49;">&gt;&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">process</span><span style="color:#24292E;">(sum, L, M, lower, upper) </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">process</span><span style="color:#24292E;">(sum , M </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> , R , lower , upper) </span><span style="color:#D73A49;">+</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#6F42C1;">merge</span><span style="color:#24292E;">(sum , L , M , R , lower , upper);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">merge</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">long</span><span style="color:#24292E;">[] arr, </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> L, </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> M, </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> R, </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> lower, </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> upper){</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> ans </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> windowL </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> L;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> windowR </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> L;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// [windowL, windowR)</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//这样的话本来【13,15】的，就是求得[13 , 16），不用+1</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">for</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> M </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> ; i </span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;"> R ; i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">long</span><span style="color:#24292E;"> min </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> arr[i] </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> upper;</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">long</span><span style="color:#24292E;"> max </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> arr[i] </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> lower;</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">while</span><span style="color:#24292E;"> (windowR </span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;"> M </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> arr[windowR] </span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;"> max) windowR</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">;  </span><span style="color:#6A737D;">//要大于max才会++</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">while</span><span style="color:#24292E;"> (windowL </span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;"> M </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> arr[windowL] </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> min) windowL</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">;   </span><span style="color:#6A737D;">//</span></span>
<span class="line"><span style="color:#24292E;">            ans </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> windowR </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> windowL;</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">long</span><span style="color:#24292E;">[] help </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">long</span><span style="color:#24292E;">[R </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> L </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> ;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> p1 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> L;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> p2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> M </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">while</span><span style="color:#24292E;"> (p1 </span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;"> M </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> p2 </span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;"> R){</span></span>
<span class="line"><span style="color:#24292E;">            help[i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> arr[p1] </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> arr[p2] </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> arr[p1</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> arr[p2</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">while</span><span style="color:#24292E;"> (p1 </span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;"> M){</span></span>
<span class="line"><span style="color:#24292E;">            help[i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> arr[p1</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">while</span><span style="color:#24292E;"> (p2 </span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;"> R){</span></span>
<span class="line"><span style="color:#24292E;">            help[i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> arr[p2</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> ; i </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> help.length ; i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">            arr[L </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> i] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> help[i];</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> ans;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span></code></pre></div><h2 id="_2-快速排序-荷兰国旗" tabindex="-1">2.快速排序_荷兰国旗 <a class="header-anchor" href="#_2-快速排序-荷兰国旗" aria-label="Permalink to &quot;2.快速排序_荷兰国旗&quot;">​</a></h2><ul><li>一个数组，小于等于X的在左边，大于X在右边</li><li>不能用辅助数组，时间复杂度为O(N)</li></ul>`,6);function w(s,d,h,g,L,R){const o=t,e=C("ClientOnly");return l(),c("div",null,[u,y(e,null,{default:A(()=>{var n,a;return[(((n=s.$frontmatter)==null?void 0:n.aside)??!0)&&(((a=s.$frontmatter)==null?void 0:a.showArticleMetadata)??!0)?(l(),B(o,{key:0,article:s.$frontmatter},null,8,["article"])):F("",!0)]}),_:1}),m])}const v=r(E,[["render",w]]);export{b as __pageData,v as default};
