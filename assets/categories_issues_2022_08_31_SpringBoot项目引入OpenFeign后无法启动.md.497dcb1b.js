import{_ as l}from"./chunks/ArticleMetadata.efdb5e9a.js";import{_ as r,v as e,b as c,t as i,O as y,F as o,L as g,R as A,M as d,C as u,B as C}from"./chunks/framework.5cbdba25.js";import"./chunks/md5.02486a14.js";const j=JSON.parse('{"title":"SpringBoot项目引入OpenFeign后无法启动","description":"","frontmatter":{"title":"SpringBoot项目引入OpenFeign后无法启动","author":"查尔斯","date":"2022/08/31 22:39","isOriginal":false,"categories":["Bug万象集"],"tags":["Java","Spring Boot","Spring Cloud","Open Feign"]},"headers":[],"relativePath":"categories/issues/2022/08/31/SpringBoot项目引入OpenFeign后无法启动.md","filePath":"categories/issues/2022/08/31/SpringBoot项目引入OpenFeign后无法启动.md","lastUpdated":1695300447000}'),B={name:"categories/issues/2022/08/31/SpringBoot项目引入OpenFeign后无法启动.md"},b=o("h1",{id:"springboot项目引入openfeign后无法启动",tabindex:"-1"},[g("SpringBoot项目引入OpenFeign后无法启动 "),o("a",{class:"header-anchor",href:"#springboot项目引入openfeign后无法启动","aria-label":'Permalink to "SpringBoot项目引入OpenFeign后无法启动"'},"​")],-1),f=A(`<p><strong>C：</strong> 由于项目需要调用第三方 API，所以打算使用 Open Feign 来作为调用工具。但这次新项目用的 Spring Boot 版本有点高，花了点时间排除问题。</p><h2 id="问题描述" tabindex="-1">问题描述 <a class="header-anchor" href="#问题描述" aria-label="Permalink to &quot;问题描述&quot;">​</a></h2><p>先简单描述一下我们项目的技术栈，这是一个前后端分离的单体项目，前端不用提，后端部分主框架用的是 Spring Boot 2.7.2 版本。现在需要对接第三方 API，打算使用 Open Feign 来作为调用工具。Open Feign 是 Spring Cloud 开发的一个轻量级RESTful HTTP 服务客户端，多数使用的场景是用于微服务项目。</p><h3 id="引入依赖" tabindex="-1">引入依赖 <a class="header-anchor" href="#引入依赖" aria-label="Permalink to &quot;引入依赖&quot;">​</a></h3><p>下方只贴出了关键部分依赖：</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#ADBAC7;">&lt;</span><span style="color:#8DDB8C;">properties</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">    &lt;</span><span style="color:#8DDB8C;">spring-cloud.version</span><span style="color:#ADBAC7;">&gt;2.0.4.RELEASE&lt;/</span><span style="color:#8DDB8C;">spring-cloud.version</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">&lt;/</span><span style="color:#8DDB8C;">properties</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#768390;">&lt;!-- 全局版本锁定 --&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">&lt;</span><span style="color:#8DDB8C;">dependencyManagement</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#768390;">&lt;!-- Spring Cloud --&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">    &lt;</span><span style="color:#8DDB8C;">dependency</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">        &lt;</span><span style="color:#8DDB8C;">groupId</span><span style="color:#ADBAC7;">&gt;org.springframework.cloud&lt;/</span><span style="color:#8DDB8C;">groupId</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">        &lt;</span><span style="color:#8DDB8C;">artifactId</span><span style="color:#ADBAC7;">&gt;spring-cloud-dependencies&lt;/</span><span style="color:#8DDB8C;">artifactId</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">        &lt;</span><span style="color:#8DDB8C;">version</span><span style="color:#ADBAC7;">&gt;\${spring-cloud.version}&lt;/</span><span style="color:#8DDB8C;">version</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">        &lt;</span><span style="color:#8DDB8C;">type</span><span style="color:#ADBAC7;">&gt;pom&lt;/</span><span style="color:#8DDB8C;">type</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">        &lt;</span><span style="color:#8DDB8C;">scope</span><span style="color:#ADBAC7;">&gt;import&lt;/</span><span style="color:#8DDB8C;">scope</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">    &lt;/</span><span style="color:#8DDB8C;">dependency</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">&lt;/</span><span style="color:#8DDB8C;">dependencyManagement</span><span style="color:#ADBAC7;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">properties</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">spring-cloud.version</span><span style="color:#24292E;">&gt;2.0.4.RELEASE&lt;/</span><span style="color:#22863A;">spring-cloud.version</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">properties</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">&lt;!-- 全局版本锁定 --&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">dependencyManagement</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">&lt;!-- Spring Cloud --&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">dependency</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;org.springframework.cloud&lt;/</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;spring-cloud-dependencies&lt;/</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">version</span><span style="color:#24292E;">&gt;\${spring-cloud.version}&lt;/</span><span style="color:#22863A;">version</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">type</span><span style="color:#24292E;">&gt;pom&lt;/</span><span style="color:#22863A;">type</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">scope</span><span style="color:#24292E;">&gt;import&lt;/</span><span style="color:#22863A;">scope</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;/</span><span style="color:#22863A;">dependency</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">dependencyManagement</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#ADBAC7;">&lt;</span><span style="color:#8DDB8C;">dependencies</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#768390;">&lt;!-- Feign，用于服务间的 HTTP 调用 --&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">    &lt;</span><span style="color:#8DDB8C;">dependency</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">        &lt;</span><span style="color:#8DDB8C;">groupId</span><span style="color:#ADBAC7;">&gt;org.springframework.cloud&lt;/</span><span style="color:#8DDB8C;">groupId</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">        &lt;</span><span style="color:#8DDB8C;">artifactId</span><span style="color:#ADBAC7;">&gt;spring-cloud-starter-openfeign&lt;/</span><span style="color:#8DDB8C;">artifactId</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">    &lt;/</span><span style="color:#8DDB8C;">dependency</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">&lt;/</span><span style="color:#8DDB8C;">dependencies</span><span style="color:#ADBAC7;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">dependencies</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">&lt;!-- Feign，用于服务间的 HTTP 调用 --&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">dependency</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;org.springframework.cloud&lt;/</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;spring-cloud-starter-openfeign&lt;/</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;/</span><span style="color:#22863A;">dependency</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">dependencies</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><h3 id="编写配置" tabindex="-1">编写配置 <a class="header-anchor" href="#编写配置" aria-label="Permalink to &quot;编写配置&quot;">​</a></h3><p>引入完依赖，自然是要简单配置一下。</p><p>application.yml 中的 Feign 部分配置：</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#768390;">## Feign 配置</span></span>
<span class="line"><span style="color:#8DDB8C;">feign</span><span style="color:#ADBAC7;">:</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#8DDB8C;">client</span><span style="color:#ADBAC7;">:</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#8DDB8C;">config</span><span style="color:#ADBAC7;">:</span></span>
<span class="line"><span style="color:#ADBAC7;">      </span><span style="color:#8DDB8C;">default</span><span style="color:#ADBAC7;">:</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#8DDB8C;">connect-timeout</span><span style="color:#ADBAC7;">: </span><span style="color:#6CB6FF;">20000</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#8DDB8C;">read-timeout</span><span style="color:#ADBAC7;">: </span><span style="color:#6CB6FF;">120000</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">## Feign 配置</span></span>
<span class="line"><span style="color:#22863A;">feign</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">client</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">config</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">default</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">connect-timeout</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">20000</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">read-timeout</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">120000</span></span></code></pre></div><p>FeignConfig 配置类：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#768390;">/**</span></span>
<span class="line"><span style="color:#768390;"> * Feign配置</span></span>
<span class="line"><span style="color:#768390;"> *</span></span>
<span class="line"><span style="color:#768390;"> * </span><span style="color:#F47067;">@author</span><span style="color:#768390;"> Charles7c</span></span>
<span class="line"><span style="color:#768390;"> * @date 2022/8/30 18:10</span></span>
<span class="line"><span style="color:#768390;"> */</span></span>
<span class="line"><span style="color:#ADBAC7;">@</span><span style="color:#F47067;">Configuration</span></span>
<span class="line"><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">class</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">FeignConfig</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">    @</span><span style="color:#F47067;">Value</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;\${spring.profiles.active}&quot;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">private</span><span style="color:#ADBAC7;"> String</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">activeProfile;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#768390;">    /**</span></span>
<span class="line"><span style="color:#768390;">     * Feign 日志级别配置</span></span>
<span class="line"><span style="color:#768390;">     * </span><span style="color:#F47067;">@return</span><span style="color:#768390;"> /</span></span>
<span class="line"><span style="color:#768390;">     */</span></span>
<span class="line"><span style="color:#ADBAC7;">    @</span><span style="color:#F47067;">Bean</span></span>
<span class="line"><span style="color:#ADBAC7;">    Logger.Level </span><span style="color:#DCBDFB;">feignLoggerLevel</span><span style="color:#ADBAC7;">() {</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;"> (</span><span style="color:#96D0FF;">&quot;prod&quot;</span><span style="color:#ADBAC7;">.</span><span style="color:#DCBDFB;">equals</span><span style="color:#ADBAC7;">(activeProfile)) {</span></span>
<span class="line"><span style="color:#ADBAC7;">            </span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> Logger.Level.BASIC;</span></span>
<span class="line"><span style="color:#ADBAC7;">        }</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> Logger.Level.FULL;</span></span>
<span class="line"><span style="color:#ADBAC7;">    }</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span></span>
<span class="line"><span style="color:#768390;">    /**</span></span>
<span class="line"><span style="color:#768390;">     * 解决 javax.net.ssl.SSLHandshakeException: java.security.cert.CertificateException: No subject alternative names present</span></span>
<span class="line"><span style="color:#768390;">     * </span><span style="color:#F47067;">@return</span><span style="color:#768390;"> /</span></span>
<span class="line"><span style="color:#768390;">     */</span></span>
<span class="line"><span style="color:#ADBAC7;">    @</span><span style="color:#F47067;">Bean</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> Client </span><span style="color:#DCBDFB;">client</span><span style="color:#ADBAC7;">() {</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#F47067;">try</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">            SSLContext</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">context</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">new</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">SSLContextBuilder</span><span style="color:#ADBAC7;">().</span><span style="color:#DCBDFB;">loadTrustMaterial</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">null</span><span style="color:#ADBAC7;">, (chain, authType) </span><span style="color:#F47067;">-&gt;</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">true</span><span style="color:#ADBAC7;">).</span><span style="color:#DCBDFB;">build</span><span style="color:#ADBAC7;">();</span></span>
<span class="line"><span style="color:#ADBAC7;">            </span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">new</span><span style="color:#ADBAC7;"> Client.</span><span style="color:#DCBDFB;">Default</span><span style="color:#ADBAC7;">(context.</span><span style="color:#DCBDFB;">getSocketFactory</span><span style="color:#ADBAC7;">(), </span><span style="color:#F47067;">new</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">NoopHostnameVerifier</span><span style="color:#ADBAC7;">());</span></span>
<span class="line"><span style="color:#ADBAC7;">        } </span><span style="color:#F47067;">catch</span><span style="color:#ADBAC7;"> (Exception </span><span style="color:#F69D50;">e</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">            </span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">new</span><span style="color:#ADBAC7;"> Client.</span><span style="color:#DCBDFB;">Default</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">null</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">null</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#ADBAC7;">        }</span></span>
<span class="line"><span style="color:#ADBAC7;">    }</span></span>
<span class="line"><span style="color:#ADBAC7;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * Feign配置</span></span>
<span class="line"><span style="color:#6A737D;"> *</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@author</span><span style="color:#6A737D;"> Charles7c</span></span>
<span class="line"><span style="color:#6A737D;"> * @date 2022/8/30 18:10</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Configuration</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">FeignConfig</span><span style="color:#24292E;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">Value</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;\${spring.profiles.active}&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> String activeProfile;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">    /**</span></span>
<span class="line"><span style="color:#6A737D;">     * Feign 日志级别配置</span></span>
<span class="line"><span style="color:#6A737D;">     * </span><span style="color:#D73A49;">@return</span><span style="color:#6A737D;"> /</span></span>
<span class="line"><span style="color:#6A737D;">     */</span></span>
<span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">Bean</span></span>
<span class="line"><span style="color:#24292E;">    Logger.Level </span><span style="color:#6F42C1;">feignLoggerLevel</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#032F62;">&quot;prod&quot;</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">equals</span><span style="color:#24292E;">(activeProfile)) {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> Logger.Level.BASIC;</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> Logger.Level.FULL;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span></span>
<span class="line"><span style="color:#6A737D;">    /**</span></span>
<span class="line"><span style="color:#6A737D;">     * 解决 javax.net.ssl.SSLHandshakeException: java.security.cert.CertificateException: No subject alternative names present</span></span>
<span class="line"><span style="color:#6A737D;">     * </span><span style="color:#D73A49;">@return</span><span style="color:#6A737D;"> /</span></span>
<span class="line"><span style="color:#6A737D;">     */</span></span>
<span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">Bean</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> Client </span><span style="color:#6F42C1;">client</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">try</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">            SSLContext context </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">SSLContextBuilder</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">loadTrustMaterial</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">null</span><span style="color:#24292E;">, (chain, authType) </span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">build</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> Client.</span><span style="color:#6F42C1;">Default</span><span style="color:#24292E;">(context.</span><span style="color:#6F42C1;">getSocketFactory</span><span style="color:#24292E;">(), </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">NoopHostnameVerifier</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">        } </span><span style="color:#D73A49;">catch</span><span style="color:#24292E;"> (Exception </span><span style="color:#E36209;">e</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> Client.</span><span style="color:#6F42C1;">Default</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">null</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h3 id="启用feign" tabindex="-1">启用Feign <a class="header-anchor" href="#启用feign" aria-label="Permalink to &quot;启用Feign&quot;">​</a></h3><p>最后只需要在启动类上使用 <code>@EnableFeignClients</code> 启用一下配置即可。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#768390;">/**</span></span>
<span class="line"><span style="color:#768390;"> * 启动程序</span></span>
<span class="line"><span style="color:#768390;"> *</span></span>
<span class="line"><span style="color:#768390;"> * </span><span style="color:#F47067;">@author</span><span style="color:#768390;"> Charles7c</span></span>
<span class="line"><span style="color:#768390;"> * @date 2022/8/24 15:46</span></span>
<span class="line"><span style="color:#768390;"> */</span></span>
<span class="line"><span style="color:#ADBAC7;">@</span><span style="color:#F47067;">EnableFeignClients</span></span>
<span class="line"><span style="color:#ADBAC7;">@</span><span style="color:#F47067;">SpringBootApplication</span></span>
<span class="line"><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">class</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">WebApiApplication</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">static</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">void</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">main</span><span style="color:#ADBAC7;">(</span><span style="color:#F47067;">String</span><span style="color:#ADBAC7;">[] </span><span style="color:#F69D50;">args</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">        System.</span><span style="color:#DCBDFB;">setProperty</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;spring.devtools.restart.enabled&quot;</span><span style="color:#ADBAC7;">, </span><span style="color:#96D0FF;">&quot;false&quot;</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#ADBAC7;">        SpringApplication</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">application</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">new</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">SpringApplication</span><span style="color:#ADBAC7;">(WebApiApplication.class);</span></span>
<span class="line"><span style="color:#ADBAC7;">        application.</span><span style="color:#DCBDFB;">setApplicationStartup</span><span style="color:#ADBAC7;">(</span><span style="color:#F47067;">new</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">BufferingApplicationStartup</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">2048</span><span style="color:#ADBAC7;">));</span></span>
<span class="line"><span style="color:#ADBAC7;">        application.</span><span style="color:#DCBDFB;">run</span><span style="color:#ADBAC7;">(args);</span></span>
<span class="line"><span style="color:#ADBAC7;">    }</span></span>
<span class="line"><span style="color:#ADBAC7;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * 启动程序</span></span>
<span class="line"><span style="color:#6A737D;"> *</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@author</span><span style="color:#6A737D;"> Charles7c</span></span>
<span class="line"><span style="color:#6A737D;"> * @date 2022/8/24 15:46</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">EnableFeignClients</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">SpringBootApplication</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">WebApiApplication</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] </span><span style="color:#E36209;">args</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        System.</span><span style="color:#6F42C1;">setProperty</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;spring.devtools.restart.enabled&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;false&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        SpringApplication application </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">SpringApplication</span><span style="color:#24292E;">(WebApiApplication.class);</span></span>
<span class="line"><span style="color:#24292E;">        application.</span><span style="color:#6F42C1;">setApplicationStartup</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">BufferingApplicationStartup</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">2048</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">        application.</span><span style="color:#6F42C1;">run</span><span style="color:#24292E;">(args);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h3 id="报错信息" tabindex="-1">报错信息 <a class="header-anchor" href="#报错信息" aria-label="Permalink to &quot;报错信息&quot;">​</a></h3><p>根据以前的经验到这步也就结束了，该怎么用 Feign 就怎么用了。好的，写完之后启动项目。</p><p>显然笔者被技术的 &quot;浪潮&quot; 又拍了一个 &quot;跟头&quot;，技术从来都不是停滞不前的，采用新版本就肯定会有这样那样的问题，不提前做版本踩坑和梳理，就必然如此。</p><h2 id="原因分析" tabindex="-1">原因分析 <a class="header-anchor" href="#原因分析" aria-label="Permalink to &quot;原因分析&quot;">​</a></h2><p>从提示来看，控制台只打印了我在启动类中配置的一个系统属性，Spring Boot 项目的 Banner 都没打出来，显然是启动时都没走到打印 banner 这一步。但控制台什么错误也看不到，这可不行啊，先给启动这一步加个 try-catch 捕获下异常，起码先把异常显示出来。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#768390;">/**</span></span>
<span class="line"><span style="color:#768390;"> * 启动程序</span></span>
<span class="line"><span style="color:#768390;"> *</span></span>
<span class="line"><span style="color:#768390;"> * </span><span style="color:#F47067;">@author</span><span style="color:#768390;"> Charles7c</span></span>
<span class="line"><span style="color:#768390;"> * @date 2022/8/24 15:46</span></span>
<span class="line"><span style="color:#768390;"> */</span></span>
<span class="line"><span style="color:#ADBAC7;">@</span><span style="color:#F47067;">EnableFeignClients</span></span>
<span class="line"><span style="color:#ADBAC7;">@</span><span style="color:#F47067;">SpringBootApplication</span></span>
<span class="line"><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">class</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">WebApiApplication</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">static</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">void</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">main</span><span style="color:#ADBAC7;">(</span><span style="color:#F47067;">String</span><span style="color:#ADBAC7;">[] </span><span style="color:#F69D50;">args</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#F47067;">try</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">            System.</span><span style="color:#DCBDFB;">setProperty</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;spring.devtools.restart.enabled&quot;</span><span style="color:#ADBAC7;">, </span><span style="color:#96D0FF;">&quot;false&quot;</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#ADBAC7;">            SpringApplication</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">application</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">new</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">SpringApplication</span><span style="color:#ADBAC7;">(WebApiApplication.class);</span></span>
<span class="line"><span style="color:#ADBAC7;">            application.</span><span style="color:#DCBDFB;">setApplicationStartup</span><span style="color:#ADBAC7;">(</span><span style="color:#F47067;">new</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">BufferingApplicationStartup</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">2048</span><span style="color:#ADBAC7;">));</span></span>
<span class="line"><span style="color:#ADBAC7;">            application.</span><span style="color:#DCBDFB;">run</span><span style="color:#ADBAC7;">(args);</span></span>
<span class="line"><span style="color:#ADBAC7;">        } </span><span style="color:#F47067;">catch</span><span style="color:#ADBAC7;"> (Exception </span><span style="color:#F69D50;">e</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">            </span><span style="color:#F47067;">throw</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">new</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">RuntimeException</span><span style="color:#ADBAC7;">(e);</span></span>
<span class="line"><span style="color:#ADBAC7;">        }</span></span>
<span class="line"><span style="color:#ADBAC7;">    }</span></span>
<span class="line"><span style="color:#ADBAC7;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * 启动程序</span></span>
<span class="line"><span style="color:#6A737D;"> *</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@author</span><span style="color:#6A737D;"> Charles7c</span></span>
<span class="line"><span style="color:#6A737D;"> * @date 2022/8/24 15:46</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">EnableFeignClients</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">SpringBootApplication</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">WebApiApplication</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] </span><span style="color:#E36209;">args</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">try</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">            System.</span><span style="color:#6F42C1;">setProperty</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;spring.devtools.restart.enabled&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;false&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">            SpringApplication application </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">SpringApplication</span><span style="color:#24292E;">(WebApiApplication.class);</span></span>
<span class="line"><span style="color:#24292E;">            application.</span><span style="color:#6F42C1;">setApplicationStartup</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">BufferingApplicationStartup</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">2048</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">            application.</span><span style="color:#6F42C1;">run</span><span style="color:#24292E;">(args);</span></span>
<span class="line"><span style="color:#24292E;">        } </span><span style="color:#D73A49;">catch</span><span style="color:#24292E;"> (Exception </span><span style="color:#E36209;">e</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">throw</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">RuntimeException</span><span style="color:#24292E;">(e);</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>映入眼帘的就是：<code>java.lang.NoClassDefFoundError: org/springframework/boot/context/properties/ConfigurationBeanFactoryMetadata</code> 。这种错误我熟啊，八成是和版本有关。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#adbac7;">已连接到目标 VM, 地址: &#39;&#39;127.0.0.1:59906&#39;，传输: &#39;套接字&#39;&#39;</span></span>
<span class="line"><span style="color:#adbac7;">17:59:40.709 [main] INFO org.springframework.boot.devtools.restart.RestartApplicationListener - Restart disabled due to System property &#39;spring.devtools.restart.enabled&#39; being set to false</span></span>
<span class="line"><span style="color:#adbac7;">Exception in thread &quot;main&quot; java.lang.RuntimeException: org.springframework.beans.factory.BeanCreationException: Error creating bean with name &#39;configurationPropertiesBeans&#39; defined in org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.cloud.context.properties.ConfigurationPropertiesBeans]: Factory method &#39;configurationPropertiesBeans&#39; threw exception; nested exception is java.lang.NoClassDefFoundError: org/springframework/boot/context/properties/ConfigurationBeanFactoryMetadata</span></span>
<span class="line"><span style="color:#adbac7;">	at com.xxx.WebApiApplication.main(WebApiApplication.java:26)</span></span>
<span class="line"><span style="color:#adbac7;">Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name &#39;configurationPropertiesBeans&#39; defined in org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.cloud.context.properties.ConfigurationPropertiesBeans]: Factory method &#39;configurationPropertiesBeans&#39; threw exception; nested exception is java.lang.NoClassDefFoundError: org/springframework/boot/context/properties/ConfigurationBeanFactoryMetadata</span></span>
<span class="line"><span style="color:#adbac7;">	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:658)</span></span>
<span class="line"><span style="color:#adbac7;">	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:486)</span></span>
<span class="line"><span style="color:#adbac7;">	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)</span></span>
<span class="line"><span style="color:#adbac7;">	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)</span></span>
<span class="line"><span style="color:#adbac7;">	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)</span></span>
<span class="line"><span style="color:#adbac7;">	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)</span></span>
<span class="line"><span style="color:#adbac7;">	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)</span></span>
<span class="line"><span style="color:#adbac7;">	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)</span></span>
<span class="line"><span style="color:#adbac7;">	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)</span></span>
<span class="line"><span style="color:#adbac7;">	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:213)</span></span>
<span class="line"><span style="color:#adbac7;">	at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:270)</span></span>
<span class="line"><span style="color:#adbac7;">	at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:762)</span></span>
<span class="line"><span style="color:#adbac7;">	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:567)</span></span>
<span class="line"><span style="color:#adbac7;">	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)</span></span>
<span class="line"><span style="color:#adbac7;">	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)</span></span>
<span class="line"><span style="color:#adbac7;">	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)</span></span>
<span class="line"><span style="color:#adbac7;">	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:164)</span></span>
<span class="line"><span style="color:#adbac7;">	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.bootstrapServiceContext(BootstrapApplicationListener.java:208)</span></span>
<span class="line"><span style="color:#adbac7;">	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.onApplicationEvent(BootstrapApplicationListener.java:104)</span></span>
<span class="line"><span style="color:#adbac7;">	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.onApplicationEvent(BootstrapApplicationListener.java:70)</span></span>
<span class="line"><span style="color:#adbac7;">	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:176)</span></span>
<span class="line"><span style="color:#adbac7;">	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:169)</span></span>
<span class="line"><span style="color:#adbac7;">	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:143)</span></span>
<span class="line"><span style="color:#adbac7;">	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:131)</span></span>
<span class="line"><span style="color:#adbac7;">	at org.springframework.boot.context.event.EventPublishingRunListener.environmentPrepared(EventPublishingRunListener.java:85)</span></span>
<span class="line"><span style="color:#adbac7;">	at org.springframework.boot.SpringApplicationRunListeners.lambda$environmentPrepared$2(SpringApplicationRunListeners.java:66)</span></span>
<span class="line"><span style="color:#adbac7;">	at java.util.ArrayList.forEach(ArrayList.java:1257)</span></span>
<span class="line"><span style="color:#adbac7;">	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:120)</span></span>
<span class="line"><span style="color:#adbac7;">	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:114)</span></span>
<span class="line"><span style="color:#adbac7;">	at org.springframework.boot.SpringApplicationRunListeners.environmentPrepared(SpringApplicationRunListeners.java:65)</span></span>
<span class="line"><span style="color:#adbac7;">	at org.springframework.boot.SpringApplication.prepareEnvironment(SpringApplication.java:344)</span></span>
<span class="line"><span style="color:#adbac7;">	at org.springframework.boot.SpringApplication.run(SpringApplication.java:302)</span></span>
<span class="line"><span style="color:#adbac7;">	at com.xxx.WebApiApplication.main(WebApiApplication.java:23)</span></span>
<span class="line"><span style="color:#adbac7;">Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.cloud.context.properties.ConfigurationPropertiesBeans]: Factory method &#39;configurationPropertiesBeans&#39; threw exception; nested exception is java.lang.NoClassDefFoundError: org/springframework/boot/context/properties/ConfigurationBeanFactoryMetadata</span></span>
<span class="line"><span style="color:#adbac7;">	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)</span></span>
<span class="line"><span style="color:#adbac7;">	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)</span></span>
<span class="line"><span style="color:#adbac7;">	... 32 more</span></span>
<span class="line"><span style="color:#adbac7;">Caused by: java.lang.NoClassDefFoundError: org/springframework/boot/context/properties/ConfigurationBeanFactoryMetadata</span></span>
<span class="line"><span style="color:#adbac7;">	at org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration.configurationPropertiesBeans(ConfigurationPropertiesRebinderAutoConfiguration.java:51)</span></span>
<span class="line"><span style="color:#adbac7;">	at org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$97caf445.CGLIB$configurationPropertiesBeans$1(&lt;generated&gt;)</span></span>
<span class="line"><span style="color:#adbac7;">	at org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$97caf445$$FastClassBySpringCGLIB$$3f1d782c.invoke(&lt;generated&gt;)</span></span>
<span class="line"><span style="color:#adbac7;">	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)</span></span>
<span class="line"><span style="color:#adbac7;">	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)</span></span>
<span class="line"><span style="color:#adbac7;">	at org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$97caf445.configurationPropertiesBeans(&lt;generated&gt;)</span></span>
<span class="line"><span style="color:#adbac7;">	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</span></span>
<span class="line"><span style="color:#adbac7;">	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)</span></span>
<span class="line"><span style="color:#adbac7;">	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)</span></span>
<span class="line"><span style="color:#adbac7;">	at java.lang.reflect.Method.invoke(Method.java:498)</span></span>
<span class="line"><span style="color:#adbac7;">	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)</span></span>
<span class="line"><span style="color:#adbac7;">	... 33 more</span></span>
<span class="line"><span style="color:#adbac7;">Caused by: java.lang.ClassNotFoundException: org.springframework.boot.context.properties.ConfigurationBeanFactoryMetadata</span></span>
<span class="line"><span style="color:#adbac7;">	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)</span></span>
<span class="line"><span style="color:#adbac7;">	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)</span></span>
<span class="line"><span style="color:#adbac7;">	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:349)</span></span>
<span class="line"><span style="color:#adbac7;">	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)</span></span>
<span class="line"><span style="color:#adbac7;">	... 44 more</span></span>
<span class="line"><span style="color:#adbac7;">与目标 VM 断开连接, 地址为: &#39;&#39;127.0.0.1:59906&#39;，传输: &#39;套接字&#39;&#39;</span></span>
<span class="line"><span style="color:#adbac7;"></span></span>
<span class="line"><span style="color:#adbac7;">进程已结束,退出代码1</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">已连接到目标 VM, 地址: &#39;&#39;127.0.0.1:59906&#39;，传输: &#39;套接字&#39;&#39;</span></span>
<span class="line"><span style="color:#24292e;">17:59:40.709 [main] INFO org.springframework.boot.devtools.restart.RestartApplicationListener - Restart disabled due to System property &#39;spring.devtools.restart.enabled&#39; being set to false</span></span>
<span class="line"><span style="color:#24292e;">Exception in thread &quot;main&quot; java.lang.RuntimeException: org.springframework.beans.factory.BeanCreationException: Error creating bean with name &#39;configurationPropertiesBeans&#39; defined in org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.cloud.context.properties.ConfigurationPropertiesBeans]: Factory method &#39;configurationPropertiesBeans&#39; threw exception; nested exception is java.lang.NoClassDefFoundError: org/springframework/boot/context/properties/ConfigurationBeanFactoryMetadata</span></span>
<span class="line"><span style="color:#24292e;">	at com.xxx.WebApiApplication.main(WebApiApplication.java:26)</span></span>
<span class="line"><span style="color:#24292e;">Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name &#39;configurationPropertiesBeans&#39; defined in org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.cloud.context.properties.ConfigurationPropertiesBeans]: Factory method &#39;configurationPropertiesBeans&#39; threw exception; nested exception is java.lang.NoClassDefFoundError: org/springframework/boot/context/properties/ConfigurationBeanFactoryMetadata</span></span>
<span class="line"><span style="color:#24292e;">	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:658)</span></span>
<span class="line"><span style="color:#24292e;">	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:486)</span></span>
<span class="line"><span style="color:#24292e;">	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)</span></span>
<span class="line"><span style="color:#24292e;">	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)</span></span>
<span class="line"><span style="color:#24292e;">	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)</span></span>
<span class="line"><span style="color:#24292e;">	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)</span></span>
<span class="line"><span style="color:#24292e;">	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)</span></span>
<span class="line"><span style="color:#24292e;">	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)</span></span>
<span class="line"><span style="color:#24292e;">	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)</span></span>
<span class="line"><span style="color:#24292e;">	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:213)</span></span>
<span class="line"><span style="color:#24292e;">	at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:270)</span></span>
<span class="line"><span style="color:#24292e;">	at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:762)</span></span>
<span class="line"><span style="color:#24292e;">	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:567)</span></span>
<span class="line"><span style="color:#24292e;">	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)</span></span>
<span class="line"><span style="color:#24292e;">	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)</span></span>
<span class="line"><span style="color:#24292e;">	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)</span></span>
<span class="line"><span style="color:#24292e;">	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:164)</span></span>
<span class="line"><span style="color:#24292e;">	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.bootstrapServiceContext(BootstrapApplicationListener.java:208)</span></span>
<span class="line"><span style="color:#24292e;">	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.onApplicationEvent(BootstrapApplicationListener.java:104)</span></span>
<span class="line"><span style="color:#24292e;">	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.onApplicationEvent(BootstrapApplicationListener.java:70)</span></span>
<span class="line"><span style="color:#24292e;">	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:176)</span></span>
<span class="line"><span style="color:#24292e;">	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:169)</span></span>
<span class="line"><span style="color:#24292e;">	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:143)</span></span>
<span class="line"><span style="color:#24292e;">	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:131)</span></span>
<span class="line"><span style="color:#24292e;">	at org.springframework.boot.context.event.EventPublishingRunListener.environmentPrepared(EventPublishingRunListener.java:85)</span></span>
<span class="line"><span style="color:#24292e;">	at org.springframework.boot.SpringApplicationRunListeners.lambda$environmentPrepared$2(SpringApplicationRunListeners.java:66)</span></span>
<span class="line"><span style="color:#24292e;">	at java.util.ArrayList.forEach(ArrayList.java:1257)</span></span>
<span class="line"><span style="color:#24292e;">	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:120)</span></span>
<span class="line"><span style="color:#24292e;">	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:114)</span></span>
<span class="line"><span style="color:#24292e;">	at org.springframework.boot.SpringApplicationRunListeners.environmentPrepared(SpringApplicationRunListeners.java:65)</span></span>
<span class="line"><span style="color:#24292e;">	at org.springframework.boot.SpringApplication.prepareEnvironment(SpringApplication.java:344)</span></span>
<span class="line"><span style="color:#24292e;">	at org.springframework.boot.SpringApplication.run(SpringApplication.java:302)</span></span>
<span class="line"><span style="color:#24292e;">	at com.xxx.WebApiApplication.main(WebApiApplication.java:23)</span></span>
<span class="line"><span style="color:#24292e;">Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.cloud.context.properties.ConfigurationPropertiesBeans]: Factory method &#39;configurationPropertiesBeans&#39; threw exception; nested exception is java.lang.NoClassDefFoundError: org/springframework/boot/context/properties/ConfigurationBeanFactoryMetadata</span></span>
<span class="line"><span style="color:#24292e;">	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)</span></span>
<span class="line"><span style="color:#24292e;">	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)</span></span>
<span class="line"><span style="color:#24292e;">	... 32 more</span></span>
<span class="line"><span style="color:#24292e;">Caused by: java.lang.NoClassDefFoundError: org/springframework/boot/context/properties/ConfigurationBeanFactoryMetadata</span></span>
<span class="line"><span style="color:#24292e;">	at org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration.configurationPropertiesBeans(ConfigurationPropertiesRebinderAutoConfiguration.java:51)</span></span>
<span class="line"><span style="color:#24292e;">	at org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$97caf445.CGLIB$configurationPropertiesBeans$1(&lt;generated&gt;)</span></span>
<span class="line"><span style="color:#24292e;">	at org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$97caf445$$FastClassBySpringCGLIB$$3f1d782c.invoke(&lt;generated&gt;)</span></span>
<span class="line"><span style="color:#24292e;">	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)</span></span>
<span class="line"><span style="color:#24292e;">	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)</span></span>
<span class="line"><span style="color:#24292e;">	at org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$97caf445.configurationPropertiesBeans(&lt;generated&gt;)</span></span>
<span class="line"><span style="color:#24292e;">	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</span></span>
<span class="line"><span style="color:#24292e;">	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)</span></span>
<span class="line"><span style="color:#24292e;">	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)</span></span>
<span class="line"><span style="color:#24292e;">	at java.lang.reflect.Method.invoke(Method.java:498)</span></span>
<span class="line"><span style="color:#24292e;">	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)</span></span>
<span class="line"><span style="color:#24292e;">	... 33 more</span></span>
<span class="line"><span style="color:#24292e;">Caused by: java.lang.ClassNotFoundException: org.springframework.boot.context.properties.ConfigurationBeanFactoryMetadata</span></span>
<span class="line"><span style="color:#24292e;">	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)</span></span>
<span class="line"><span style="color:#24292e;">	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)</span></span>
<span class="line"><span style="color:#24292e;">	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:349)</span></span>
<span class="line"><span style="color:#24292e;">	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)</span></span>
<span class="line"><span style="color:#24292e;">	... 44 more</span></span>
<span class="line"><span style="color:#24292e;">与目标 VM 断开连接, 地址为: &#39;&#39;127.0.0.1:59906&#39;，传输: &#39;套接字&#39;&#39;</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">进程已结束,退出代码1</span></span></code></pre></div><h2 id="解决方案" tabindex="-1">解决方案 <a class="header-anchor" href="#解决方案" aria-label="Permalink to &quot;解决方案&quot;">​</a></h2><p>实际上，早就等着这一步呢，笔者只是不死心尝试一下，前文也提到了，这个项目用的 Spring Boot 2.7.2 版本，而笔者引入的依赖是老项目中的依赖，老项目的 Spring Boot 是 2.0.4.RELEASE 版本，和 2.7.2 差了好几代了，怎么可能还兼容这么好呢。</p><div class="tip custom-block"><p class="custom-block-title">笔者说</p><p>Spring Boot 这种大版本升级，往往涉及到很多类的删除和重构，所以说学无止境啊。</p></div><p>好了，那就去 <a href="https://spring.io/projects/spring-cloud#overview" target="_blank" rel="noreferrer">Spring Cloud 概述</a> 中摸一下 Spring Cloud 和 Spring Boot 最新的版本对应关系，然后好能确定该使用哪一个版本。</p><table><thead><tr><th style="text-align:left;">Release Train</th><th style="text-align:left;">Boot Version</th></tr></thead><tbody><tr><td style="text-align:left;">2021.0.x aka Jubilee</td><td style="text-align:left;">2.6.x, 2.7.x (Starting with 2021.0.3)</td></tr><tr><td style="text-align:left;">2020.0.x aka Ilford</td><td style="text-align:left;">2.4.x, 2.5.x (Starting with 2020.0.3)</td></tr><tr><td style="text-align:left;">Hoxton</td><td style="text-align:left;">2.2.x, 2.3.x (Starting with SR5)</td></tr><tr><td style="text-align:left;">Greenwich</td><td style="text-align:left;">2.1.x</td></tr><tr><td style="text-align:left;">Finchley</td><td style="text-align:left;">2.0.x</td></tr><tr><td style="text-align:left;">Edgware</td><td style="text-align:left;">1.5.x</td></tr><tr><td style="text-align:left;">Dalston</td><td style="text-align:left;">1.5.x</td></tr></tbody></table><p>根据 Spring Cloud 概述页面的介绍，2.7.x 版本的 Spring Boot 可以使用 2021.0.x 任意版本的 Spring Cloud，笔者最后使用了 2021.0.3 版本。</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#ADBAC7;">&lt;</span><span style="color:#8DDB8C;">properties</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">    &lt;</span><span style="color:#8DDB8C;">spring-cloud.version</span><span style="color:#ADBAC7;">&gt;2021.0.3&lt;/</span><span style="color:#8DDB8C;">spring-cloud.version</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">&lt;/</span><span style="color:#8DDB8C;">properties</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#768390;">&lt;!-- 全局版本锁定 --&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">&lt;</span><span style="color:#8DDB8C;">dependencyManagement</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#768390;">&lt;!-- Spring Cloud --&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">    &lt;</span><span style="color:#8DDB8C;">dependency</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">        &lt;</span><span style="color:#8DDB8C;">groupId</span><span style="color:#ADBAC7;">&gt;org.springframework.cloud&lt;/</span><span style="color:#8DDB8C;">groupId</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">        &lt;</span><span style="color:#8DDB8C;">artifactId</span><span style="color:#ADBAC7;">&gt;spring-cloud-dependencies&lt;/</span><span style="color:#8DDB8C;">artifactId</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">        &lt;</span><span style="color:#8DDB8C;">version</span><span style="color:#ADBAC7;">&gt;\${spring-cloud.version}&lt;/</span><span style="color:#8DDB8C;">version</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">        &lt;</span><span style="color:#8DDB8C;">type</span><span style="color:#ADBAC7;">&gt;pom&lt;/</span><span style="color:#8DDB8C;">type</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">        &lt;</span><span style="color:#8DDB8C;">scope</span><span style="color:#ADBAC7;">&gt;import&lt;/</span><span style="color:#8DDB8C;">scope</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">    &lt;/</span><span style="color:#8DDB8C;">dependency</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">&lt;/</span><span style="color:#8DDB8C;">dependencyManagement</span><span style="color:#ADBAC7;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">properties</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">spring-cloud.version</span><span style="color:#24292E;">&gt;2021.0.3&lt;/</span><span style="color:#22863A;">spring-cloud.version</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">properties</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">&lt;!-- 全局版本锁定 --&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">dependencyManagement</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">&lt;!-- Spring Cloud --&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">dependency</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;org.springframework.cloud&lt;/</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;spring-cloud-dependencies&lt;/</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">version</span><span style="color:#24292E;">&gt;\${spring-cloud.version}&lt;/</span><span style="color:#22863A;">version</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">type</span><span style="color:#24292E;">&gt;pom&lt;/</span><span style="color:#22863A;">type</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">scope</span><span style="color:#24292E;">&gt;import&lt;/</span><span style="color:#22863A;">scope</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;/</span><span style="color:#22863A;">dependency</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">dependencyManagement</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><p>再启动，熟悉的 Spring Boot Banner 出现了，但是最后又报错了。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#adbac7;">Exception in thread &quot;main&quot; java.lang.RuntimeException: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name &#39;captchaController&#39; defined in file [D:\\IdeaProjects\\IdeaProjects-charles7c\\fucloud-union-service\\service-webapi\\target\\classes\\com\\xxx\\webapi\\controller\\common\\CaptchaController.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name &#39;com.xxx.core.rest.CloudUnionDataRestApi&#39;: Unexpected exception during bean creation; nested exception is java.lang.IllegalStateException: No Feign Client for loadBalancing defined. Did you forget to include spring-cloud-starter-loadbalancer?</span></span>
<span class="line"><span style="color:#adbac7;">	at com.xxx.WebApiApplication.main(WebApiApplication.java:26)</span></span>
<span class="line"><span style="color:#adbac7;">Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name &#39;captchaController&#39; defined in file [D:\\IdeaProjects\\IdeaProjects-charles7c\\fucloud-union-service\\service-webapi\\target\\classes\\com\\xxx\\webapi\\controller\\common\\CaptchaController.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name &#39;com.xxx.core.rest.CloudUnionDataRestApi&#39;: Unexpected exception during bean creation; nested exception is java.lang.IllegalStateException: No Feign Client for loadBalancing defined. Did you forget to include spring-cloud-starter-loadbalancer?</span></span>
<span class="line"><span style="color:#adbac7;">	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)</span></span>
<span class="line"><span style="color:#adbac7;">	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)</span></span>
<span class="line"><span style="color:#adbac7;">	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)</span></span>
<span class="line"><span style="color:#adbac7;">	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)</span></span>
<span class="line"><span style="color:#adbac7;">	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)</span></span>
<span class="line"><span style="color:#adbac7;">	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)</span></span>
<span class="line"><span style="color:#adbac7;">	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)</span></span>
<span class="line"><span style="color:#adbac7;">	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)</span></span>
<span class="line"><span style="color:#adbac7;">	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)</span></span>
<span class="line"><span style="color:#adbac7;">	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)</span></span>
<span class="line"><span style="color:#adbac7;">	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)</span></span>
<span class="line"><span style="color:#adbac7;">	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)</span></span>
<span class="line"><span style="color:#adbac7;">	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)</span></span>
<span class="line"><span style="color:#adbac7;">	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)</span></span>
<span class="line"><span style="color:#adbac7;">	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)</span></span>
<span class="line"><span style="color:#adbac7;">	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)</span></span>
<span class="line"><span style="color:#adbac7;">	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)</span></span>
<span class="line"><span style="color:#adbac7;">	at com.xxx.WebApiApplication.main(WebApiApplication.java:23)</span></span>
<span class="line"><span style="color:#adbac7;">Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name &#39;com.xxx.core.rest.CloudUnionDataRestApi&#39;: Unexpected exception during bean creation; nested exception is java.lang.IllegalStateException: No Feign Client for loadBalancing defined. Did you forget to include spring-cloud-starter-loadbalancer?</span></span>
<span class="line"><span style="color:#adbac7;">	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:555)</span></span>
<span class="line"><span style="color:#adbac7;">	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)</span></span>
<span class="line"><span style="color:#adbac7;">	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)</span></span>
<span class="line"><span style="color:#adbac7;">	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)</span></span>
<span class="line"><span style="color:#adbac7;">	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)</span></span>
<span class="line"><span style="color:#adbac7;">	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)</span></span>
<span class="line"><span style="color:#adbac7;">	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)</span></span>
<span class="line"><span style="color:#adbac7;">	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)</span></span>
<span class="line"><span style="color:#adbac7;">	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)</span></span>
<span class="line"><span style="color:#adbac7;">	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)</span></span>
<span class="line"><span style="color:#adbac7;">	... 17 more</span></span>
<span class="line"><span style="color:#adbac7;">Caused by: java.lang.IllegalStateException: No Feign Client for loadBalancing defined. Did you forget to include spring-cloud-starter-loadbalancer?</span></span>
<span class="line"><span style="color:#adbac7;">	at org.springframework.cloud.openfeign.FeignClientFactoryBean.loadBalance(FeignClientFactoryBean.java:382)</span></span>
<span class="line"><span style="color:#adbac7;">	at org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget(FeignClientFactoryBean.java:427)</span></span>
<span class="line"><span style="color:#adbac7;">	at org.springframework.cloud.openfeign.FeignClientFactoryBean.getObject(FeignClientFactoryBean.java:402)</span></span>
<span class="line"><span style="color:#adbac7;">	at org.springframework.cloud.openfeign.FeignClientsRegistrar.lambda$registerFeignClient$0(FeignClientsRegistrar.java:235)</span></span>
<span class="line"><span style="color:#adbac7;">	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.obtainFromSupplier(AbstractAutowireCapableBeanFactory.java:1249)</span></span>
<span class="line"><span style="color:#adbac7;">	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1191)</span></span>
<span class="line"><span style="color:#adbac7;">	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)</span></span>
<span class="line"><span style="color:#adbac7;">	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)</span></span>
<span class="line"><span style="color:#adbac7;">	... 26 more</span></span>
<span class="line"><span style="color:#adbac7;">与目标 VM 断开连接, 地址为: &#39;&#39;127.0.0.1:52466&#39;，传输: &#39;套接字&#39;&#39;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">Exception in thread &quot;main&quot; java.lang.RuntimeException: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name &#39;captchaController&#39; defined in file [D:\\IdeaProjects\\IdeaProjects-charles7c\\fucloud-union-service\\service-webapi\\target\\classes\\com\\xxx\\webapi\\controller\\common\\CaptchaController.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name &#39;com.xxx.core.rest.CloudUnionDataRestApi&#39;: Unexpected exception during bean creation; nested exception is java.lang.IllegalStateException: No Feign Client for loadBalancing defined. Did you forget to include spring-cloud-starter-loadbalancer?</span></span>
<span class="line"><span style="color:#24292e;">	at com.xxx.WebApiApplication.main(WebApiApplication.java:26)</span></span>
<span class="line"><span style="color:#24292e;">Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name &#39;captchaController&#39; defined in file [D:\\IdeaProjects\\IdeaProjects-charles7c\\fucloud-union-service\\service-webapi\\target\\classes\\com\\xxx\\webapi\\controller\\common\\CaptchaController.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name &#39;com.xxx.core.rest.CloudUnionDataRestApi&#39;: Unexpected exception during bean creation; nested exception is java.lang.IllegalStateException: No Feign Client for loadBalancing defined. Did you forget to include spring-cloud-starter-loadbalancer?</span></span>
<span class="line"><span style="color:#24292e;">	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)</span></span>
<span class="line"><span style="color:#24292e;">	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)</span></span>
<span class="line"><span style="color:#24292e;">	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)</span></span>
<span class="line"><span style="color:#24292e;">	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)</span></span>
<span class="line"><span style="color:#24292e;">	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)</span></span>
<span class="line"><span style="color:#24292e;">	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)</span></span>
<span class="line"><span style="color:#24292e;">	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)</span></span>
<span class="line"><span style="color:#24292e;">	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)</span></span>
<span class="line"><span style="color:#24292e;">	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)</span></span>
<span class="line"><span style="color:#24292e;">	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)</span></span>
<span class="line"><span style="color:#24292e;">	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)</span></span>
<span class="line"><span style="color:#24292e;">	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)</span></span>
<span class="line"><span style="color:#24292e;">	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)</span></span>
<span class="line"><span style="color:#24292e;">	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)</span></span>
<span class="line"><span style="color:#24292e;">	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)</span></span>
<span class="line"><span style="color:#24292e;">	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)</span></span>
<span class="line"><span style="color:#24292e;">	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)</span></span>
<span class="line"><span style="color:#24292e;">	at com.xxx.WebApiApplication.main(WebApiApplication.java:23)</span></span>
<span class="line"><span style="color:#24292e;">Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name &#39;com.xxx.core.rest.CloudUnionDataRestApi&#39;: Unexpected exception during bean creation; nested exception is java.lang.IllegalStateException: No Feign Client for loadBalancing defined. Did you forget to include spring-cloud-starter-loadbalancer?</span></span>
<span class="line"><span style="color:#24292e;">	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:555)</span></span>
<span class="line"><span style="color:#24292e;">	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)</span></span>
<span class="line"><span style="color:#24292e;">	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)</span></span>
<span class="line"><span style="color:#24292e;">	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)</span></span>
<span class="line"><span style="color:#24292e;">	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)</span></span>
<span class="line"><span style="color:#24292e;">	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)</span></span>
<span class="line"><span style="color:#24292e;">	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)</span></span>
<span class="line"><span style="color:#24292e;">	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)</span></span>
<span class="line"><span style="color:#24292e;">	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)</span></span>
<span class="line"><span style="color:#24292e;">	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)</span></span>
<span class="line"><span style="color:#24292e;">	... 17 more</span></span>
<span class="line"><span style="color:#24292e;">Caused by: java.lang.IllegalStateException: No Feign Client for loadBalancing defined. Did you forget to include spring-cloud-starter-loadbalancer?</span></span>
<span class="line"><span style="color:#24292e;">	at org.springframework.cloud.openfeign.FeignClientFactoryBean.loadBalance(FeignClientFactoryBean.java:382)</span></span>
<span class="line"><span style="color:#24292e;">	at org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget(FeignClientFactoryBean.java:427)</span></span>
<span class="line"><span style="color:#24292e;">	at org.springframework.cloud.openfeign.FeignClientFactoryBean.getObject(FeignClientFactoryBean.java:402)</span></span>
<span class="line"><span style="color:#24292e;">	at org.springframework.cloud.openfeign.FeignClientsRegistrar.lambda$registerFeignClient$0(FeignClientsRegistrar.java:235)</span></span>
<span class="line"><span style="color:#24292e;">	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.obtainFromSupplier(AbstractAutowireCapableBeanFactory.java:1249)</span></span>
<span class="line"><span style="color:#24292e;">	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1191)</span></span>
<span class="line"><span style="color:#24292e;">	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)</span></span>
<span class="line"><span style="color:#24292e;">	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)</span></span>
<span class="line"><span style="color:#24292e;">	... 26 more</span></span>
<span class="line"><span style="color:#24292e;">与目标 VM 断开连接, 地址为: &#39;&#39;127.0.0.1:52466&#39;，传输: &#39;套接字&#39;&#39;</span></span></code></pre></div><p>这回也是因为版本升级引起的，而且提示的已经很到位了，要求我们单独引入一个 <code>spring-cloud-loadbalancer</code> 依赖。</p><div class="tip custom-block"><p class="custom-block-title">笔者说</p><p>Spring Cloud Open Feign 在 Hoxton.M2 版本之后就不再使用 Ribbon 了，改为使用 Spring Cloud Loadbalancer。</p></div><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#ADBAC7;">&lt;</span><span style="color:#8DDB8C;">dependencies</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#768390;">&lt;!-- Feign，用于服务间的 HTTP 调用 --&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">    &lt;</span><span style="color:#8DDB8C;">dependency</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">        &lt;</span><span style="color:#8DDB8C;">groupId</span><span style="color:#ADBAC7;">&gt;org.springframework.cloud&lt;/</span><span style="color:#8DDB8C;">groupId</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">        &lt;</span><span style="color:#8DDB8C;">artifactId</span><span style="color:#ADBAC7;">&gt;spring-cloud-starter-openfeign&lt;/</span><span style="color:#8DDB8C;">artifactId</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">    &lt;/</span><span style="color:#8DDB8C;">dependency</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span></span>
<span class="line"><span style="color:#ADBAC7;">    &lt;</span><span style="color:#8DDB8C;">dependency</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">        &lt;</span><span style="color:#8DDB8C;">groupId</span><span style="color:#ADBAC7;">&gt;org.springframework.cloud&lt;/</span><span style="color:#8DDB8C;">groupId</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">        &lt;</span><span style="color:#8DDB8C;">artifactId</span><span style="color:#ADBAC7;">&gt;spring-cloud-loadbalancer&lt;/</span><span style="color:#8DDB8C;">artifactId</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">    &lt;/</span><span style="color:#8DDB8C;">dependency</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">&lt;/</span><span style="color:#8DDB8C;">dependencies</span><span style="color:#ADBAC7;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">dependencies</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">&lt;!-- Feign，用于服务间的 HTTP 调用 --&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">dependency</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;org.springframework.cloud&lt;/</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;spring-cloud-starter-openfeign&lt;/</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;/</span><span style="color:#22863A;">dependency</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    </span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">dependency</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;org.springframework.cloud&lt;/</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;spring-cloud-loadbalancer&lt;/</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;/</span><span style="color:#22863A;">dependency</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">dependencies</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><p>最后启动成功。</p>`,37);function D(a,v,m,F,E,w){const p=l,t=d("ClientOnly");return e(),c("div",null,[b,i(t,null,{default:y(()=>{var s,n;return[(((s=a.$frontmatter)==null?void 0:s.aside)??!0)&&(((n=a.$frontmatter)==null?void 0:n.showArticleMetadata)??!0)?(e(),u(p,{key:0,article:a.$frontmatter},null,8,["article"])):C("",!0)]}),_:1}),f])}const S=r(B,[["render",D]]);export{j as __pageData,S as default};
