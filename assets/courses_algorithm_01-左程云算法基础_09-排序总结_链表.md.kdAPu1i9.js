import{_ as h}from"./chunks/ArticleMetadata.1_--bNMz.js";import{_ as k,D as p,o as t,c as r,I as d,w as o,k as n,a as A,R as c,b as g,e as y}from"./chunks/framework.Dn7lIAzt.js";import"./chunks/md5.vgHT5zCM.js";const v=JSON.parse('{"title":"快慢指针","description":"","frontmatter":{"title":"快慢指针","author":"阿源","date":"2023/03/09 12:00","categories":["数据结构与算法"],"tags":["数据结构与算法"]},"headers":[],"relativePath":"courses/algorithm/01-左程云算法基础/09-排序总结_链表.md","filePath":"courses/algorithm/01-左程云算法基础/09-排序总结_链表.md","lastUpdated":1713341239000}'),C={name:"courses/algorithm/01-左程云算法基础/09-排序总结_链表.md"},D=n("h1",{id:"快慢指针",tabindex:"-1"},[A("快慢指针 "),n("a",{class:"header-anchor",href:"#快慢指针","aria-label":'Permalink to "快慢指针"'},"​")],-1),_=c(`<h2 id="_1-快慢指针" tabindex="-1">1. 快慢指针 <a class="header-anchor" href="#_1-快慢指针" aria-label="Permalink to &quot;1. 快慢指针&quot;">​</a></h2><ul><li>输入链表头结点，奇数长度返回中点，偶数长度返回上中点</li></ul><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// head 头</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> static</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> Node </span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">midOrUpMidNode</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(Node head) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">		if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (head </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> null</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> ||</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> head.next </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> null</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> ||</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> head.next.next </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">			return</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> head;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">		}</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">		// 链表有3个点或以上</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">		Node</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> slow</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> head.next;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">		Node</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> fast</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> head.next.next;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">		while</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (fast.next </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> null</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> &amp;&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> fast.next.next </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">			slow </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> slow.next;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">			fast </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> fast.next.next;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">		}</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">		return</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> slow;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	}</span></span></code></pre></div>`,3);function B(s,u,m,F,E,f){const e=h,l=p("ClientOnly");return t(),r("div",null,[D,d(l,null,{default:o(()=>{var i,a;return[(((i=s.$frontmatter)==null?void 0:i.aside)??!0)&&(((a=s.$frontmatter)==null?void 0:a.showArticleMetadata)??!0)?(t(),g(e,{key:0,article:s.$frontmatter},null,8,["article"])):y("",!0)]}),_:1}),_])}const w=k(C,[["render",B]]);export{v as __pageData,w as default};
