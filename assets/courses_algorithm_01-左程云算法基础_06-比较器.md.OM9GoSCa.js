import{_ as h}from"./chunks/ArticleMetadata.Xa7L4Afm.js";import{_ as r,D as p,o as t,c as k,I as o,w as d,k as e,a as c,R as g,b as _,e as m}from"./chunks/framework.Dn7lIAzt.js";import"./chunks/md5.vgHT5zCM.js";const P=JSON.parse('{"title":"比较器","description":"","frontmatter":{"title":"比较器","author":"阿源","date":"2023/03/06 12:00","categories":["数据结构与算法"],"tags":["数据结构与算法"]},"headers":[],"relativePath":"courses/algorithm/01-左程云算法基础/06-比较器.md","filePath":"courses/algorithm/01-左程云算法基础/06-比较器.md","lastUpdated":1713341239000}'),A={name:"courses/algorithm/01-左程云算法基础/06-比较器.md"},u=e("h1",{id:"比较器",tabindex:"-1"},[c("比较器 "),e("a",{class:"header-anchor",href:"#比较器","aria-label":'Permalink to "比较器"'},"​")],-1),y=g(`<h2 id="_1-比较器" tabindex="-1">1. 比较器 <a class="header-anchor" href="#_1-比较器" aria-label="Permalink to &quot;1. 比较器&quot;">​</a></h2><ul><li>比较器的实质就是重载比较运算符</li><li>比较器可以很好的应用在特殊标准的排序上</li><li>比较器可以很好的应用在根据特殊排序的结构上</li><li>写代码变得异常容易，还用于范型编程</li></ul><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> EdgeComparator</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> implements</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6CB6FF;"> Comparator</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">Edge</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt; {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">		@</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">Override</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">		public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> compare</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(Edge </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">o1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, Edge </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">o2</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">			return</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> o1.weight </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> o2.weight;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">		}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	}</span></span></code></pre></div><h2 id="_2-堆结构" tabindex="-1">2. 堆结构 <a class="header-anchor" href="#_2-堆结构" aria-label="Permalink to &quot;2. 堆结构&quot;">​</a></h2>`,4);function D(s,C,F,E,B,f){const n=h,l=p("ClientOnly");return t(),k("div",null,[u,o(l,null,{default:d(()=>{var a,i;return[(((a=s.$frontmatter)==null?void 0:a.aside)??!0)&&(((i=s.$frontmatter)==null?void 0:i.showArticleMetadata)??!0)?(t(),_(n,{key:0,article:s.$frontmatter},null,8,["article"])):m("",!0)]}),_:1}),y])}const T=r(A,[["render",D]]);export{P as __pageData,T as default};
