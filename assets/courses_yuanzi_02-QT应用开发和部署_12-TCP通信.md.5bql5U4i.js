import{_ as l}from"./chunks/ArticleMetadata.1_--bNMz.js";import{_ as p,D as e,o as n,c as r,I as d,w as C,k as t,a as g,R as F,b as y,e as o}from"./chunks/framework.Dn7lIAzt.js";import"./chunks/md5.vgHT5zCM.js";const b=JSON.parse('{"title":"TCP通信","description":"","frontmatter":{"title":"TCP通信","author":"阿源","date":"2023/08/12 12:00","categories":["QT快速入门"],"tags":["C++","QT5"]},"headers":[],"relativePath":"courses/yuanzi/02-QT应用开发和部署/12-TCP通信.md","filePath":"courses/yuanzi/02-QT应用开发和部署/12-TCP通信.md","lastUpdated":1713341239000}'),c={name:"courses/yuanzi/02-QT应用开发和部署/12-TCP通信.md"},A=t("h1",{id:"正点原子qt之tcp通信",tabindex:"-1"},[g("正点原子QT之TCP通信 "),t("a",{class:"header-anchor",href:"#正点原子qt之tcp通信","aria-label":'Permalink to "正点原子QT之TCP通信"'},"​")],-1),D=F(`<h2 id="_14-tcp通信" tabindex="-1">14. TCP通信 <a class="header-anchor" href="#_14-tcp通信" aria-label="Permalink to &quot;14. TCP通信&quot;">​</a></h2><h3 id="_14-1-网络通信" tabindex="-1">14.1 网络通信 <a class="header-anchor" href="#_14-1-网络通信" aria-label="Permalink to &quot;14.1 网络通信&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span>获取本机的网络信息,在 Windows 通过调出命令行 cmd 窗口输入 ipconfig 或者在 Linux 系统中使用 ifconfig 命令就可以查看相关信息了,</span></span></code></pre></div><h3 id="案例-获-取-本-机-网-络-接-口-信-息" tabindex="-1">案例：获 取 本 机 网 络 接 口 信 息 <a class="header-anchor" href="#案例-获-取-本-机-网-络-接-口-信-息" aria-label="Permalink to &quot;案例：获 取 本 机 网 络 接 口 信 息&quot;">​</a></h3><p>本例目的：了解如何通过 QHostInfo 和 QNetworkInterface 类获取本地网络所有接口的信息。</p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">QString</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> MainWindow</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">getHostInfo</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">()</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">91</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">92</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> /* 通过 QHostInfo 的 localHostName 函数获取主机名称 */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">93</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> QString str </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;主机名称： &quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> +</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> QHostInfo</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">localHostName</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">94</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">95</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> /* 获取所有的网络接口，</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">96 * QNetworkInterface 类提供主机的 IP 地址和网络接口的列表 */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">97</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> QList</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">QNetworkInterface</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> list</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">98</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> QNetworkInterface</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">allInterfaces</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">();</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">99</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">100</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> /* 遍历 list */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">101</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> foreach</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (QNetworkInterface interface, list) {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">102</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> str</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;网卡设备:&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> interface.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">103</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> str</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;MAC 地址:&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> interface.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">hardwareAddress</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">104</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">105</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> /* QNetworkAddressEntry 类存储 IP 地址子网掩码和广播地址 */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">106</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> QList</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">QNetworkAddressEntry</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> entryList</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">107</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> interface.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">addressEntries</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">();</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">108</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">109</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> /* 遍历 entryList */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">110</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> foreach</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (QNetworkAddressEntry entry, entryList) {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">111</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> /* 过滤 IPv6 地址，只留下 IPv4 */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">112</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (entry.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">ip</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">protocol</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">==</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">113</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> QAbstractSocket</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">::IPv4Protocol) {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">114</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> str</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;IP 地址:&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> entry.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">ip</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">toString</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">115</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> str</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;子网掩码:&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> entry.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">netmask</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">toString</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">116</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> str</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;广播地址:&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> entry.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">broadcast</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">toString</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">\\n\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">117</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> }</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">118</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> }</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">119</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> }</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">120</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">121</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> /* 返回网络信息 */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">122</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> return</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> str;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">123</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> }</span></span></code></pre></div><h3 id="_14-2-tcp-通信-简介" tabindex="-1">14.2 TCP 通信 简介 <a class="header-anchor" href="#_14-2-tcp-通信-简介" aria-label="Permalink to &quot;14.2 TCP 通信 简介&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span>TCP 协议（Transmission Control Protocol）全称是传输控制协议是一种面向连接的、可靠的、基于字节流的传输层通信协议。</span></span>
<span class="line"><span>TCP 通信必须先建立 TCP 连接，通信端分为客户端和服务端。服务端通过监听某个端口来监听是否有客户端连接到来，如果有连接到来，则建立新的 socket 连接；客户端通过 ip 和port 连接服务端，当成功建立连接之后，就可进行数据的收发了。需要注意的是，在 Qt 中，Qt 把 socket 当成输入输出流来对待的，数据的收发是通过 read()和 write()来进行的，需要与我们常见的 send()与 recv()进行区分。</span></span></code></pre></div><h3 id="案例-tcp-服务端" tabindex="-1">案例：TCP 服务端 <a class="header-anchor" href="#案例-tcp-服务端" aria-label="Permalink to &quot;案例：TCP 服务端&quot;">​</a></h3><p>例 08_tcpserver， TCP 服务端（难度：一般）。 本例大体流程首先获取本地 IP 地址。创建一个 tcpSocket 套接字，一个 tcpServer 服务端。点击监听即监听本地的主机 IP 地址和端口，同时等待服务端的连接。此程序需要结合客户端一起使用。</p><h3 id="案例-tcp客户端" tabindex="-1">案例：TCP客户端 <a class="header-anchor" href="#案例-tcp客户端" aria-label="Permalink to &quot;案例：TCP客户端&quot;">​</a></h3><p>本例大体流程：首先获取本地 IP 地址。创建一个 tcpSocket 套接字， 然后用 tcpSocket 套接字使用 connectToHost函数连接服务端的主机 IP 地址和端口，即可相互通信。</p>`,12);function B(s,u,E,m,_,P){const h=l,k=e("ClientOnly");return n(),r("div",null,[A,d(k,null,{default:C(()=>{var i,a;return[(((i=s.$frontmatter)==null?void 0:i.aside)??!0)&&(((a=s.$frontmatter)==null?void 0:a.showArticleMetadata)??!0)?(n(),y(h,{key:0,article:s.$frontmatter},null,8,["article"])):o("",!0)]}),_:1}),D])}const Q=p(c,[["render",B]]);export{b as __pageData,Q as default};
