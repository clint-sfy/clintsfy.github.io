import{_ as c}from"./chunks/ArticleMetadata.59a467b2.js";import{_ as r,v as p,b as y,t as A,O as i,F as s,L as D,R as o,M as C,C as B,B as E}from"./chunks/framework.5cbdba25.js";import"./chunks/md5.02486a14.js";const N=JSON.parse('{"title":"二叉树的套路","description":"","frontmatter":{"title":"二叉树的套路","author":"阿源","date":"2023/03/12 12:00","categories":["数据结构与算法"],"tags":["数据结构与算法","二叉树"]},"headers":[],"relativePath":"courses/algorithm/01-左程云算法基础/12-二叉树基本算法_套路.md","filePath":"courses/algorithm/01-左程云算法基础/12-二叉树基本算法_套路.md","lastUpdated":1691397650000}'),F={name:"courses/algorithm/01-左程云算法基础/12-二叉树基本算法_套路.md"},u=s("h1",{id:"二叉树的套路",tabindex:"-1"},[D("二叉树的套路 "),s("a",{class:"header-anchor",href:"#二叉树的套路","aria-label":'Permalink to "二叉树的套路"'},"​")],-1),d=o(`<h2 id="_1-判断二叉树是否是完全二叉树" tabindex="-1">1. 判断二叉树是否是完全二叉树 <a class="header-anchor" href="#_1-判断二叉树是否是完全二叉树" aria-label="Permalink to &quot;1. 判断二叉树是否是完全二叉树&quot;">​</a></h2><h3 id="_1-1-方法一-层序遍历" tabindex="-1">1.1 方法一：层序遍历 <a class="header-anchor" href="#_1-1-方法一-层序遍历" aria-label="Permalink to &quot;1.1 方法一：层序遍历&quot;">​</a></h3><ul><li>层序遍历</li><li>若某节点有右孩子，无左孩子，一定不是完全二叉树</li><li>若第一次遇到某节点，其左右节点为NULL，剩下的节点一定是叶子节点</li></ul><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">static</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">class</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">Node</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">int</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">value;</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> Node</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">left;</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> Node</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">right;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">Node</span><span style="color:#ADBAC7;">(</span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">data</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">			</span><span style="color:#6CB6FF;">this</span><span style="color:#ADBAC7;">.value </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> data;</span></span>
<span class="line"><span style="color:#ADBAC7;">		}</span></span>
<span class="line"><span style="color:#ADBAC7;">	}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Node</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> value;</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> Node left;</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> Node right;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Node</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">data</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">			</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.value </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> data;</span></span>
<span class="line"><span style="color:#24292E;">		}</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span></code></pre></div><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">static</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">boolean</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">isCBT1</span><span style="color:#ADBAC7;">(Node head) {</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;"> (head </span><span style="color:#F47067;">==</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">null</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">			</span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">true</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">		}</span></span>
<span class="line"><span style="color:#ADBAC7;">		LinkedList</span><span style="color:#F69D50;">&lt;</span><span style="color:#F47067;">Node</span><span style="color:#F69D50;">&gt; </span><span style="color:#ADBAC7;">queue</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">new</span><span style="color:#ADBAC7;"> LinkedList&lt;&gt;();</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#768390;">// 是否遇到过左右两个孩子不双全的节点</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">boolean</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">leaf</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">false</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">		Node</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">l</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">null</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">		Node</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">r</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">null</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">		queue.</span><span style="color:#DCBDFB;">add</span><span style="color:#ADBAC7;">(head);</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">while</span><span style="color:#ADBAC7;"> (</span><span style="color:#F47067;">!</span><span style="color:#ADBAC7;">queue.</span><span style="color:#DCBDFB;">isEmpty</span><span style="color:#ADBAC7;">()) {</span></span>
<span class="line"><span style="color:#ADBAC7;">			head </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> queue.</span><span style="color:#DCBDFB;">poll</span><span style="color:#ADBAC7;">();</span></span>
<span class="line"><span style="color:#ADBAC7;">			l </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> head.left;</span></span>
<span class="line"><span style="color:#ADBAC7;">			r </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> head.right;</span></span>
<span class="line"><span style="color:#ADBAC7;">			</span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;"> (</span></span>
<span class="line"><span style="color:#ADBAC7;">			</span><span style="color:#768390;">// 如果遇到了不双全的节点之后，又发现当前节点不是叶节点</span></span>
<span class="line"><span style="color:#ADBAC7;">			    (leaf </span><span style="color:#F47067;">&amp;&amp;</span><span style="color:#ADBAC7;"> (l </span><span style="color:#F47067;">!=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">null</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">||</span><span style="color:#ADBAC7;"> r </span><span style="color:#F47067;">!=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">null</span><span style="color:#ADBAC7;">)) </span></span>
<span class="line"><span style="color:#ADBAC7;">			    </span><span style="color:#F47067;">||</span><span style="color:#ADBAC7;"> </span></span>
<span class="line"><span style="color:#ADBAC7;">			    (l </span><span style="color:#F47067;">==</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">null</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">&amp;&amp;</span><span style="color:#ADBAC7;"> r </span><span style="color:#F47067;">!=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">null</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">			) {</span></span>
<span class="line"><span style="color:#ADBAC7;">				</span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">false</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">			}</span></span>
<span class="line"><span style="color:#ADBAC7;">			</span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;"> (l </span><span style="color:#F47067;">!=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">null</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">				queue.</span><span style="color:#DCBDFB;">add</span><span style="color:#ADBAC7;">(l);</span></span>
<span class="line"><span style="color:#ADBAC7;">			}</span></span>
<span class="line"><span style="color:#ADBAC7;">			</span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;"> (r </span><span style="color:#F47067;">!=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">null</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">				queue.</span><span style="color:#DCBDFB;">add</span><span style="color:#ADBAC7;">(r);</span></span>
<span class="line"><span style="color:#ADBAC7;">			}</span></span>
<span class="line"><span style="color:#ADBAC7;">            </span><span style="color:#768390;">// 当遇到非全孩子时，之后的每一个节点一定是叶节点</span></span>
<span class="line"><span style="color:#ADBAC7;">			</span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;"> (l </span><span style="color:#F47067;">==</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">null</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">||</span><span style="color:#ADBAC7;"> r </span><span style="color:#F47067;">==</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">null</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">				leaf </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">true</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">			}</span></span>
<span class="line"><span style="color:#ADBAC7;">		}</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">true</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">	}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">boolean</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">isCBT1</span><span style="color:#24292E;">(Node head) {</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (head </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">			</span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">		}</span></span>
<span class="line"><span style="color:#24292E;">		LinkedList&lt;</span><span style="color:#D73A49;">Node</span><span style="color:#24292E;">&gt; queue </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> LinkedList&lt;&gt;();</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#6A737D;">// 是否遇到过左右两个孩子不双全的节点</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">boolean</span><span style="color:#24292E;"> leaf </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">		Node l </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">		Node r </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">		queue.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(head);</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">while</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">queue.</span><span style="color:#6F42C1;">isEmpty</span><span style="color:#24292E;">()) {</span></span>
<span class="line"><span style="color:#24292E;">			head </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> queue.</span><span style="color:#6F42C1;">poll</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">			l </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> head.left;</span></span>
<span class="line"><span style="color:#24292E;">			r </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> head.right;</span></span>
<span class="line"><span style="color:#24292E;">			</span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span></span>
<span class="line"><span style="color:#24292E;">			</span><span style="color:#6A737D;">// 如果遇到了不双全的节点之后，又发现当前节点不是叶节点</span></span>
<span class="line"><span style="color:#24292E;">			    (leaf </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> (l </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">||</span><span style="color:#24292E;"> r </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">)) </span></span>
<span class="line"><span style="color:#24292E;">			    </span><span style="color:#D73A49;">||</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">			    (l </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> r </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">			) {</span></span>
<span class="line"><span style="color:#24292E;">				</span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">			}</span></span>
<span class="line"><span style="color:#24292E;">			</span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (l </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">				queue.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(l);</span></span>
<span class="line"><span style="color:#24292E;">			}</span></span>
<span class="line"><span style="color:#24292E;">			</span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (r </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">				queue.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(r);</span></span>
<span class="line"><span style="color:#24292E;">			}</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// 当遇到非全孩子时，之后的每一个节点一定是叶节点</span></span>
<span class="line"><span style="color:#24292E;">			</span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (l </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">||</span><span style="color:#24292E;"> r </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">				leaf </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">			}</span></span>
<span class="line"><span style="color:#24292E;">		}</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span></code></pre></div><h3 id="_1-2-方法二-模板" tabindex="-1">1.2 方法二：模板 <a class="header-anchor" href="#_1-2-方法二-模板" aria-label="Permalink to &quot;1.2 方法二：模板&quot;">​</a></h3><ul><li>左满 右满 左高 == 右高</li><li>左完 右满 左高 == 右高 +1</li><li>左满 右满 左高 == 右高 +1</li><li>左满 右完 左高 == 右高</li></ul><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">static</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">class</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">Node</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">int</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">value;</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> Node</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">left;</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> Node</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">right;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">Node</span><span style="color:#ADBAC7;">(</span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">data</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">			</span><span style="color:#6CB6FF;">this</span><span style="color:#ADBAC7;">.value </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> data;</span></span>
<span class="line"><span style="color:#ADBAC7;">		}</span></span>
<span class="line"><span style="color:#ADBAC7;">	}</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">static</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">class</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">Info</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">boolean</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">isFull;   </span><span style="color:#768390;">// 是否为满二叉树</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">boolean</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">isCBT;    </span><span style="color:#768390;">// 是否是完全二叉树</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">int</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">height;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">Info</span><span style="color:#ADBAC7;">(</span><span style="color:#F47067;">boolean</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">full</span><span style="color:#ADBAC7;">, </span><span style="color:#F47067;">boolean</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">cbt</span><span style="color:#ADBAC7;">, </span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">h</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">			isFull </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> full;</span></span>
<span class="line"><span style="color:#ADBAC7;">			isCBT </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> cbt;</span></span>
<span class="line"><span style="color:#ADBAC7;">			height </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> h;</span></span>
<span class="line"><span style="color:#ADBAC7;">		}</span></span>
<span class="line"><span style="color:#ADBAC7;">	}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Node</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> value;</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> Node left;</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> Node right;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Node</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">data</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">			</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.value </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> data;</span></span>
<span class="line"><span style="color:#24292E;">		}</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Info</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">boolean</span><span style="color:#24292E;"> isFull;   </span><span style="color:#6A737D;">// 是否为满二叉树</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">boolean</span><span style="color:#24292E;"> isCBT;    </span><span style="color:#6A737D;">// 是否是完全二叉树</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> height;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Info</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">boolean</span><span style="color:#24292E;"> </span><span style="color:#E36209;">full</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">boolean</span><span style="color:#24292E;"> </span><span style="color:#E36209;">cbt</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">h</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">			isFull </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> full;</span></span>
<span class="line"><span style="color:#24292E;">			isCBT </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> cbt;</span></span>
<span class="line"><span style="color:#24292E;">			height </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> h;</span></span>
<span class="line"><span style="color:#24292E;">		}</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span></code></pre></div><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">static</span><span style="color:#ADBAC7;"> Info </span><span style="color:#DCBDFB;">process</span><span style="color:#ADBAC7;">(Node x) {</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;"> (x </span><span style="color:#F47067;">==</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">null</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">			</span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">new</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">Info</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">true</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">true</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#ADBAC7;">		}</span></span>
<span class="line"><span style="color:#ADBAC7;">		Info</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">leftInfo</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">process</span><span style="color:#ADBAC7;">(x.left);</span></span>
<span class="line"><span style="color:#ADBAC7;">		Info</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">rightInfo</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">process</span><span style="color:#ADBAC7;">(x.right);</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">int</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">height</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> Math.</span><span style="color:#DCBDFB;">max</span><span style="color:#ADBAC7;">(leftInfo.height, rightInfo.height) </span><span style="color:#F47067;">+</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#768390;">// 当前X是否为满二叉树， 左满 右满 且 高度一样</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">boolean</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">isFull</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> leftInfo.isFull </span><span style="color:#F47067;">&amp;&amp;</span><span style="color:#ADBAC7;"> rightInfo.isFull </span><span style="color:#F47067;">&amp;&amp;</span><span style="color:#ADBAC7;"> leftInfo.height </span><span style="color:#F47067;">==</span><span style="color:#ADBAC7;"> rightInfo.height;</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#768390;">// 是否完全二叉树</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">boolean</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">isCBT</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">false</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;"> (leftInfo.isFull </span><span style="color:#F47067;">&amp;&amp;</span><span style="color:#ADBAC7;"> rightInfo.isFull </span><span style="color:#F47067;">&amp;&amp;</span><span style="color:#ADBAC7;"> leftInfo.height </span><span style="color:#F47067;">==</span><span style="color:#ADBAC7;"> rightInfo.height) {</span></span>
<span class="line"><span style="color:#ADBAC7;">			isCBT </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">true</span><span style="color:#ADBAC7;">;  </span><span style="color:#768390;">// 左满   右满   左高  == 右高</span></span>
<span class="line"><span style="color:#ADBAC7;">		} </span><span style="color:#F47067;">else</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;"> (leftInfo.isCBT </span><span style="color:#F47067;">&amp;&amp;</span><span style="color:#ADBAC7;"> rightInfo.isFull </span><span style="color:#F47067;">&amp;&amp;</span><span style="color:#ADBAC7;"> leftInfo.height </span><span style="color:#F47067;">==</span><span style="color:#ADBAC7;"> rightInfo.height </span><span style="color:#F47067;">+</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">) { </span></span>
<span class="line"><span style="color:#ADBAC7;">			isCBT </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">true</span><span style="color:#ADBAC7;">;  </span><span style="color:#768390;">// 左完   右满   左高 == 右高 +1</span></span>
<span class="line"><span style="color:#ADBAC7;">		} </span><span style="color:#F47067;">else</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;"> (leftInfo.isFull </span><span style="color:#F47067;">&amp;&amp;</span><span style="color:#ADBAC7;"> rightInfo.isFull </span><span style="color:#F47067;">&amp;&amp;</span><span style="color:#ADBAC7;"> leftInfo.height </span><span style="color:#F47067;">==</span><span style="color:#ADBAC7;"> rightInfo.height </span><span style="color:#F47067;">+</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">			isCBT </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">true</span><span style="color:#ADBAC7;">;  </span><span style="color:#768390;">// 左满   右满   左高 == 右高 +1 </span></span>
<span class="line"><span style="color:#ADBAC7;">		} </span><span style="color:#F47067;">else</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;"> (leftInfo.isFull </span><span style="color:#F47067;">&amp;&amp;</span><span style="color:#ADBAC7;"> rightInfo.isCBT </span><span style="color:#F47067;">&amp;&amp;</span><span style="color:#ADBAC7;"> leftInfo.height </span><span style="color:#F47067;">==</span><span style="color:#ADBAC7;"> rightInfo.height) {</span></span>
<span class="line"><span style="color:#ADBAC7;">			isCBT </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">true</span><span style="color:#ADBAC7;">;  </span><span style="color:#768390;">// 左满   右完   左高  == 右高</span></span>
<span class="line"><span style="color:#ADBAC7;">		}</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">new</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">Info</span><span style="color:#ADBAC7;">(isFull, isCBT, height);</span></span>
<span class="line"><span style="color:#ADBAC7;">	}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> Info </span><span style="color:#6F42C1;">process</span><span style="color:#24292E;">(Node x) {</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (x </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">			</span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Info</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">true</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">		}</span></span>
<span class="line"><span style="color:#24292E;">		Info leftInfo </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">process</span><span style="color:#24292E;">(x.left);</span></span>
<span class="line"><span style="color:#24292E;">		Info rightInfo </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">process</span><span style="color:#24292E;">(x.right);</span></span>
<span class="line"><span style="color:#24292E;">        </span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> height </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Math.</span><span style="color:#6F42C1;">max</span><span style="color:#24292E;">(leftInfo.height, rightInfo.height) </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 当前X是否为满二叉树， 左满 右满 且 高度一样</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">boolean</span><span style="color:#24292E;"> isFull </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> leftInfo.isFull </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> rightInfo.isFull </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> leftInfo.height </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> rightInfo.height;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 是否完全二叉树</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">boolean</span><span style="color:#24292E;"> isCBT </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">        </span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (leftInfo.isFull </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> rightInfo.isFull </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> leftInfo.height </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> rightInfo.height) {</span></span>
<span class="line"><span style="color:#24292E;">			isCBT </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">;  </span><span style="color:#6A737D;">// 左满   右满   左高  == 右高</span></span>
<span class="line"><span style="color:#24292E;">		} </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (leftInfo.isCBT </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> rightInfo.isFull </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> leftInfo.height </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> rightInfo.height </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">) { </span></span>
<span class="line"><span style="color:#24292E;">			isCBT </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">;  </span><span style="color:#6A737D;">// 左完   右满   左高 == 右高 +1</span></span>
<span class="line"><span style="color:#24292E;">		} </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (leftInfo.isFull </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> rightInfo.isFull </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> leftInfo.height </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> rightInfo.height </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">			isCBT </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">;  </span><span style="color:#6A737D;">// 左满   右满   左高 == 右高 +1 </span></span>
<span class="line"><span style="color:#24292E;">		} </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (leftInfo.isFull </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> rightInfo.isCBT </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> leftInfo.height </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> rightInfo.height) {</span></span>
<span class="line"><span style="color:#24292E;">			isCBT </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">;  </span><span style="color:#6A737D;">// 左满   右完   左高  == 右高</span></span>
<span class="line"><span style="color:#24292E;">		}</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Info</span><span style="color:#24292E;">(isFull, isCBT, height);</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span></code></pre></div><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">static</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">boolean</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">isCBT2</span><span style="color:#ADBAC7;">(Node head) {</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">process</span><span style="color:#ADBAC7;">(head).isCBT;</span></span>
<span class="line"><span style="color:#ADBAC7;">    }</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">boolean</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">isCBT2</span><span style="color:#24292E;">(Node head) {</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">process</span><span style="color:#24292E;">(head).isCBT;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span></code></pre></div><h2 id="_2-给定一颗二叉树的头结点-判断这棵树是否是平衡二叉树" tabindex="-1">2. 给定一颗二叉树的头结点，判断这棵树是否是平衡二叉树 <a class="header-anchor" href="#_2-给定一颗二叉树的头结点-判断这棵树是否是平衡二叉树" aria-label="Permalink to &quot;2. 给定一颗二叉树的头结点，判断这棵树是否是平衡二叉树&quot;">​</a></h2><ul><li>X的左树平衡</li><li>X的右树平衡</li><li>|X左 - X右| &lt; 2</li></ul><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">static</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">class</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">Node</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">int</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">value;</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> Node</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">left;</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> Node</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">right;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">Node</span><span style="color:#ADBAC7;">(</span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">data</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">			</span><span style="color:#6CB6FF;">this</span><span style="color:#ADBAC7;">.value </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> data;</span></span>
<span class="line"><span style="color:#ADBAC7;">		}</span></span>
<span class="line"><span style="color:#ADBAC7;">	}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Node</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> value;</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> Node left;</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> Node right;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Node</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">data</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">			</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.value </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> data;</span></span>
<span class="line"><span style="color:#24292E;">		}</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span></code></pre></div><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">static</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">class</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">Info</span><span style="color:#ADBAC7;">{</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">boolean</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">isBalanced;</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">int</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">height;</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">Info</span><span style="color:#ADBAC7;">(</span><span style="color:#F47067;">boolean</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">i</span><span style="color:#ADBAC7;">, </span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">h</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">			isBalanced </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> i;</span></span>
<span class="line"><span style="color:#ADBAC7;">			height </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> h;</span></span>
<span class="line"><span style="color:#ADBAC7;">		}</span></span>
<span class="line"><span style="color:#ADBAC7;">	}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Info</span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">boolean</span><span style="color:#24292E;"> isBalanced;</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> height;</span></span>
<span class="line"><span style="color:#24292E;">		</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Info</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">boolean</span><span style="color:#24292E;"> </span><span style="color:#E36209;">i</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">h</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">			isBalanced </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> i;</span></span>
<span class="line"><span style="color:#24292E;">			height </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> h;</span></span>
<span class="line"><span style="color:#24292E;">		}</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span></code></pre></div><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">static</span><span style="color:#ADBAC7;"> Info </span><span style="color:#DCBDFB;">process</span><span style="color:#ADBAC7;">(Node x) {</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;">(x </span><span style="color:#F47067;">==</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">null</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">			</span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">new</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">Info</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">true</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#ADBAC7;">		}</span><span style="color:#768390;">// 空树一定是</span></span>
<span class="line"><span style="color:#ADBAC7;">		Info</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">leftInfo</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">process</span><span style="color:#ADBAC7;">(x.left);</span></span>
<span class="line"><span style="color:#ADBAC7;">		Info</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">rightInfo</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">process</span><span style="color:#ADBAC7;">(x.right);</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">int</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">height</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> Math.</span><span style="color:#DCBDFB;">max</span><span style="color:#ADBAC7;">(leftInfo.height, rightInfo.height)  </span><span style="color:#F47067;">+</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">boolean</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">isBalanced</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">true</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;">(</span><span style="color:#F47067;">!</span><span style="color:#ADBAC7;">leftInfo.isBalanced) {  </span><span style="color:#768390;">// 左树不平</span></span>
<span class="line"><span style="color:#ADBAC7;">			isBalanced </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">false</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">		}</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;">(</span><span style="color:#F47067;">!</span><span style="color:#ADBAC7;">rightInfo.isBalanced) { </span></span>
<span class="line"><span style="color:#ADBAC7;">			isBalanced </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">false</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">		}</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;">(Math.</span><span style="color:#DCBDFB;">abs</span><span style="color:#ADBAC7;">(leftInfo.height </span><span style="color:#F47067;">-</span><span style="color:#ADBAC7;"> rightInfo.height) </span><span style="color:#F47067;">&gt;</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">			isBalanced </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">false</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">		}</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">new</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">Info</span><span style="color:#ADBAC7;">(isBalanced, height);</span></span>
<span class="line"><span style="color:#ADBAC7;">	}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> Info </span><span style="color:#6F42C1;">process</span><span style="color:#24292E;">(Node x) {</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(x </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">			</span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Info</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">true</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">		}</span><span style="color:#6A737D;">// 空树一定是</span></span>
<span class="line"><span style="color:#24292E;">		Info leftInfo </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">process</span><span style="color:#24292E;">(x.left);</span></span>
<span class="line"><span style="color:#24292E;">		Info rightInfo </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">process</span><span style="color:#24292E;">(x.right);</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> height </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Math.</span><span style="color:#6F42C1;">max</span><span style="color:#24292E;">(leftInfo.height, rightInfo.height)  </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">boolean</span><span style="color:#24292E;"> isBalanced </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">leftInfo.isBalanced) {  </span><span style="color:#6A737D;">// 左树不平</span></span>
<span class="line"><span style="color:#24292E;">			isBalanced </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">		}</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">rightInfo.isBalanced) { </span></span>
<span class="line"><span style="color:#24292E;">			isBalanced </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">		}</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(Math.</span><span style="color:#6F42C1;">abs</span><span style="color:#24292E;">(leftInfo.height </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> rightInfo.height) </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">			isBalanced </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">		}</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Info</span><span style="color:#24292E;">(isBalanced, height);</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span></code></pre></div><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#768390;">// 主函数</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">static</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">boolean</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">isBalanced2</span><span style="color:#ADBAC7;">(Node head) {</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">process</span><span style="color:#ADBAC7;">(head).isBalanced;</span></span>
<span class="line"><span style="color:#ADBAC7;">	}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 主函数</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">boolean</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">isBalanced2</span><span style="color:#24292E;">(Node head) {</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">process</span><span style="color:#24292E;">(head).isBalanced;</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span></code></pre></div><h2 id="_3-判断是否是搜索二叉树" tabindex="-1">3. 判断是否是搜索二叉树 <a class="header-anchor" href="#_3-判断是否是搜索二叉树" aria-label="Permalink to &quot;3. 判断是否是搜索二叉树&quot;">​</a></h2><ul><li>X 左边是搜索二叉树</li><li>X 右边是搜索二叉树</li><li>X 左边的最大值</li><li>X 右边的最小值</li></ul><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">static</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">class</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">Node</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">int</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">value;</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> Node</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">left;</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> Node</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">right;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">Node</span><span style="color:#ADBAC7;">(</span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">data</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">			</span><span style="color:#6CB6FF;">this</span><span style="color:#ADBAC7;">.value </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> data;</span></span>
<span class="line"><span style="color:#ADBAC7;">		}</span></span>
<span class="line"><span style="color:#ADBAC7;">	}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Node</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> value;</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> Node left;</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> Node right;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Node</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">data</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">			</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.value </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> data;</span></span>
<span class="line"><span style="color:#24292E;">		}</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span></code></pre></div><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">static</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">class</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">Info</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">boolean</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">isBST;</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">int</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">max;</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">int</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">min;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">Info</span><span style="color:#ADBAC7;">(</span><span style="color:#F47067;">boolean</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">i</span><span style="color:#ADBAC7;">, </span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">ma</span><span style="color:#ADBAC7;">, </span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">mi</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">			isBST </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> i;</span></span>
<span class="line"><span style="color:#ADBAC7;">			max </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> ma;</span></span>
<span class="line"><span style="color:#ADBAC7;">			min </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> mi;</span></span>
<span class="line"><span style="color:#ADBAC7;">		}</span></span>
<span class="line"><span style="color:#ADBAC7;">	}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Info</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">boolean</span><span style="color:#24292E;"> isBST;</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> max;</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> min;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Info</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">boolean</span><span style="color:#24292E;"> </span><span style="color:#E36209;">i</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">ma</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">mi</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">			isBST </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> i;</span></span>
<span class="line"><span style="color:#24292E;">			max </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ma;</span></span>
<span class="line"><span style="color:#24292E;">			min </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> mi;</span></span>
<span class="line"><span style="color:#24292E;">		}</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span></code></pre></div><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">static</span><span style="color:#ADBAC7;"> Info </span><span style="color:#DCBDFB;">process</span><span style="color:#ADBAC7;">(Node x) {</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#768390;">// 空树 上游处理</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;"> (x </span><span style="color:#F47067;">==</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">null</span><span style="color:#ADBAC7;">) { </span></span>
<span class="line"><span style="color:#ADBAC7;">			</span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">null</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">		}</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#768390;">// 向左数 和 右树要信息</span></span>
<span class="line"><span style="color:#ADBAC7;">		Info</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">leftInfo</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">process</span><span style="color:#ADBAC7;">(x.left);</span></span>
<span class="line"><span style="color:#ADBAC7;">		Info</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">rightInfo</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">process</span><span style="color:#ADBAC7;">(x.right);</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">int</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">max</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> x.value;</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;"> (leftInfo </span><span style="color:#F47067;">!=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">null</span><span style="color:#ADBAC7;">) {  </span><span style="color:#768390;">//有左树，那么就PK下</span></span>
<span class="line"><span style="color:#ADBAC7;">			max </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> Math.</span><span style="color:#DCBDFB;">max</span><span style="color:#ADBAC7;">(max, leftInfo.max);</span></span>
<span class="line"><span style="color:#ADBAC7;">		}</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;"> (rightInfo </span><span style="color:#F47067;">!=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">null</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">			max </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> Math.</span><span style="color:#DCBDFB;">max</span><span style="color:#ADBAC7;">(max, rightInfo.max);</span></span>
<span class="line"><span style="color:#ADBAC7;">		}</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">int</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">min</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> x.value;</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;"> (leftInfo </span><span style="color:#F47067;">!=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">null</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">			min </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> Math.</span><span style="color:#DCBDFB;">min</span><span style="color:#ADBAC7;">(min, leftInfo.min);</span></span>
<span class="line"><span style="color:#ADBAC7;">		}</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;"> (rightInfo </span><span style="color:#F47067;">!=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">null</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">			min </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> Math.</span><span style="color:#DCBDFB;">min</span><span style="color:#ADBAC7;">(min, rightInfo.min);</span></span>
<span class="line"><span style="color:#ADBAC7;">		}</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">boolean</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">isBST</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">true</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;"> (leftInfo </span><span style="color:#F47067;">!=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">null</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">&amp;&amp;</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">!</span><span style="color:#ADBAC7;">leftInfo.isBST) {</span></span>
<span class="line"><span style="color:#ADBAC7;">			isBST </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">false</span><span style="color:#ADBAC7;">;  </span><span style="color:#768390;">//左树不为空  且  左树不是线索二叉树，违规</span></span>
<span class="line"><span style="color:#ADBAC7;">		}</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;"> (rightInfo </span><span style="color:#F47067;">!=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">null</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">&amp;&amp;</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">!</span><span style="color:#ADBAC7;">rightInfo.isBST) {</span></span>
<span class="line"><span style="color:#ADBAC7;">			isBST </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">false</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">		}</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;"> (leftInfo </span><span style="color:#F47067;">!=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">null</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">&amp;&amp;</span><span style="color:#ADBAC7;"> leftInfo.max </span><span style="color:#F47067;">&gt;=</span><span style="color:#ADBAC7;"> x.value) {</span></span>
<span class="line"><span style="color:#ADBAC7;">			isBST </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">false</span><span style="color:#ADBAC7;">;  </span><span style="color:#768390;">// 左树不为空 且 左树的最大值大于当前值，违规</span></span>
<span class="line"><span style="color:#ADBAC7;">		}</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;"> (rightInfo </span><span style="color:#F47067;">!=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">null</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">&amp;&amp;</span><span style="color:#ADBAC7;"> rightInfo.min </span><span style="color:#F47067;">&lt;=</span><span style="color:#ADBAC7;"> x.value) {</span></span>
<span class="line"><span style="color:#ADBAC7;">			isBST </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">false</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">		}</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">new</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">Info</span><span style="color:#ADBAC7;">(isBST, max, min);</span></span>
<span class="line"><span style="color:#ADBAC7;">	}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> Info </span><span style="color:#6F42C1;">process</span><span style="color:#24292E;">(Node x) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 空树 上游处理</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (x </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">) { </span></span>
<span class="line"><span style="color:#24292E;">			</span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">		}</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 向左数 和 右树要信息</span></span>
<span class="line"><span style="color:#24292E;">		Info leftInfo </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">process</span><span style="color:#24292E;">(x.left);</span></span>
<span class="line"><span style="color:#24292E;">		Info rightInfo </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">process</span><span style="color:#24292E;">(x.right);</span></span>
<span class="line"><span style="color:#24292E;">        </span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> max </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> x.value;</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (leftInfo </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">) {  </span><span style="color:#6A737D;">//有左树，那么就PK下</span></span>
<span class="line"><span style="color:#24292E;">			max </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Math.</span><span style="color:#6F42C1;">max</span><span style="color:#24292E;">(max, leftInfo.max);</span></span>
<span class="line"><span style="color:#24292E;">		}</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (rightInfo </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">			max </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Math.</span><span style="color:#6F42C1;">max</span><span style="color:#24292E;">(max, rightInfo.max);</span></span>
<span class="line"><span style="color:#24292E;">		}</span></span>
<span class="line"><span style="color:#24292E;">        </span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> min </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> x.value;</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (leftInfo </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">			min </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Math.</span><span style="color:#6F42C1;">min</span><span style="color:#24292E;">(min, leftInfo.min);</span></span>
<span class="line"><span style="color:#24292E;">		}</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (rightInfo </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">			min </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Math.</span><span style="color:#6F42C1;">min</span><span style="color:#24292E;">(min, rightInfo.min);</span></span>
<span class="line"><span style="color:#24292E;">		}</span></span>
<span class="line"><span style="color:#24292E;">        </span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">boolean</span><span style="color:#24292E;"> isBST </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (leftInfo </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">!</span><span style="color:#24292E;">leftInfo.isBST) {</span></span>
<span class="line"><span style="color:#24292E;">			isBST </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">;  </span><span style="color:#6A737D;">//左树不为空  且  左树不是线索二叉树，违规</span></span>
<span class="line"><span style="color:#24292E;">		}</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (rightInfo </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">!</span><span style="color:#24292E;">rightInfo.isBST) {</span></span>
<span class="line"><span style="color:#24292E;">			isBST </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">		}</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (leftInfo </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> leftInfo.max </span><span style="color:#D73A49;">&gt;=</span><span style="color:#24292E;"> x.value) {</span></span>
<span class="line"><span style="color:#24292E;">			isBST </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">;  </span><span style="color:#6A737D;">// 左树不为空 且 左树的最大值大于当前值，违规</span></span>
<span class="line"><span style="color:#24292E;">		}</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (rightInfo </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> rightInfo.min </span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;"> x.value) {</span></span>
<span class="line"><span style="color:#24292E;">			isBST </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">		}</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Info</span><span style="color:#24292E;">(isBST, max, min);</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span></code></pre></div><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#768390;">// 主函数</span></span>
<span class="line"><span style="color:#ADBAC7;">	</span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">static</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">boolean</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">isBST2</span><span style="color:#ADBAC7;">(Node head) {</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;"> (head </span><span style="color:#F47067;">==</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">null</span><span style="color:#ADBAC7;">) { </span><span style="color:#768390;">// 上游处理</span></span>
<span class="line"><span style="color:#ADBAC7;">			</span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">true</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">		}</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">process</span><span style="color:#ADBAC7;">(head).isBST;</span></span>
<span class="line"><span style="color:#ADBAC7;">	}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 主函数</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">boolean</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">isBST2</span><span style="color:#24292E;">(Node head) {</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (head </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">) { </span><span style="color:#6A737D;">// 上游处理</span></span>
<span class="line"><span style="color:#24292E;">			</span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">		}</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">process</span><span style="color:#24292E;">(head).isBST;</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span></code></pre></div><h2 id="_4-任何两个节点存在距离-求整颗二叉树的最大距离" tabindex="-1">4. 任何两个节点存在距离，求整颗二叉树的最大距离 <a class="header-anchor" href="#_4-任何两个节点存在距离-求整颗二叉树的最大距离" aria-label="Permalink to &quot;4. 任何两个节点存在距离，求整颗二叉树的最大距离&quot;">​</a></h2><ul><li>X 左树上有最大距离，与X无关</li><li>X 右树上有最大距离，与X无关</li><li>经过X，左树离X最远+右树离X最远+1 （左树高度+右树高度+1）</li></ul><p>要求：最大dis 树高</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">static</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">class</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">Node</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">int</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">value;</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> Node</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">left;</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> Node</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">right;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">Node</span><span style="color:#ADBAC7;">(</span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">data</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">			</span><span style="color:#6CB6FF;">this</span><span style="color:#ADBAC7;">.value </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> data;</span></span>
<span class="line"><span style="color:#ADBAC7;">		}</span></span>
<span class="line"><span style="color:#ADBAC7;">	}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Node</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> value;</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> Node left;</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> Node right;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Node</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">data</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">			</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.value </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> data;</span></span>
<span class="line"><span style="color:#24292E;">		}</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span></code></pre></div><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">static</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">class</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">Info</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">int</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">maxDistance;</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">int</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">height;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">Info</span><span style="color:#ADBAC7;">(</span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">m</span><span style="color:#ADBAC7;">, </span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">h</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">			maxDistance </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> m;</span></span>
<span class="line"><span style="color:#ADBAC7;">			height </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> h;</span></span>
<span class="line"><span style="color:#ADBAC7;">		}</span></span>
<span class="line"><span style="color:#ADBAC7;">	}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Info</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> maxDistance;</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> height;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Info</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">m</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">h</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">			maxDistance </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> m;</span></span>
<span class="line"><span style="color:#24292E;">			height </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> h;</span></span>
<span class="line"><span style="color:#24292E;">		}</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span></code></pre></div><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">static</span><span style="color:#ADBAC7;"> Info </span><span style="color:#DCBDFB;">process</span><span style="color:#ADBAC7;">(Node x) {</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;"> (x </span><span style="color:#F47067;">==</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">null</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">			</span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">new</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">Info</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#ADBAC7;">		}</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span></span>
<span class="line"><span style="color:#ADBAC7;">		Info</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">leftInfo</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">process</span><span style="color:#ADBAC7;">(x.left);</span></span>
<span class="line"><span style="color:#ADBAC7;">		Info</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">rightInfo</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">process</span><span style="color:#ADBAC7;">(x.right);</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">int</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">height</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> Math.</span><span style="color:#DCBDFB;">max</span><span style="color:#ADBAC7;">(leftInfo.height, rightInfo.height) </span><span style="color:#F47067;">+</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">int</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">p1</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> leftInfo.maxDistance;</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">int</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">p2</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> rightInfo.maxDistance;</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">int</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">p3</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> leftInfo.height </span><span style="color:#F47067;">+</span><span style="color:#ADBAC7;"> rightInfo.height </span><span style="color:#F47067;">+</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">int</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">maxDistance</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> Math.</span><span style="color:#DCBDFB;">max</span><span style="color:#ADBAC7;">(Math.</span><span style="color:#DCBDFB;">max</span><span style="color:#ADBAC7;">(p1, p2), p3);</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">new</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">Info</span><span style="color:#ADBAC7;">(maxDistance, height);</span></span>
<span class="line"><span style="color:#ADBAC7;">	}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> Info </span><span style="color:#6F42C1;">process</span><span style="color:#24292E;">(Node x) {</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (x </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">			</span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Info</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">		}</span></span>
<span class="line"><span style="color:#24292E;">        </span></span>
<span class="line"><span style="color:#24292E;">		Info leftInfo </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">process</span><span style="color:#24292E;">(x.left);</span></span>
<span class="line"><span style="color:#24292E;">		Info rightInfo </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">process</span><span style="color:#24292E;">(x.right);</span></span>
<span class="line"><span style="color:#24292E;">        </span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> height </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Math.</span><span style="color:#6F42C1;">max</span><span style="color:#24292E;">(leftInfo.height, rightInfo.height) </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> p1 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> leftInfo.maxDistance;</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> p2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> rightInfo.maxDistance;</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> p3 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> leftInfo.height </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> rightInfo.height </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> maxDistance </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Math.</span><span style="color:#6F42C1;">max</span><span style="color:#24292E;">(Math.</span><span style="color:#6F42C1;">max</span><span style="color:#24292E;">(p1, p2), p3);</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Info</span><span style="color:#24292E;">(maxDistance, height);</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span></code></pre></div><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">static</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">maxDistance2</span><span style="color:#ADBAC7;">(Node head) {</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">process</span><span style="color:#ADBAC7;">(head).maxDistance;</span></span>
<span class="line"><span style="color:#ADBAC7;">    }</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">maxDistance2</span><span style="color:#24292E;">(Node head) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">process</span><span style="color:#24292E;">(head).maxDistance;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span></code></pre></div><h2 id="_5-判断一棵树是否是满二叉树" tabindex="-1">5. 判断一棵树是否是满二叉树 <a class="header-anchor" href="#_5-判断一棵树是否是满二叉树" aria-label="Permalink to &quot;5. 判断一棵树是否是满二叉树&quot;">​</a></h2><ul><li>左树是否满二叉树</li><li>右树是否满二叉树</li><li>左树和右树高度是否一样</li></ul><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">static</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">class</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">Node</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">int</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">value;</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> Node</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">left;</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> Node</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">right;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">Node</span><span style="color:#ADBAC7;">(</span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">data</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">			</span><span style="color:#6CB6FF;">this</span><span style="color:#ADBAC7;">.value </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> data;</span></span>
<span class="line"><span style="color:#ADBAC7;">		}</span></span>
<span class="line"><span style="color:#ADBAC7;">	}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Node</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> value;</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> Node left;</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> Node right;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Node</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">data</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">			</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.value </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> data;</span></span>
<span class="line"><span style="color:#24292E;">		}</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span></code></pre></div><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">static</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">class</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">Info2</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">boolean</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">isFull;</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">int</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">height;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">Info2</span><span style="color:#ADBAC7;">(</span><span style="color:#F47067;">boolean</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">f</span><span style="color:#ADBAC7;">, </span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">h</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">			isFull </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> f;</span></span>
<span class="line"><span style="color:#ADBAC7;">			height </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> h;</span></span>
<span class="line"><span style="color:#ADBAC7;">		}</span></span>
<span class="line"><span style="color:#ADBAC7;">	}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Info2</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">boolean</span><span style="color:#24292E;"> isFull;</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> height;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Info2</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">boolean</span><span style="color:#24292E;"> </span><span style="color:#E36209;">f</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">h</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">			isFull </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> f;</span></span>
<span class="line"><span style="color:#24292E;">			height </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> h;</span></span>
<span class="line"><span style="color:#24292E;">		}</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span></code></pre></div><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">static</span><span style="color:#ADBAC7;"> Info2 </span><span style="color:#DCBDFB;">process2</span><span style="color:#ADBAC7;">(Node h) {</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;"> (h </span><span style="color:#F47067;">==</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">null</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">			</span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">new</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">Info2</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">true</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#ADBAC7;">		}</span></span>
<span class="line"><span style="color:#ADBAC7;">		Info2</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">leftInfo</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">process2</span><span style="color:#ADBAC7;">(h.left);</span></span>
<span class="line"><span style="color:#ADBAC7;">		Info2</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">rightInfo</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">process2</span><span style="color:#ADBAC7;">(h.right);</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">boolean</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">isFull</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> leftInfo.isFull </span><span style="color:#F47067;">&amp;&amp;</span><span style="color:#ADBAC7;"> rightInfo.isFull </span><span style="color:#F47067;">&amp;&amp;</span><span style="color:#ADBAC7;"> leftInfo.height </span><span style="color:#F47067;">==</span><span style="color:#ADBAC7;"> rightInfo.height;</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">int</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">height</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> Math.</span><span style="color:#DCBDFB;">max</span><span style="color:#ADBAC7;">(leftInfo.height, rightInfo.height) </span><span style="color:#F47067;">+</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">new</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">Info2</span><span style="color:#ADBAC7;">(isFull, height);</span></span>
<span class="line"><span style="color:#ADBAC7;">	}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> Info2 </span><span style="color:#6F42C1;">process2</span><span style="color:#24292E;">(Node h) {</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (h </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">			</span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Info2</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">true</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">		}</span></span>
<span class="line"><span style="color:#24292E;">		Info2 leftInfo </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">process2</span><span style="color:#24292E;">(h.left);</span></span>
<span class="line"><span style="color:#24292E;">		Info2 rightInfo </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">process2</span><span style="color:#24292E;">(h.right);</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">boolean</span><span style="color:#24292E;"> isFull </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> leftInfo.isFull </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> rightInfo.isFull </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> leftInfo.height </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> rightInfo.height;</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> height </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Math.</span><span style="color:#6F42C1;">max</span><span style="color:#24292E;">(leftInfo.height, rightInfo.height) </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Info2</span><span style="color:#24292E;">(isFull, height);</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span></code></pre></div><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">static</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">boolean</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">isFull2</span><span style="color:#ADBAC7;">(Node head) {</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;"> (head </span><span style="color:#F47067;">==</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">null</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">			</span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">true</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">		}</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">process2</span><span style="color:#ADBAC7;">(head).isFull;</span></span>
<span class="line"><span style="color:#ADBAC7;">	}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">boolean</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">isFull2</span><span style="color:#24292E;">(Node head) {</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (head </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">			</span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">		}</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">process2</span><span style="color:#24292E;">(head).isFull;</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span></code></pre></div><h2 id="_6-整颗二叉树不是线索二叉树-求子树是搜索二叉树-且节点最多有多少" tabindex="-1">6. 整颗二叉树不是线索二叉树，求子树是搜索二叉树，且节点最多有多少 <a class="header-anchor" href="#_6-整颗二叉树不是线索二叉树-求子树是搜索二叉树-且节点最多有多少" aria-label="Permalink to &quot;6. 整颗二叉树不是线索二叉树，求子树是搜索二叉树，且节点最多有多少&quot;">​</a></h2><p>子树：包括当前节点，底下全要</p><ul><li>X不做头，左边有MaxSize</li><li>X不做头，右边有MaxSize</li><li>X做头，左树和右树是搜索二叉树，且左树最大值&lt;X，右树最小值&gt;X，最后左边+右边+1</li></ul><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">static</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">class</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">Node</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">int</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">value;</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> Node</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">left;</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> Node</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">right;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">Node</span><span style="color:#ADBAC7;">(</span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">data</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">			</span><span style="color:#6CB6FF;">this</span><span style="color:#ADBAC7;">.value </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> data;</span></span>
<span class="line"><span style="color:#ADBAC7;">		}</span></span>
<span class="line"><span style="color:#ADBAC7;">	}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Node</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> value;</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> Node left;</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> Node right;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Node</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">data</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">			</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.value </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> data;</span></span>
<span class="line"><span style="color:#24292E;">		}</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span></code></pre></div><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">static</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">class</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">Info</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">int</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">maxBSTSubtreeSize; </span><span style="color:#768390;">//最大子树的Size</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">int</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">allSize;   </span><span style="color:#768390;">//整棵树的size</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">int</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">max;</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">int</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">min;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">Info</span><span style="color:#ADBAC7;">(</span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">m</span><span style="color:#ADBAC7;">, </span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">a</span><span style="color:#ADBAC7;">, </span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">ma</span><span style="color:#ADBAC7;">, </span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">mi</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">			maxBSTSubtreeSize </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> m;</span></span>
<span class="line"><span style="color:#ADBAC7;">			allSize </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> a;</span></span>
<span class="line"><span style="color:#ADBAC7;">			max </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> ma;</span></span>
<span class="line"><span style="color:#ADBAC7;">			min </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> mi;</span></span>
<span class="line"><span style="color:#ADBAC7;">		}</span></span>
<span class="line"><span style="color:#ADBAC7;">	}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Info</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> maxBSTSubtreeSize; </span><span style="color:#6A737D;">//最大子树的Size</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> allSize;   </span><span style="color:#6A737D;">//整棵树的size</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> max;</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> min;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Info</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">m</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">a</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">ma</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">mi</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">			maxBSTSubtreeSize </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> m;</span></span>
<span class="line"><span style="color:#24292E;">			allSize </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> a;</span></span>
<span class="line"><span style="color:#24292E;">			max </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ma;</span></span>
<span class="line"><span style="color:#24292E;">			min </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> mi;</span></span>
<span class="line"><span style="color:#24292E;">		}</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span></code></pre></div><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">static</span><span style="color:#ADBAC7;"> Info </span><span style="color:#DCBDFB;">process</span><span style="color:#ADBAC7;">(Node x) {</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;"> (x </span><span style="color:#F47067;">==</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">null</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">			</span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">null</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">		}</span></span>
<span class="line"><span style="color:#ADBAC7;">		Info</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">leftInfo</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">process</span><span style="color:#ADBAC7;">(x.left);</span></span>
<span class="line"><span style="color:#ADBAC7;">		Info</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">rightInfo</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">process</span><span style="color:#ADBAC7;">(x.right);</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">int</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">max</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> x.value;</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">int</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">min</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> x.value;</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">int</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">allSize</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;"> (leftInfo </span><span style="color:#F47067;">!=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">null</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">			max </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> Math.</span><span style="color:#DCBDFB;">max</span><span style="color:#ADBAC7;">(leftInfo.max, max);</span></span>
<span class="line"><span style="color:#ADBAC7;">			min </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> Math.</span><span style="color:#DCBDFB;">min</span><span style="color:#ADBAC7;">(leftInfo.min, min);</span></span>
<span class="line"><span style="color:#ADBAC7;">			allSize </span><span style="color:#F47067;">+=</span><span style="color:#ADBAC7;"> leftInfo.allSize;</span></span>
<span class="line"><span style="color:#ADBAC7;">		}</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;"> (rightInfo </span><span style="color:#F47067;">!=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">null</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">			max </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> Math.</span><span style="color:#DCBDFB;">max</span><span style="color:#ADBAC7;">(rightInfo.max, max);</span></span>
<span class="line"><span style="color:#ADBAC7;">			min </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> Math.</span><span style="color:#DCBDFB;">min</span><span style="color:#ADBAC7;">(rightInfo.min, min);</span></span>
<span class="line"><span style="color:#ADBAC7;">			allSize </span><span style="color:#F47067;">+=</span><span style="color:#ADBAC7;"> rightInfo.allSize;</span></span>
<span class="line"><span style="color:#ADBAC7;">		}</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">int</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">p1</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">-</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">; </span><span style="color:#768390;">//如果左树为空，那么-1</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;"> (leftInfo </span><span style="color:#F47067;">!=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">null</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">			p1 </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> leftInfo.maxBSTSubtreeSize;</span></span>
<span class="line"><span style="color:#ADBAC7;">		}</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">int</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">p2</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">-</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;"> (rightInfo </span><span style="color:#F47067;">!=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">null</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">			p2 </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> rightInfo.maxBSTSubtreeSize;</span></span>
<span class="line"><span style="color:#ADBAC7;">		}</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">int</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">p3</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">-</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#768390;">// 判断左树是不是搜索二叉树</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">boolean</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">leftBST</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> leftInfo </span><span style="color:#F47067;">==</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">null</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">?</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">true</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">:</span><span style="color:#ADBAC7;"> (leftInfo.maxBSTSubtreeSize </span><span style="color:#F47067;">==</span><span style="color:#ADBAC7;"> leftInfo.allSize);</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">boolean</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">rightBST</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> rightInfo </span><span style="color:#F47067;">==</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">null</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">?</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">true</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">:</span><span style="color:#ADBAC7;"> (rightInfo.maxBSTSubtreeSize </span><span style="color:#F47067;">==</span><span style="color:#ADBAC7;"> rightInfo.allSize);</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;"> (leftBST </span><span style="color:#F47067;">&amp;&amp;</span><span style="color:#ADBAC7;"> rightBST) {</span></span>
<span class="line"><span style="color:#ADBAC7;">            </span><span style="color:#768390;">// 判断当前节点是否大于左树的最大值</span></span>
<span class="line"><span style="color:#ADBAC7;">			</span><span style="color:#F47067;">boolean</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">leftMaxLessX</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> leftInfo </span><span style="color:#F47067;">==</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">null</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">?</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">true</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">:</span><span style="color:#ADBAC7;"> (leftInfo.max </span><span style="color:#F47067;">&lt;</span><span style="color:#ADBAC7;"> x.value);</span></span>
<span class="line"><span style="color:#ADBAC7;">			</span><span style="color:#F47067;">boolean</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">rightMinMoreX</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> rightInfo </span><span style="color:#F47067;">==</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">null</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">?</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">true</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">:</span><span style="color:#ADBAC7;"> (x.value </span><span style="color:#F47067;">&lt;</span><span style="color:#ADBAC7;"> rightInfo.min);</span></span>
<span class="line"><span style="color:#ADBAC7;">			</span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;"> (leftMaxLessX </span><span style="color:#F47067;">&amp;&amp;</span><span style="color:#ADBAC7;"> rightMinMoreX) {</span></span>
<span class="line"><span style="color:#ADBAC7;">				</span><span style="color:#F47067;">int</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">leftSize</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> leftInfo </span><span style="color:#F47067;">==</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">null</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">?</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">:</span><span style="color:#ADBAC7;"> leftInfo.allSize;</span></span>
<span class="line"><span style="color:#ADBAC7;">				</span><span style="color:#F47067;">int</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">rightSize</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> rightInfo </span><span style="color:#F47067;">==</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">null</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">?</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">:</span><span style="color:#ADBAC7;"> rightInfo.allSize;</span></span>
<span class="line"><span style="color:#ADBAC7;">				p3 </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> leftSize </span><span style="color:#F47067;">+</span><span style="color:#ADBAC7;"> rightSize </span><span style="color:#F47067;">+</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">			}</span></span>
<span class="line"><span style="color:#ADBAC7;">		}</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">new</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">Info</span><span style="color:#ADBAC7;">(Math.</span><span style="color:#DCBDFB;">max</span><span style="color:#ADBAC7;">(p1, Math.</span><span style="color:#DCBDFB;">max</span><span style="color:#ADBAC7;">(p2, p3)), allSize, max, min);</span></span>
<span class="line"><span style="color:#ADBAC7;">	}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> Info </span><span style="color:#6F42C1;">process</span><span style="color:#24292E;">(Node x) {</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (x </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">			</span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">		}</span></span>
<span class="line"><span style="color:#24292E;">		Info leftInfo </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">process</span><span style="color:#24292E;">(x.left);</span></span>
<span class="line"><span style="color:#24292E;">		Info rightInfo </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">process</span><span style="color:#24292E;">(x.right);</span></span>
<span class="line"><span style="color:#24292E;">        </span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> max </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> x.value;</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> min </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> x.value;</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> allSize </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (leftInfo </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">			max </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Math.</span><span style="color:#6F42C1;">max</span><span style="color:#24292E;">(leftInfo.max, max);</span></span>
<span class="line"><span style="color:#24292E;">			min </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Math.</span><span style="color:#6F42C1;">min</span><span style="color:#24292E;">(leftInfo.min, min);</span></span>
<span class="line"><span style="color:#24292E;">			allSize </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> leftInfo.allSize;</span></span>
<span class="line"><span style="color:#24292E;">		}</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (rightInfo </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">			max </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Math.</span><span style="color:#6F42C1;">max</span><span style="color:#24292E;">(rightInfo.max, max);</span></span>
<span class="line"><span style="color:#24292E;">			min </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Math.</span><span style="color:#6F42C1;">min</span><span style="color:#24292E;">(rightInfo.min, min);</span></span>
<span class="line"><span style="color:#24292E;">			allSize </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> rightInfo.allSize;</span></span>
<span class="line"><span style="color:#24292E;">		}</span></span>
<span class="line"><span style="color:#24292E;">        </span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> p1 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">//如果左树为空，那么-1</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (leftInfo </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">			p1 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> leftInfo.maxBSTSubtreeSize;</span></span>
<span class="line"><span style="color:#24292E;">		}</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> p2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (rightInfo </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">			p2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> rightInfo.maxBSTSubtreeSize;</span></span>
<span class="line"><span style="color:#24292E;">		}</span></span>
<span class="line"><span style="color:#24292E;">        </span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> p3 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 判断左树是不是搜索二叉树</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">boolean</span><span style="color:#24292E;"> leftBST </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> leftInfo </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> (leftInfo.maxBSTSubtreeSize </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> leftInfo.allSize);</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">boolean</span><span style="color:#24292E;"> rightBST </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> rightInfo </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> (rightInfo.maxBSTSubtreeSize </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> rightInfo.allSize);</span></span>
<span class="line"><span style="color:#24292E;">        </span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (leftBST </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> rightBST) {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// 判断当前节点是否大于左树的最大值</span></span>
<span class="line"><span style="color:#24292E;">			</span><span style="color:#D73A49;">boolean</span><span style="color:#24292E;"> leftMaxLessX </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> leftInfo </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> (leftInfo.max </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> x.value);</span></span>
<span class="line"><span style="color:#24292E;">			</span><span style="color:#D73A49;">boolean</span><span style="color:#24292E;"> rightMinMoreX </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> rightInfo </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> (x.value </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> rightInfo.min);</span></span>
<span class="line"><span style="color:#24292E;">			</span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (leftMaxLessX </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> rightMinMoreX) {</span></span>
<span class="line"><span style="color:#24292E;">				</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> leftSize </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> leftInfo </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> leftInfo.allSize;</span></span>
<span class="line"><span style="color:#24292E;">				</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> rightSize </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> rightInfo </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> rightInfo.allSize;</span></span>
<span class="line"><span style="color:#24292E;">				p3 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> leftSize </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> rightSize </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">			}</span></span>
<span class="line"><span style="color:#24292E;">		}</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Info</span><span style="color:#24292E;">(Math.</span><span style="color:#6F42C1;">max</span><span style="color:#24292E;">(p1, Math.</span><span style="color:#6F42C1;">max</span><span style="color:#24292E;">(p2, p3)), allSize, max, min);</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span></code></pre></div><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">static</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">maxSubBSTSize2</span><span style="color:#ADBAC7;">(Node head) {</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;">(head </span><span style="color:#F47067;">==</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">null</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">			</span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">		}</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">process</span><span style="color:#ADBAC7;">(head).maxBSTSubtreeSize;</span></span>
<span class="line"><span style="color:#ADBAC7;">	}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">maxSubBSTSize2</span><span style="color:#24292E;">(Node head) {</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(head </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">			</span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">		}</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">process</span><span style="color:#24292E;">(head).maxBSTSubtreeSize;</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span></code></pre></div><h2 id="_7-返回二叉树中最大的二叉搜索子树的头节点" tabindex="-1">7. 返回二叉树中最大的二叉搜索子树的头节点 <a class="header-anchor" href="#_7-返回二叉树中最大的二叉搜索子树的头节点" aria-label="Permalink to &quot;7. 返回二叉树中最大的二叉搜索子树的头节点&quot;">​</a></h2><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">static</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">class</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">Info</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> Node</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">maxSubBSTHead;</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">int</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">maxSubBSTSize;</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">int</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">min;</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">int</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">max;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">Info</span><span style="color:#ADBAC7;">(Node </span><span style="color:#F69D50;">h</span><span style="color:#ADBAC7;">, </span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">size</span><span style="color:#ADBAC7;">, </span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">mi</span><span style="color:#ADBAC7;">, </span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">ma</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">			maxSubBSTHead </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> h;</span></span>
<span class="line"><span style="color:#ADBAC7;">			maxSubBSTSize </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> size;</span></span>
<span class="line"><span style="color:#ADBAC7;">			min </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> mi;</span></span>
<span class="line"><span style="color:#ADBAC7;">			max </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> ma;</span></span>
<span class="line"><span style="color:#ADBAC7;">		}</span></span>
<span class="line"><span style="color:#ADBAC7;">	}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Info</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> Node maxSubBSTHead;</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> maxSubBSTSize;</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> min;</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> max;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Info</span><span style="color:#24292E;">(Node </span><span style="color:#E36209;">h</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">size</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">mi</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">ma</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">			maxSubBSTHead </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> h;</span></span>
<span class="line"><span style="color:#24292E;">			maxSubBSTSize </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> size;</span></span>
<span class="line"><span style="color:#24292E;">			min </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> mi;</span></span>
<span class="line"><span style="color:#24292E;">			max </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ma;</span></span>
<span class="line"><span style="color:#24292E;">		}</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span></code></pre></div><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">static</span><span style="color:#ADBAC7;"> Info </span><span style="color:#DCBDFB;">process</span><span style="color:#ADBAC7;">(Node X) {</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;"> (X </span><span style="color:#F47067;">==</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">null</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">			</span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">null</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">		}</span></span>
<span class="line"><span style="color:#ADBAC7;">		Info</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">leftInfo</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">process</span><span style="color:#ADBAC7;">(X.left);</span></span>
<span class="line"><span style="color:#ADBAC7;">		Info</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">rightInfo</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">process</span><span style="color:#ADBAC7;">(X.right);</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">int</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">min</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> X.value;</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">int</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">max</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> X.value;</span></span>
<span class="line"><span style="color:#ADBAC7;">		Node</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">maxSubBSTHead</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">null</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">int</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">maxSubBSTSize</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;"> (leftInfo </span><span style="color:#F47067;">!=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">null</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">			min </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> Math.</span><span style="color:#DCBDFB;">min</span><span style="color:#ADBAC7;">(min, leftInfo.min);</span></span>
<span class="line"><span style="color:#ADBAC7;">			max </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> Math.</span><span style="color:#DCBDFB;">max</span><span style="color:#ADBAC7;">(max, leftInfo.max);</span></span>
<span class="line"><span style="color:#ADBAC7;">			maxSubBSTHead </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> leftInfo.maxSubBSTHead;</span></span>
<span class="line"><span style="color:#ADBAC7;">			maxSubBSTSize </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> leftInfo.maxSubBSTSize;</span></span>
<span class="line"><span style="color:#ADBAC7;">		}</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;"> (rightInfo </span><span style="color:#F47067;">!=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">null</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">			min </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> Math.</span><span style="color:#DCBDFB;">min</span><span style="color:#ADBAC7;">(min, rightInfo.min);</span></span>
<span class="line"><span style="color:#ADBAC7;">			max </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> Math.</span><span style="color:#DCBDFB;">max</span><span style="color:#ADBAC7;">(max, rightInfo.max);</span></span>
<span class="line"><span style="color:#ADBAC7;">			</span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;"> (rightInfo.maxSubBSTSize </span><span style="color:#F47067;">&gt;</span><span style="color:#ADBAC7;"> maxSubBSTSize) {</span></span>
<span class="line"><span style="color:#ADBAC7;">				maxSubBSTHead </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> rightInfo.maxSubBSTHead;</span></span>
<span class="line"><span style="color:#ADBAC7;">				maxSubBSTSize </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> rightInfo.maxSubBSTSize;</span></span>
<span class="line"><span style="color:#ADBAC7;">			}</span></span>
<span class="line"><span style="color:#ADBAC7;">		}</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;"> ((leftInfo </span><span style="color:#F47067;">==</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">null</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">?</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">true</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">:</span><span style="color:#ADBAC7;"> (leftInfo.maxSubBSTHead </span><span style="color:#F47067;">==</span><span style="color:#ADBAC7;"> X.left </span><span style="color:#F47067;">&amp;&amp;</span><span style="color:#ADBAC7;"> leftInfo.max </span><span style="color:#F47067;">&lt;</span><span style="color:#ADBAC7;"> X.value))</span></span>
<span class="line"><span style="color:#ADBAC7;">				</span><span style="color:#F47067;">&amp;&amp;</span><span style="color:#ADBAC7;"> (rightInfo </span><span style="color:#F47067;">==</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">null</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">?</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">true</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">:</span><span style="color:#ADBAC7;"> (rightInfo.maxSubBSTHead </span><span style="color:#F47067;">==</span><span style="color:#ADBAC7;"> X.right </span><span style="color:#F47067;">&amp;&amp;</span><span style="color:#ADBAC7;"> rightInfo.min </span><span style="color:#F47067;">&gt;</span><span style="color:#ADBAC7;"> X.value))) {</span></span>
<span class="line"><span style="color:#ADBAC7;">			maxSubBSTHead </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> X;</span></span>
<span class="line"><span style="color:#ADBAC7;">			maxSubBSTSize </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> (leftInfo </span><span style="color:#F47067;">==</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">null</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">?</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">:</span><span style="color:#ADBAC7;"> leftInfo.maxSubBSTSize)</span></span>
<span class="line"><span style="color:#ADBAC7;">					</span><span style="color:#F47067;">+</span><span style="color:#ADBAC7;"> (rightInfo </span><span style="color:#F47067;">==</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">null</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">?</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">:</span><span style="color:#ADBAC7;"> rightInfo.maxSubBSTSize) </span><span style="color:#F47067;">+</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">		}</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">new</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">Info</span><span style="color:#ADBAC7;">(maxSubBSTHead, maxSubBSTSize, min, max);</span></span>
<span class="line"><span style="color:#ADBAC7;">	}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> Info </span><span style="color:#6F42C1;">process</span><span style="color:#24292E;">(Node X) {</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (X </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">			</span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">		}</span></span>
<span class="line"><span style="color:#24292E;">		Info leftInfo </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">process</span><span style="color:#24292E;">(X.left);</span></span>
<span class="line"><span style="color:#24292E;">		Info rightInfo </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">process</span><span style="color:#24292E;">(X.right);</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> min </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> X.value;</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> max </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> X.value;</span></span>
<span class="line"><span style="color:#24292E;">		Node maxSubBSTHead </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> maxSubBSTSize </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (leftInfo </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">			min </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Math.</span><span style="color:#6F42C1;">min</span><span style="color:#24292E;">(min, leftInfo.min);</span></span>
<span class="line"><span style="color:#24292E;">			max </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Math.</span><span style="color:#6F42C1;">max</span><span style="color:#24292E;">(max, leftInfo.max);</span></span>
<span class="line"><span style="color:#24292E;">			maxSubBSTHead </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> leftInfo.maxSubBSTHead;</span></span>
<span class="line"><span style="color:#24292E;">			maxSubBSTSize </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> leftInfo.maxSubBSTSize;</span></span>
<span class="line"><span style="color:#24292E;">		}</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (rightInfo </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">			min </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Math.</span><span style="color:#6F42C1;">min</span><span style="color:#24292E;">(min, rightInfo.min);</span></span>
<span class="line"><span style="color:#24292E;">			max </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Math.</span><span style="color:#6F42C1;">max</span><span style="color:#24292E;">(max, rightInfo.max);</span></span>
<span class="line"><span style="color:#24292E;">			</span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (rightInfo.maxSubBSTSize </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> maxSubBSTSize) {</span></span>
<span class="line"><span style="color:#24292E;">				maxSubBSTHead </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> rightInfo.maxSubBSTHead;</span></span>
<span class="line"><span style="color:#24292E;">				maxSubBSTSize </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> rightInfo.maxSubBSTSize;</span></span>
<span class="line"><span style="color:#24292E;">			}</span></span>
<span class="line"><span style="color:#24292E;">		}</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> ((leftInfo </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> (leftInfo.maxSubBSTHead </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> X.left </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> leftInfo.max </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> X.value))</span></span>
<span class="line"><span style="color:#24292E;">				</span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> (rightInfo </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> (rightInfo.maxSubBSTHead </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> X.right </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> rightInfo.min </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> X.value))) {</span></span>
<span class="line"><span style="color:#24292E;">			maxSubBSTHead </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> X;</span></span>
<span class="line"><span style="color:#24292E;">			maxSubBSTSize </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (leftInfo </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> leftInfo.maxSubBSTSize)</span></span>
<span class="line"><span style="color:#24292E;">					</span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> (rightInfo </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> rightInfo.maxSubBSTSize) </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">		}</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Info</span><span style="color:#24292E;">(maxSubBSTHead, maxSubBSTSize, min, max);</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span></code></pre></div><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">static</span><span style="color:#ADBAC7;"> Node </span><span style="color:#DCBDFB;">maxSubBSTHead2</span><span style="color:#ADBAC7;">(Node head) {</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;"> (head </span><span style="color:#F47067;">==</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">null</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">			</span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">null</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">		}</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">process</span><span style="color:#ADBAC7;">(head).maxSubBSTHead;</span></span>
<span class="line"><span style="color:#ADBAC7;">	}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> Node </span><span style="color:#6F42C1;">maxSubBSTHead2</span><span style="color:#24292E;">(Node head) {</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (head </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">			</span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">		}</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">process</span><span style="color:#24292E;">(head).maxSubBSTHead;</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span></code></pre></div><h2 id="_8-返回a和b的最近公共祖先" tabindex="-1">8. 返回A和B的最近公共祖先 <a class="header-anchor" href="#_8-返回a和b的最近公共祖先" aria-label="Permalink to &quot;8. 返回A和B的最近公共祖先&quot;">​</a></h2><h3 id="_8-1-方法1-模板" tabindex="-1">8.1 方法1：模板 <a class="header-anchor" href="#_8-1-方法1-模板" aria-label="Permalink to &quot;8.1 方法1：模板&quot;">​</a></h3><ul><li>X无关，左树上有答案，右树上有答案，不全</li><li>X有关，</li></ul><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">static</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">class</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">Info</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">boolean</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">findA;</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">boolean</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">findB;</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> Node</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">ans;      </span><span style="color:#768390;">//最终结果</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">Info</span><span style="color:#ADBAC7;">(</span><span style="color:#F47067;">boolean</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">fA</span><span style="color:#ADBAC7;">, </span><span style="color:#F47067;">boolean</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">fB</span><span style="color:#ADBAC7;">, Node </span><span style="color:#F69D50;">an</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">			findA </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> fA;</span></span>
<span class="line"><span style="color:#ADBAC7;">			findB </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> fB;</span></span>
<span class="line"><span style="color:#ADBAC7;">			ans </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> an;</span></span>
<span class="line"><span style="color:#ADBAC7;">		}</span></span>
<span class="line"><span style="color:#ADBAC7;">	}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Info</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">boolean</span><span style="color:#24292E;"> findA;</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">boolean</span><span style="color:#24292E;"> findB;</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> Node ans;      </span><span style="color:#6A737D;">//最终结果</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Info</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">boolean</span><span style="color:#24292E;"> </span><span style="color:#E36209;">fA</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">boolean</span><span style="color:#24292E;"> </span><span style="color:#E36209;">fB</span><span style="color:#24292E;">, Node </span><span style="color:#E36209;">an</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">			findA </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> fA;</span></span>
<span class="line"><span style="color:#24292E;">			findB </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> fB;</span></span>
<span class="line"><span style="color:#24292E;">			ans </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> an;</span></span>
<span class="line"><span style="color:#24292E;">		}</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span></code></pre></div><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">static</span><span style="color:#ADBAC7;"> Info </span><span style="color:#DCBDFB;">process</span><span style="color:#ADBAC7;">(Node x, Node a, Node b) {</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;"> (x </span><span style="color:#F47067;">==</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">null</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">			</span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">new</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">Info</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">false</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">false</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">null</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#ADBAC7;">		}</span></span>
<span class="line"><span style="color:#ADBAC7;">		Info</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">leftInfo</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">process</span><span style="color:#ADBAC7;">(x.left, a, b);</span></span>
<span class="line"><span style="color:#ADBAC7;">		Info</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">rightInfo</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">process</span><span style="color:#ADBAC7;">(x.right, a, b);</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">boolean</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">findA</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> (x </span><span style="color:#F47067;">==</span><span style="color:#ADBAC7;"> a) </span><span style="color:#F47067;">||</span><span style="color:#ADBAC7;"> leftInfo.findA </span><span style="color:#F47067;">||</span><span style="color:#ADBAC7;"> rightInfo.findA;</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">boolean</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">findB</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> (x </span><span style="color:#F47067;">==</span><span style="color:#ADBAC7;"> b) </span><span style="color:#F47067;">||</span><span style="color:#ADBAC7;"> leftInfo.findB </span><span style="color:#F47067;">||</span><span style="color:#ADBAC7;"> rightInfo.findB;</span></span>
<span class="line"><span style="color:#ADBAC7;">		Node</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">ans</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">null</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;"> (leftInfo.ans </span><span style="color:#F47067;">!=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">null</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">			ans </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> leftInfo.ans;  </span><span style="color:#768390;">// 左树已经找到了</span></span>
<span class="line"><span style="color:#ADBAC7;">		} </span><span style="color:#F47067;">else</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;"> (rightInfo.ans </span><span style="color:#F47067;">!=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">null</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">			ans </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> rightInfo.ans; </span><span style="color:#768390;">// 右树已经找到了</span></span>
<span class="line"><span style="color:#ADBAC7;">		} </span><span style="color:#F47067;">else</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">			</span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;"> (findA </span><span style="color:#F47067;">&amp;&amp;</span><span style="color:#ADBAC7;"> findB) {</span></span>
<span class="line"><span style="color:#ADBAC7;">				ans </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> x;      </span><span style="color:#768390;">//  左树和右树同时找到，当前节点为结果</span></span>
<span class="line"><span style="color:#ADBAC7;">			}</span></span>
<span class="line"><span style="color:#ADBAC7;">		}</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">new</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">Info</span><span style="color:#ADBAC7;">(findA, findB, ans);</span></span>
<span class="line"><span style="color:#ADBAC7;">	}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> Info </span><span style="color:#6F42C1;">process</span><span style="color:#24292E;">(Node x, Node a, Node b) {</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (x </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">			</span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Info</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">false</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">		}</span></span>
<span class="line"><span style="color:#24292E;">		Info leftInfo </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">process</span><span style="color:#24292E;">(x.left, a, b);</span></span>
<span class="line"><span style="color:#24292E;">		Info rightInfo </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">process</span><span style="color:#24292E;">(x.right, a, b);</span></span>
<span class="line"><span style="color:#24292E;">        </span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">boolean</span><span style="color:#24292E;"> findA </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (x </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> a) </span><span style="color:#D73A49;">||</span><span style="color:#24292E;"> leftInfo.findA </span><span style="color:#D73A49;">||</span><span style="color:#24292E;"> rightInfo.findA;</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">boolean</span><span style="color:#24292E;"> findB </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (x </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> b) </span><span style="color:#D73A49;">||</span><span style="color:#24292E;"> leftInfo.findB </span><span style="color:#D73A49;">||</span><span style="color:#24292E;"> rightInfo.findB;</span></span>
<span class="line"><span style="color:#24292E;">		Node ans </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">        </span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (leftInfo.ans </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">			ans </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> leftInfo.ans;  </span><span style="color:#6A737D;">// 左树已经找到了</span></span>
<span class="line"><span style="color:#24292E;">		} </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (rightInfo.ans </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">			ans </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> rightInfo.ans; </span><span style="color:#6A737D;">// 右树已经找到了</span></span>
<span class="line"><span style="color:#24292E;">		} </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">			</span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (findA </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> findB) {</span></span>
<span class="line"><span style="color:#24292E;">				ans </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> x;      </span><span style="color:#6A737D;">//  左树和右树同时找到，当前节点为结果</span></span>
<span class="line"><span style="color:#24292E;">			}</span></span>
<span class="line"><span style="color:#24292E;">		}</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Info</span><span style="color:#24292E;">(findA, findB, ans);</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span></code></pre></div><h3 id="_8-2-方法二-leetcode上" tabindex="-1">8.2 方法二：Leetcode上 <a class="header-anchor" href="#_8-2-方法二-leetcode上" aria-label="Permalink to &quot;8.2 方法二：Leetcode上&quot;">​</a></h3><h2 id="_9-公司问题" tabindex="-1">9. 公司问题 <a class="header-anchor" href="#_9-公司问题" aria-label="Permalink to &quot;9. 公司问题&quot;">​</a></h2><p>一颗多叉树，可以选若干节点参加聚会</p><p>直接上下级不能同时到场</p><p>问：如何让Happy值最大</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">static</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">class</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">Employee</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">int</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">happy;</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> List</span><span style="color:#F69D50;">&lt;</span><span style="color:#F47067;">Employee</span><span style="color:#F69D50;">&gt; </span><span style="color:#ADBAC7;">nexts;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">Employee</span><span style="color:#ADBAC7;">(</span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">h</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">			happy </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> h;</span></span>
<span class="line"><span style="color:#ADBAC7;">			nexts </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">new</span><span style="color:#ADBAC7;"> ArrayList&lt;&gt;();</span></span>
<span class="line"><span style="color:#ADBAC7;">		}</span></span>
<span class="line"><span style="color:#ADBAC7;">	}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Employee</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> happy;</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> List&lt;</span><span style="color:#D73A49;">Employee</span><span style="color:#24292E;">&gt; nexts;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Employee</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">h</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">			happy </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> h;</span></span>
<span class="line"><span style="color:#24292E;">			nexts </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> ArrayList&lt;&gt;();</span></span>
<span class="line"><span style="color:#24292E;">		}</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span></code></pre></div>`,57),h=s("ul",null,[s("li",null,"X 来的情况下，X.happy + X.children不来的max"),s("li",{"X.children来，X.children来不来":""},"X 不来的情况下，max")],-1),f=o(`<div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">static</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">class</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">Info</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">int</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">no;          </span><span style="color:#768390;">// 整颗子树不来的最大收益</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">int</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">yes;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">Info</span><span style="color:#ADBAC7;">(</span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">n</span><span style="color:#ADBAC7;">, </span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">y</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">			no </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> n;</span></span>
<span class="line"><span style="color:#ADBAC7;">			yes </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> y;</span></span>
<span class="line"><span style="color:#ADBAC7;">		}</span></span>
<span class="line"><span style="color:#ADBAC7;">	}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Info</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> no;          </span><span style="color:#6A737D;">// 整颗子树不来的最大收益</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> yes;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Info</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">n</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">y</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">			no </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> n;</span></span>
<span class="line"><span style="color:#24292E;">			yes </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> y;</span></span>
<span class="line"><span style="color:#24292E;">		}</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span></code></pre></div><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">static</span><span style="color:#ADBAC7;"> Info </span><span style="color:#DCBDFB;">process</span><span style="color:#ADBAC7;">(Employee x) {</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;"> (x </span><span style="color:#F47067;">==</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">null</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">			</span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">new</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">Info</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#ADBAC7;">		}</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">int</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">no</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">int</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">yes</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> x.happy;  </span><span style="color:#768390;">// 来的话就是当前x的快乐值</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">for</span><span style="color:#ADBAC7;"> (Employee</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">next</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">:</span><span style="color:#ADBAC7;"> x.nexts) {</span></span>
<span class="line"><span style="color:#ADBAC7;">			Info</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">nextInfo</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">process</span><span style="color:#ADBAC7;">(next);</span></span>
<span class="line"><span style="color:#ADBAC7;">            </span><span style="color:#768390;">// 如果X不来，子代可来可不来</span></span>
<span class="line"><span style="color:#ADBAC7;">			no </span><span style="color:#F47067;">+=</span><span style="color:#ADBAC7;"> Math.</span><span style="color:#DCBDFB;">max</span><span style="color:#ADBAC7;">(nextInfo.no, nextInfo.yes);</span></span>
<span class="line"><span style="color:#ADBAC7;">            </span><span style="color:#768390;">// 如果X来，子代一定不来</span></span>
<span class="line"><span style="color:#ADBAC7;">			yes </span><span style="color:#F47067;">+=</span><span style="color:#ADBAC7;"> nextInfo.no;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">		}</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">new</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">Info</span><span style="color:#ADBAC7;">(no, yes);</span></span>
<span class="line"><span style="color:#ADBAC7;">	}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> Info </span><span style="color:#6F42C1;">process</span><span style="color:#24292E;">(Employee x) {</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (x </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">			</span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Info</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">		}</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> no </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> yes </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> x.happy;  </span><span style="color:#6A737D;">// 来的话就是当前x的快乐值</span></span>
<span class="line"><span style="color:#24292E;">        </span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (Employee next </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> x.nexts) {</span></span>
<span class="line"><span style="color:#24292E;">			Info nextInfo </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">process</span><span style="color:#24292E;">(next);</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// 如果X不来，子代可来可不来</span></span>
<span class="line"><span style="color:#24292E;">			no </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> Math.</span><span style="color:#6F42C1;">max</span><span style="color:#24292E;">(nextInfo.no, nextInfo.yes);</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// 如果X来，子代一定不来</span></span>
<span class="line"><span style="color:#24292E;">			yes </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> nextInfo.no;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">		}</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Info</span><span style="color:#24292E;">(no, yes);</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span></code></pre></div><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">static</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">maxHappy2</span><span style="color:#ADBAC7;">(Employee head) {</span></span>
<span class="line"><span style="color:#ADBAC7;">		Info</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">allInfo</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">process</span><span style="color:#ADBAC7;">(head);</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#768390;">// 要么最大老板不来 或 来 的收益</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> Math.</span><span style="color:#DCBDFB;">max</span><span style="color:#ADBAC7;">(allInfo.no, allInfo.yes);</span></span>
<span class="line"><span style="color:#ADBAC7;">	}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">maxHappy2</span><span style="color:#24292E;">(Employee head) {</span></span>
<span class="line"><span style="color:#24292E;">		Info allInfo </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">process</span><span style="color:#24292E;">(head);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 要么最大老板不来 或 来 的收益</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> Math.</span><span style="color:#6F42C1;">max</span><span style="color:#24292E;">(allInfo.no, allInfo.yes);</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span></code></pre></div>`,3);function m(n,g,b,I,v,x){const t=c,e=C("ClientOnly");return p(),y("div",null,[u,A(e,null,{default:i(()=>{var a,l;return[(((a=n.$frontmatter)==null?void 0:a.aside)??!0)&&(((l=n.$frontmatter)==null?void 0:l.showArticleMetadata)??!0)?(p(),B(t,{key:0,article:n.$frontmatter},null,8,["article"])):E("",!0)]}),_:1}),d,h,f])}const z=r(F,[["render",m]]);export{N as __pageData,z as default};
