import{_ as o}from"./chunks/ArticleMetadata.59a467b2.js";import{_ as l,v as s,b as c,t as i,O as d,F as r,L as _,R as m,M as u,C as L,B as h}from"./chunks/framework.5cbdba25.js";import"./chunks/md5.02486a14.js";const k=JSON.parse('{"title":"C++的STL概述","description":"","frontmatter":{"title":"C++的STL概述","author":"阿源","date":"2023/02/06 21:29","categories":["C++基础快速入门"],"tags":["C++","C++基础","STL"]},"headers":[],"relativePath":"courses/c_plus/02-C++的STL/01-c++STL.md","filePath":"courses/c_plus/02-C++的STL/01-c++STL.md","lastUpdated":1695348718000}'),S={name:"courses/c_plus/02-C++的STL/01-c++STL.md"},T=r("h1",{id:"c-的stl概述",tabindex:"-1"},[_("C++的STL概述 "),r("a",{class:"header-anchor",href:"#c-的stl概述","aria-label":'Permalink to "C++的STL概述"'},"​")],-1),f=m('<h2 id="stl的概述" tabindex="-1">STL的概述 <a class="header-anchor" href="#stl的概述" aria-label="Permalink to &quot;STL的概述&quot;">​</a></h2><p>STL(Standard Template Library,标准模板库)</p><p>STL的6大组件：容器、算法、迭代器、适配器、仿函数、空间配置</p><p>容器：存放数据</p><p>算法：操作数据</p><p>迭代器：算法 通过迭代器 操作 容器</p><p>适配器：为算法 提供更多的接口</p><p>仿函数：为算法 提供策略</p><p>空间配置：为算法、容器提供动态空间</p><p>算法分类：质变算法、非质变算法</p><p>质变算法：会更改容器的值（拷贝，替换，删除等等）</p><p>非质变算法：是指运算过程中不会更改区间内的元素内容，例如查找、计数、遍历、寻找极值等等</p><p>迭代器：算法和容器的桥梁</p><p><img src="https://cdn.jsdelivr.net/gh/clint-sfy/blogcdn@master/img/c_plus/STL1.png" alt=""></p>',14);function C(t,g,b,$,v,y){const p=o,n=u("ClientOnly");return s(),c("div",null,[T,i(n,null,{default:d(()=>{var a,e;return[(((a=t.$frontmatter)==null?void 0:a.aside)??!0)&&(((e=t.$frontmatter)==null?void 0:e.showArticleMetadata)??!0)?(s(),L(p,{key:0,article:t.$frontmatter},null,8,["article"])):h("",!0)]}),_:1}),f])}const q=l(S,[["render",C]]);export{k as __pageData,q as default};
