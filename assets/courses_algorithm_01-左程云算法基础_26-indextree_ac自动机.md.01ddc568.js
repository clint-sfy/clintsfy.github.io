import{_ as e}from"./chunks/ArticleMetadata.efdb5e9a.js";import{_ as c,v as l,b as r,t as y,O as A,F as p,L as D,R as i,M as C,C as B,B as E}from"./chunks/framework.5cbdba25.js";import"./chunks/md5.02486a14.js";const f=JSON.parse('{"title":"ac自动机","description":"","frontmatter":{"title":"ac自动机","author":"阿源","date":"2023/03/26 12:00","categories":["数据结构与算法"],"tags":["数据结构与算法","ac自动机"]},"headers":[],"relativePath":"courses/algorithm/01-左程云算法基础/26-indextree_ac自动机.md","filePath":"courses/algorithm/01-左程云算法基础/26-indextree_ac自动机.md","lastUpdated":1691397650000}'),F={name:"courses/algorithm/01-左程云算法基础/26-indextree_ac自动机.md"},d=p("h1",{id:"ac自动机",tabindex:"-1"},[D("ac自动机 "),p("a",{class:"header-anchor",href:"#ac自动机","aria-label":'Permalink to "ac自动机"'},"​")],-1),u=i(`<div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#adbac7;">[1 2 3 4 5 6 7]</span></span>
<span class="line"><span style="color:#adbac7;"></span></span>
<span class="line"><span style="color:#adbac7;">[1 12 3 1234 5 56 7 12345678]</span></span>
<span class="line"><span style="color:#adbac7;"></span></span>
<span class="line"><span style="color:#adbac7;">第8个位置管 00001 - 01000</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">[1 2 3 4 5 6 7]</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">[1 12 3 1234 5 56 7 12345678]</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">第8个位置管 00001 - 01000</span></span></code></pre></div><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#768390;">// 下标从1开始！</span></span>
<span class="line"><span style="color:#ADBAC7;">	</span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">static</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">class</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">IndexTree</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">private</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">int</span><span style="color:#F69D50;">[] </span><span style="color:#ADBAC7;">tree;</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">private</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">int</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">N;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#768390;">// 0位置弃而不用！</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">IndexTree</span><span style="color:#ADBAC7;">(</span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">size</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">			N </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> size;</span></span>
<span class="line"><span style="color:#ADBAC7;">			tree </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">new</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;">[N </span><span style="color:#F47067;">+</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">];</span></span>
<span class="line"><span style="color:#ADBAC7;">		}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#768390;">// 1~index 累加和是多少？</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">sum</span><span style="color:#ADBAC7;">(</span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">index</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">			</span><span style="color:#F47067;">int</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">ret</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">			</span><span style="color:#F47067;">while</span><span style="color:#ADBAC7;"> (index </span><span style="color:#F47067;">&gt;</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">				ret </span><span style="color:#F47067;">+=</span><span style="color:#ADBAC7;"> tree[index];</span></span>
<span class="line"><span style="color:#ADBAC7;">                </span><span style="color:#768390;">// 从右往左依次取1</span></span>
<span class="line"><span style="color:#ADBAC7;">				index </span><span style="color:#F47067;">-=</span><span style="color:#ADBAC7;"> index </span><span style="color:#F47067;">&amp;</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">-</span><span style="color:#ADBAC7;">index;</span></span>
<span class="line"><span style="color:#ADBAC7;">			}</span></span>
<span class="line"><span style="color:#ADBAC7;">			</span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> ret;</span></span>
<span class="line"><span style="color:#ADBAC7;">		}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#768390;">// index &amp; -index : 提取出index最右侧的1出来</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#768390;">// index :           0011001000</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#768390;">// index &amp; -index :  0000001000</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">void</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">add</span><span style="color:#ADBAC7;">(</span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">index</span><span style="color:#ADBAC7;">, </span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">d</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">			</span><span style="color:#F47067;">while</span><span style="color:#ADBAC7;"> (index </span><span style="color:#F47067;">&lt;=</span><span style="color:#ADBAC7;"> N) {</span></span>
<span class="line"><span style="color:#ADBAC7;">				tree[index] </span><span style="color:#F47067;">+=</span><span style="color:#ADBAC7;"> d;</span></span>
<span class="line"><span style="color:#ADBAC7;">				index </span><span style="color:#F47067;">+=</span><span style="color:#ADBAC7;"> index </span><span style="color:#F47067;">&amp;</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">-</span><span style="color:#ADBAC7;">index;</span></span>
<span class="line"><span style="color:#ADBAC7;">			}</span></span>
<span class="line"><span style="color:#ADBAC7;">		}</span></span>
<span class="line"><span style="color:#ADBAC7;">	}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 下标从1开始！</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">IndexTree</span><span style="color:#24292E;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;">[] tree;</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> N;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#6A737D;">// 0位置弃而不用！</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">IndexTree</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">size</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">			N </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> size;</span></span>
<span class="line"><span style="color:#24292E;">			tree </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;">[N </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#24292E;">		}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#6A737D;">// 1~index 累加和是多少？</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">sum</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">index</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">			</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> ret </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">			</span><span style="color:#D73A49;">while</span><span style="color:#24292E;"> (index </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">				ret </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> tree[index];</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#6A737D;">// 从右往左依次取1</span></span>
<span class="line"><span style="color:#24292E;">				index </span><span style="color:#D73A49;">-=</span><span style="color:#24292E;"> index </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">index;</span></span>
<span class="line"><span style="color:#24292E;">			}</span></span>
<span class="line"><span style="color:#24292E;">			</span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> ret;</span></span>
<span class="line"><span style="color:#24292E;">		}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#6A737D;">// index &amp; -index : 提取出index最右侧的1出来</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#6A737D;">// index :           0011001000</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#6A737D;">// index &amp; -index :  0000001000</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">index</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">d</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">			</span><span style="color:#D73A49;">while</span><span style="color:#24292E;"> (index </span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;"> N) {</span></span>
<span class="line"><span style="color:#24292E;">				tree[index] </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> d;</span></span>
<span class="line"><span style="color:#24292E;">				index </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> index </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">index;</span></span>
<span class="line"><span style="color:#24292E;">			}</span></span>
<span class="line"><span style="color:#24292E;">		}</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span></code></pre></div><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#768390;">// 测试链接：https://leetcode.com/problems/range-sum-query-2d-mutable</span></span>
<span class="line"><span style="color:#768390;">// 但这个题是付费题目</span></span>
<span class="line"><span style="color:#768390;">// 提交时把类名、构造函数名从Code02_IndexTree2D改成NumMatrix</span></span>
<span class="line"><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">class</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">Code02_IndexTree2D</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">	</span><span style="color:#F47067;">private</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">int</span><span style="color:#F69D50;">[][] </span><span style="color:#ADBAC7;">tree;</span></span>
<span class="line"><span style="color:#ADBAC7;">	</span><span style="color:#F47067;">private</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">int</span><span style="color:#F69D50;">[][] </span><span style="color:#ADBAC7;">nums;</span></span>
<span class="line"><span style="color:#ADBAC7;">	</span><span style="color:#F47067;">private</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">int</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">N;</span></span>
<span class="line"><span style="color:#ADBAC7;">	</span><span style="color:#F47067;">private</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">int</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">M;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">	</span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">Code02_IndexTree2D</span><span style="color:#ADBAC7;">(</span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;">[][] </span><span style="color:#F69D50;">matrix</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;"> (matrix.length </span><span style="color:#F47067;">==</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">||</span><span style="color:#ADBAC7;"> matrix[</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">].length </span><span style="color:#F47067;">==</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">			</span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">		}</span></span>
<span class="line"><span style="color:#ADBAC7;">		N </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> matrix.length;</span></span>
<span class="line"><span style="color:#ADBAC7;">		M </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> matrix[</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">].length;</span></span>
<span class="line"><span style="color:#ADBAC7;">		tree </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">new</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;">[N </span><span style="color:#F47067;">+</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">][M </span><span style="color:#F47067;">+</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">];</span></span>
<span class="line"><span style="color:#ADBAC7;">		nums </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">new</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;">[N][M];</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">for</span><span style="color:#ADBAC7;"> (</span><span style="color:#F47067;">int</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">i</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">; i </span><span style="color:#F47067;">&lt;</span><span style="color:#ADBAC7;"> N; i</span><span style="color:#F47067;">++</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">			</span><span style="color:#F47067;">for</span><span style="color:#ADBAC7;"> (</span><span style="color:#F47067;">int</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">j</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">; j </span><span style="color:#F47067;">&lt;</span><span style="color:#ADBAC7;"> M; j</span><span style="color:#F47067;">++</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">				</span><span style="color:#DCBDFB;">update</span><span style="color:#ADBAC7;">(i, j, matrix[i][j]);</span></span>
<span class="line"><span style="color:#ADBAC7;">			}</span></span>
<span class="line"><span style="color:#ADBAC7;">		}</span></span>
<span class="line"><span style="color:#ADBAC7;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">	</span><span style="color:#F47067;">private</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">sum</span><span style="color:#ADBAC7;">(</span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">row</span><span style="color:#ADBAC7;">, </span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">col</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">int</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">sum</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">for</span><span style="color:#ADBAC7;"> (</span><span style="color:#F47067;">int</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">i</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> row </span><span style="color:#F47067;">+</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">; i </span><span style="color:#F47067;">&gt;</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">; i </span><span style="color:#F47067;">-=</span><span style="color:#ADBAC7;"> i </span><span style="color:#F47067;">&amp;</span><span style="color:#ADBAC7;"> (</span><span style="color:#F47067;">-</span><span style="color:#ADBAC7;">i)) {</span></span>
<span class="line"><span style="color:#ADBAC7;">			</span><span style="color:#F47067;">for</span><span style="color:#ADBAC7;"> (</span><span style="color:#F47067;">int</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">j</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> col </span><span style="color:#F47067;">+</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">; j </span><span style="color:#F47067;">&gt;</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">; j </span><span style="color:#F47067;">-=</span><span style="color:#ADBAC7;"> j </span><span style="color:#F47067;">&amp;</span><span style="color:#ADBAC7;"> (</span><span style="color:#F47067;">-</span><span style="color:#ADBAC7;">j)) {</span></span>
<span class="line"><span style="color:#ADBAC7;">				sum </span><span style="color:#F47067;">+=</span><span style="color:#ADBAC7;"> tree[i][j];</span></span>
<span class="line"><span style="color:#ADBAC7;">			}</span></span>
<span class="line"><span style="color:#ADBAC7;">		}</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> sum;</span></span>
<span class="line"><span style="color:#ADBAC7;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">	</span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">void</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">update</span><span style="color:#ADBAC7;">(</span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">row</span><span style="color:#ADBAC7;">, </span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">col</span><span style="color:#ADBAC7;">, </span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">val</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;"> (N </span><span style="color:#F47067;">==</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">||</span><span style="color:#ADBAC7;"> M </span><span style="color:#F47067;">==</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">			</span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">		}</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">int</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">add</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> val </span><span style="color:#F47067;">-</span><span style="color:#ADBAC7;"> nums[row][col];</span></span>
<span class="line"><span style="color:#ADBAC7;">		nums[row][col] </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> val;</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">for</span><span style="color:#ADBAC7;"> (</span><span style="color:#F47067;">int</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">i</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> row </span><span style="color:#F47067;">+</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">; i </span><span style="color:#F47067;">&lt;=</span><span style="color:#ADBAC7;"> N; i </span><span style="color:#F47067;">+=</span><span style="color:#ADBAC7;"> i </span><span style="color:#F47067;">&amp;</span><span style="color:#ADBAC7;"> (</span><span style="color:#F47067;">-</span><span style="color:#ADBAC7;">i)) {</span></span>
<span class="line"><span style="color:#ADBAC7;">			</span><span style="color:#F47067;">for</span><span style="color:#ADBAC7;"> (</span><span style="color:#F47067;">int</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">j</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> col </span><span style="color:#F47067;">+</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">; j </span><span style="color:#F47067;">&lt;=</span><span style="color:#ADBAC7;"> M; j </span><span style="color:#F47067;">+=</span><span style="color:#ADBAC7;"> j </span><span style="color:#F47067;">&amp;</span><span style="color:#ADBAC7;"> (</span><span style="color:#F47067;">-</span><span style="color:#ADBAC7;">j)) {</span></span>
<span class="line"><span style="color:#ADBAC7;">				tree[i][j] </span><span style="color:#F47067;">+=</span><span style="color:#ADBAC7;"> add;</span></span>
<span class="line"><span style="color:#ADBAC7;">			}</span></span>
<span class="line"><span style="color:#ADBAC7;">		}</span></span>
<span class="line"><span style="color:#ADBAC7;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">	</span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">sumRegion</span><span style="color:#ADBAC7;">(</span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">row1</span><span style="color:#ADBAC7;">, </span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">col1</span><span style="color:#ADBAC7;">, </span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">row2</span><span style="color:#ADBAC7;">, </span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">col2</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;"> (N </span><span style="color:#F47067;">==</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">||</span><span style="color:#ADBAC7;"> M </span><span style="color:#F47067;">==</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">			</span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">		}</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">sum</span><span style="color:#ADBAC7;">(row2, col2) </span><span style="color:#F47067;">+</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">sum</span><span style="color:#ADBAC7;">(row1 </span><span style="color:#F47067;">-</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">, col1 </span><span style="color:#F47067;">-</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">) </span><span style="color:#F47067;">-</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">sum</span><span style="color:#ADBAC7;">(row1 </span><span style="color:#F47067;">-</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">, col2) </span><span style="color:#F47067;">-</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">sum</span><span style="color:#ADBAC7;">(row2, col1 </span><span style="color:#F47067;">-</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#ADBAC7;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 测试链接：https://leetcode.com/problems/range-sum-query-2d-mutable</span></span>
<span class="line"><span style="color:#6A737D;">// 但这个题是付费题目</span></span>
<span class="line"><span style="color:#6A737D;">// 提交时把类名、构造函数名从Code02_IndexTree2D改成NumMatrix</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Code02_IndexTree2D</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;">[][] tree;</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;">[][] nums;</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> N;</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> M;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Code02_IndexTree2D</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;">[][] </span><span style="color:#E36209;">matrix</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (matrix.length </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">||</span><span style="color:#24292E;"> matrix[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">].length </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">			</span><span style="color:#D73A49;">return</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">		}</span></span>
<span class="line"><span style="color:#24292E;">		N </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> matrix.length;</span></span>
<span class="line"><span style="color:#24292E;">		M </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> matrix[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">].length;</span></span>
<span class="line"><span style="color:#24292E;">		tree </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;">[N </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">][M </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#24292E;">		nums </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;">[N][M];</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> N; i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">			</span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> j </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">; j </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> M; j</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">				</span><span style="color:#6F42C1;">update</span><span style="color:#24292E;">(i, j, matrix[i][j]);</span></span>
<span class="line"><span style="color:#24292E;">			}</span></span>
<span class="line"><span style="color:#24292E;">		}</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">sum</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">row</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">col</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> sum </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> row </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">-=</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">i)) {</span></span>
<span class="line"><span style="color:#24292E;">			</span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> j </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> col </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">; j </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">; j </span><span style="color:#D73A49;">-=</span><span style="color:#24292E;"> j </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">j)) {</span></span>
<span class="line"><span style="color:#24292E;">				sum </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> tree[i][j];</span></span>
<span class="line"><span style="color:#24292E;">			}</span></span>
<span class="line"><span style="color:#24292E;">		}</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> sum;</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">update</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">row</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">col</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">val</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (N </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">||</span><span style="color:#24292E;"> M </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">			</span><span style="color:#D73A49;">return</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">		}</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> add </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> val </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> nums[row][col];</span></span>
<span class="line"><span style="color:#24292E;">		nums[row][col] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> val;</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> row </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;"> N; i </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">i)) {</span></span>
<span class="line"><span style="color:#24292E;">			</span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> j </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> col </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">; j </span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;"> M; j </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> j </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">j)) {</span></span>
<span class="line"><span style="color:#24292E;">				tree[i][j] </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> add;</span></span>
<span class="line"><span style="color:#24292E;">			}</span></span>
<span class="line"><span style="color:#24292E;">		}</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">sumRegion</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">row1</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">col1</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">row2</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">col2</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (N </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">||</span><span style="color:#24292E;"> M </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">			</span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">		}</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">sum</span><span style="color:#24292E;">(row2, col2) </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">sum</span><span style="color:#24292E;">(row1 </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, col1 </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">sum</span><span style="color:#24292E;">(row1 </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, col2) </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">sum</span><span style="color:#24292E;">(row2, col1 </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div>`,3);function m(s,x,h,v,g,b){const o=e,t=C("ClientOnly");return l(),r("div",null,[d,y(t,null,{default:A(()=>{var n,a;return[(((n=s.$frontmatter)==null?void 0:n.aside)??!0)&&(((a=s.$frontmatter)==null?void 0:a.showArticleMetadata)??!0)?(l(),B(o,{key:0,article:s.$frontmatter},null,8,["article"])):E("",!0)]}),_:1}),u])}const N=c(F,[["render",m]]);export{f as __pageData,N as default};
