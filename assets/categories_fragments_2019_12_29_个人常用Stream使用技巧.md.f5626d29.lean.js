import{_ as i}from"./chunks/ArticleMetadata.59a467b2.js";import{_ as A,v as l,b as C,F as t,L as o,t as p,O as D,R as B,M as e,C as d,B as F}from"./chunks/framework.5cbdba25.js";import"./chunks/md5.02486a14.js";const w=JSON.parse('{"title":"个人常用 Stream 使用技巧","description":"","frontmatter":{"title":"个人常用 Stream 使用技巧","author":"查尔斯","date":"2019/12/29 15:00","isOriginal":false,"categories":["碎片化知识点"],"tags":["Java","Stream","Lambda"]},"headers":[],"relativePath":"categories/fragments/2019/12/29/个人常用Stream使用技巧.md","filePath":"categories/fragments/2019/12/29/个人常用Stream使用技巧.md","lastUpdated":1692494959000}'),m={name:"categories/fragments/2019/12/29/个人常用Stream使用技巧.md"},u={id:"个人常用-stream-使用技巧",tabindex:"-1"},g=t("a",{class:"header-anchor",href:"#个人常用-stream-使用技巧","aria-label":'Permalink to "个人常用 Stream 使用技巧 <Badge text="持续更新" type="warning" />"'},"​",-1),E=B(`<h2 id="映射并以指定分隔符进行拼接" tabindex="-1">映射并以指定分隔符进行拼接 <a class="header-anchor" href="#映射并以指定分隔符进行拼接" aria-label="Permalink to &quot;映射并以指定分隔符进行拼接&quot;">​</a></h2><details class="details custom-block"><summary>需求：将角色中的角色名称取出来，并以“,”号分隔的形式将所有角色名称拼接成一个字符串。</summary><p>实现方案：通过 <code>map()</code> 可以只保留角色名称信息, 通过 <code>Collectors.joining()</code> 可以将角色名称以指定分隔符拼接起来。</p></details><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#768390;">// 1、准备一些实验数据, 代码不会像注释一样骗人, 所以就不单独对角色类中的字段解释了</span></span>
<span class="line"><span style="color:#ADBAC7;">List</span><span style="color:#F69D50;">&lt;</span><span style="color:#F47067;">Role</span><span style="color:#F69D50;">&gt; </span><span style="color:#ADBAC7;">roleList</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">new</span><span style="color:#ADBAC7;"> ArrayList&lt;&gt;(</span><span style="color:#6CB6FF;">3</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#ADBAC7;">roleList.</span><span style="color:#DCBDFB;">add</span><span style="color:#ADBAC7;">(</span><span style="color:#F47067;">new</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">Role</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">, </span><span style="color:#96D0FF;">&quot;超级管理员&quot;</span><span style="color:#ADBAC7;">));</span></span>
<span class="line"><span style="color:#ADBAC7;">roleList.</span><span style="color:#DCBDFB;">add</span><span style="color:#ADBAC7;">(</span><span style="color:#F47067;">new</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">Role</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;">, </span><span style="color:#96D0FF;">&quot;管理员&quot;</span><span style="color:#ADBAC7;">));</span></span>
<span class="line"><span style="color:#ADBAC7;">roleList.</span><span style="color:#DCBDFB;">add</span><span style="color:#ADBAC7;">(</span><span style="color:#F47067;">new</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">Role</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">3</span><span style="color:#ADBAC7;">, </span><span style="color:#96D0FF;">&quot;普通用户&quot;</span><span style="color:#ADBAC7;">));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#768390;">// 2、通过 map() 可以只保留角色名称, 通过 Collectors.joining() 可以将角色名称以指定分隔符拼接起来</span></span>
<span class="line"><span style="color:#ADBAC7;">String</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">result</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> roleList.</span><span style="color:#DCBDFB;">stream</span><span style="color:#ADBAC7;">()</span></span>
<span class="line"><span style="color:#ADBAC7;">    .</span><span style="color:#DCBDFB;">map</span><span style="color:#ADBAC7;">(Role</span><span style="color:#F47067;">::</span><span style="color:#ADBAC7;">getName)</span></span>
<span class="line"><span style="color:#ADBAC7;">    .</span><span style="color:#DCBDFB;">collect</span><span style="color:#ADBAC7;">(Collectors.</span><span style="color:#DCBDFB;">joining</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;,&quot;</span><span style="color:#ADBAC7;">));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#768390;">// 3、输出结果</span></span>
<span class="line"><span style="color:#768390;">// 超级管理员,管理员,普通用户</span></span>
<span class="line"><span style="color:#ADBAC7;">System.out.</span><span style="color:#DCBDFB;">println</span><span style="color:#ADBAC7;">(result);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 1、准备一些实验数据, 代码不会像注释一样骗人, 所以就不单独对角色类中的字段解释了</span></span>
<span class="line"><span style="color:#24292E;">List&lt;</span><span style="color:#D73A49;">Role</span><span style="color:#24292E;">&gt; roleList </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> ArrayList&lt;&gt;(</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">roleList.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Role</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;超级管理员&quot;</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">roleList.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Role</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;管理员&quot;</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">roleList.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Role</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;普通用户&quot;</span><span style="color:#24292E;">));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 2、通过 map() 可以只保留角色名称, 通过 Collectors.joining() 可以将角色名称以指定分隔符拼接起来</span></span>
<span class="line"><span style="color:#24292E;">String result </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> roleList.</span><span style="color:#6F42C1;">stream</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">    .</span><span style="color:#6F42C1;">map</span><span style="color:#24292E;">(Role</span><span style="color:#D73A49;">::</span><span style="color:#24292E;">getName)</span></span>
<span class="line"><span style="color:#24292E;">    .</span><span style="color:#6F42C1;">collect</span><span style="color:#24292E;">(Collectors.</span><span style="color:#6F42C1;">joining</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;,&quot;</span><span style="color:#24292E;">));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 3、输出结果</span></span>
<span class="line"><span style="color:#6A737D;">// 超级管理员,管理员,普通用户</span></span>
<span class="line"><span style="color:#24292E;">System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(result);</span></span></code></pre></div>`,3);function _(s,h,f,q,L,S){const r=e("Badge"),c=i,y=e("ClientOnly");return l(),C("div",null,[t("h1",u,[o("个人常用 Stream 使用技巧 "),p(r,{text:"持续更新",type:"warning"}),o(),g]),p(y,null,{default:D(()=>{var a,n;return[(((a=s.$frontmatter)==null?void 0:a.aside)??!0)&&(((n=s.$frontmatter)==null?void 0:n.showArticleMetadata)??!0)?(l(),d(c,{key:0,article:s.$frontmatter},null,8,["article"])):F("",!0)]}),_:1}),E])}const k=A(m,[["render",_]]);export{w as __pageData,k as default};
