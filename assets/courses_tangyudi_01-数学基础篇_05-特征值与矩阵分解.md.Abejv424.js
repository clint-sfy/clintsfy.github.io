import{_ as i}from"./chunks/ArticleMetadata.BdQRwYO7.js";import{_ as d,C as c,c as h,o,k as n,G as _,P as p,a as m,w as u,b as f,e as b}from"./chunks/framework.CLT-Xekf.js";import"./chunks/md5.Dgu2YaMo.js";const B=JSON.parse('{"title":"特征值与矩阵分解","description":"","frontmatter":{"title":"特征值与矩阵分解","author":"阿源","date":"2023/06/05 12:00","categories":["机器学习理论基础"],"tags":["机器学习","数学基础"]},"headers":[],"relativePath":"courses/tangyudi/01-数学基础篇/05-特征值与矩阵分解.md","filePath":"courses/tangyudi/01-数学基础篇/05-特征值与矩阵分解.md","lastUpdated":1713341239000}'),g={name:"courses/tangyudi/01-数学基础篇/05-特征值与矩阵分解.md"};function v(e,a,k,q,y,P){const s=i,l=c("ClientOnly");return o(),h("div",null,[a[0]||(a[0]=n("h1",{id:"特征值与矩阵分解",tabindex:"-1"},[m("特征值与矩阵分解 "),n("a",{class:"header-anchor",href:"#特征值与矩阵分解","aria-label":'Permalink to "特征值与矩阵分解"'},"​")],-1)),_(l,null,{default:u(()=>{var t,r;return[(((t=e.$frontmatter)==null?void 0:t.aside)??!0)&&(((r=e.$frontmatter)==null?void 0:r.showArticleMetadata)??!0)?(o(),f(s,{key:0,article:e.$frontmatter},null,8,["article"])):b("",!0)]}),_:1}),a[1]||(a[1]=p('<h2 id="_5-特征值与矩阵分解" tabindex="-1">5. 特征值与矩阵分解 <a class="header-anchor" href="#_5-特征值与矩阵分解" aria-label="Permalink to &quot;5. 特征值与矩阵分解&quot;">​</a></h2><h3 id="_1-特征值和特征向量" tabindex="-1">1. 特征值和特征向量 <a class="header-anchor" href="#_1-特征值和特征向量" aria-label="Permalink to &quot;1. 特征值和特征向量&quot;">​</a></h3><p><img src="https://cdn.jsdelivr.net/gh/clint-sfy/blogcdn@master/python/math/%E7%89%B9%E5%BE%811.png" alt=""></p><p>既然特征值表达了重要程度且和特征向量所对应，那么特征值大的就是 主要信息了，基于这点我们可以提取各种有价值的信息了！</p><h3 id="_2-特征空间和应用" tabindex="-1">2. 特征空间和应用 <a class="header-anchor" href="#_2-特征空间和应用" aria-label="Permalink to &quot;2. 特征空间和应用&quot;">​</a></h3><h3 id="_3-svd解决的问题" tabindex="-1">3. SVD解决的问题 <a class="header-anchor" href="#_3-svd解决的问题" aria-label="Permalink to &quot;3. SVD解决的问题&quot;">​</a></h3><h3 id="_4-特征值分解" tabindex="-1">4. 特征值分解 <a class="header-anchor" href="#_4-特征值分解" aria-label="Permalink to &quot;4. 特征值分解&quot;">​</a></h3><p>特征值分解 矩阵里面的信息有很多呀？来分一分吧！ 当矩阵是N*N的方阵且有N个线性无关的特征向量时就可以来玩啦！ 这时候我们就可以在对角阵当中找比较大的啦，他们就是代表了</p><h3 id="_5-svd矩阵分解" tabindex="-1">5.SVD矩阵分解 <a class="header-anchor" href="#_5-svd矩阵分解" aria-label="Permalink to &quot;5.SVD矩阵分解&quot;">​</a></h3><p>前提：对于一个二维矩阵M可以找到一组标准正交基v1和v2使得Mv1和Mv2是正交的。</p><p><img src="https://cdn.jsdelivr.net/gh/clint-sfy/blogcdn@master/python/math/%E7%89%B9%E5%BE%812.png" alt=""></p>',11))])}const E=d(g,[["render",v]]);export{B as __pageData,E as default};
