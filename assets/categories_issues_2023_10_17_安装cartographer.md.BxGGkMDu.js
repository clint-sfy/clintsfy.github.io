import{_ as g}from"./chunks/ArticleMetadata.CQf8Ggee.js";import{_ as c,C as p,c as y,o as h,k as n,G as e,P as k,a as i,w as r,b as u,e as b}from"./chunks/framework.BbsDpi52.js";import"./chunks/md5.CF1HUy9Q.js";const w=JSON.parse('{"title":"cartographer安装教程","description":"","frontmatter":{"title":"cartographer安装教程","author":"阿源","date":"2023/10/17 19:30","categories":["Bug万象集"],"tags":["cartographer","slam"]},"headers":[],"relativePath":"categories/issues/2023/10/17/安装cartographer.md","filePath":"categories/issues/2023/10/17/安装cartographer.md","lastUpdated":1722856936000}'),D={name:"categories/issues/2023/10/17/安装cartographer.md"};function C(a,s,m,v,_,f){const d=g,F=p("ClientOnly"),o=p("depend");return h(),y("div",null,[s[3]||(s[3]=n("h1",{id:"_2023cartographer安装教程-超详细-保姆级教程",tabindex:"-1"},[i("2023cartographer安装教程（超详细，保姆级教程） "),n("a",{class:"header-anchor",href:"#_2023cartographer安装教程-超详细-保姆级教程","aria-label":'Permalink to "2023cartographer安装教程（超详细，保姆级教程）"'},"​")],-1)),e(F,null,{default:r(()=>{var l,t;return[(((l=a.$frontmatter)==null?void 0:l.aside)??!0)&&(((t=a.$frontmatter)==null?void 0:t.showArticleMetadata)??!0)?(h(),u(d,{key:0,article:a.$frontmatter},null,8,["article"])):b("",!0)]}),_:1}),s[4]||(s[4]=k(`<p>参考博客：<a href="https://blog.csdn.net/m0_45805756/article/details/126309855?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522169734591016800182159728%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=169734591016800182159728&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-126309855-null-null.142%5Ev96%5Epc_search_result_base2&amp;utm_term=cartographer&amp;spm=1018.2226.3001.4187" target="_blank" rel="noreferrer">https://blog.csdn.net/m0_45805756/article/details/126309855?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522169734591016800182159728%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=169734591016800182159728&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-126309855-null-null.142^v96^pc_search_result_base2&amp;utm_term=cartographer&amp;spm=1018.2226.3001.4187</a></p><p>最好全程开魔法，下载速度会很快，开TUN模式</p><h2 id="ubuntu选择" tabindex="-1">Ubuntu选择 <a class="header-anchor" href="#ubuntu选择" aria-label="Permalink to &quot;Ubuntu选择&quot;">​</a></h2><p>去官网下载：<a href="https://releases.ubuntu.com/18.04.6/?_ga=2.223457176.2063223167.1697532208-1499210918.1697373224" target="_blank" rel="noreferrer">https://releases.ubuntu.com/18.04.6/?_ga=2.223457176.2063223167.1697532208-1499210918.1697373224</a></p><p>Ubuntu 18.04.6 LTS (Bionic Beaver)</p><p>选择：[ubuntu-18.04.6-desktop-amd64.iso]</p><h2 id="源码安装" tabindex="-1">源码安装 <a class="header-anchor" href="#源码安装" aria-label="Permalink to &quot;源码安装&quot;">​</a></h2><h3 id="安装依赖" tabindex="-1">安装依赖 <a class="header-anchor" href="#安装依赖" aria-label="Permalink to &quot;安装依赖&quot;">​</a></h3><p>cere官网教程<a href="http://www.ceres-solver.org/installation.html#linux" target="_blank" rel="noreferrer">http://www.ceres-solver.org/installation.html#linux</a></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> net-tools</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> openssh-server</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># google-glog + gflags</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> libgoogle-glog-dev</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> libgflags-dev</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># Use ATLAS for BLAS &amp; LAPACK</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> libatlas-base-dev</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># Eigen3 开魔法的话 自动就是3.3.4 就是要这个版本！！！</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> libeigen3-dev</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># SuiteSparse (optional)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> libsuitesparse-dev</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -y</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    g++</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    git</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    google-mock</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    libboost-all-dev</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    libcairo2-dev</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    libeigen3-dev</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    libgflags-dev</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    libgoogle-glog-dev</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    liblua5.2-dev</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    libsuitesparse-dev</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    libwebp-dev</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    ninja-build</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    protobuf-compiler</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">    python-sphinx</span></span></code></pre></div><p>这里注意！cmake一定要3.16以上，但是ubuntu自带的版本太低了！！</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span>wget https://cmake.org/files/v3.22/cmake-3.22.1.tar.gz</span></span>
<span class="line"><span></span></span>
<span class="line"><span>tar -xvzf cmake-3.22.1.tar.gz</span></span>
<span class="line"><span></span></span>
<span class="line"><span>修改CMakeLists.txt，在其中添加set(CMAKE_USE_OPENSSL OFF)</span></span>
<span class="line"><span>chmod 777 ./configure</span></span>
<span class="line"><span>./configure</span></span>
<span class="line"><span></span></span>
<span class="line"><span>make</span></span>
<span class="line"><span></span></span>
<span class="line"><span>sudo make install</span></span>
<span class="line"><span></span></span>
<span class="line"><span>sudo update-alternatives --install /usr/bin/cmake cmake /usr/local/bin/cmake 1 --force</span></span></code></pre></div><h3 id="安装cere" tabindex="-1">安装cere <a class="header-anchor" href="#安装cere" aria-label="Permalink to &quot;安装cere&quot;">​</a></h3><p>cere一定要选择2.1.0及以下的版本！！！自己去官网下，用xftp传上去</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">mkdir</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> carto_ws</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> carto_ws</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">mkdir</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> src</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> src</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> https://github.com/googlecartographer/cartographer_ros.git</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> https://github.com/googlecartographer/cartographer.git</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 这一步 自己去下载2.0.0的版本 ，放到src的目录里面！！！</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># git clone https://github.com/ceres-solver/ceres-solver.git</span></span></code></pre></div><h3 id="构建ceres" tabindex="-1">构建ceres <a class="header-anchor" href="#构建ceres" aria-label="Permalink to &quot;构建ceres&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ceres-solver-2.0.0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">mkdir</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ceres-bin</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ceres-bin</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">cmake</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ..</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">make</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> test</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> make</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> install</span></span></code></pre></div><h3 id="安装protobuf3" tabindex="-1">安装protobuf3 <a class="header-anchor" href="#安装protobuf3" aria-label="Permalink to &quot;安装protobuf3&quot;">​</a></h3><p>如果是ubuntu18不要使用这种方式</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> remove</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> libprotobuf-dev</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">which</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> protoc</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">//</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 运行完“which</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> protoc”会显示一个protoc的路径，如果没有显示则下面这条命令不必执行</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">rm</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /usr/local/bin/protoc</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">//</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 具体路径以“which</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> protoc”显示的为准，如果是默认的话更有可能是usr/bin/protoc</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> 到此，低版本的protobuf卸载完成。</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)首先安装依赖库</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> autoconf</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> automake</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> libtool</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> curl</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> make</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> g++</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> unzip</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)接下来克隆源码，注意，git submodule update --init --recursive这一步克隆子模块必须有，否则后面会报错（报找不到文件的错），当然，之前如果你没有解决github下载慢的问题(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">0-1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)，这里可能就要慢的绝望了。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> clone</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -b</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> v3.6.0</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> https://github.com/protocolbuffers/protobuf.git</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">//</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 上述命令表示克隆版本为3.6.0的protobuf源码</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> protobuf</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> submodule</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> update</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> --init</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> --recursive</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">//</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 该命令表示克隆protobuf的子模块，主要是gtest</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)编译并安装</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">//</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 进入到克隆的protobuf目录，当然，如果之前就在这个目录下不必再次cd</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> protobuf</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">./autogen.sh</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">./configure</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">make</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">//</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 如果没有克隆子模块，make</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> check会失败但是可以继续make</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> install,但是使用某些功能时可能会出错</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> check</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> make</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> install</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ldconfig</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">//</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> 输出protobuf版本信息则表示安装成功</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">protoc</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> --version</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">最后，查看安装位置</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">which</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> protoc</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">可以看到，其默认下载位置为</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /usr/local/bin/protoc</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">这是我们不想要的，因为carto的搜索protoc的路径为/</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> usr/bin/protoc，选择直接copy过去</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> cp</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /usr/local/bin/protoc</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /usr/bin</span></span></code></pre></div><h4 id="解决ubuntu18的gazebo与protobuf冲突" tabindex="-1">解决ubuntu18的gazebo与protobuf冲突 <a class="header-anchor" href="#解决ubuntu18的gazebo与protobuf冲突" aria-label="Permalink to &quot;解决ubuntu18的gazebo与protobuf冲突&quot;">​</a></h4><p>gazebo9需要protobuf 3.0</p><p>gazebo11需要protobuf3.6</p><p>解决办法：<a href="https://zhuanlan.zhihu.com/p/573559407" target="_blank" rel="noreferrer">https://zhuanlan.zhihu.com/p/573559407</a></p><h3 id="安装ros" tabindex="-1">安装ros <a class="header-anchor" href="#安装ros" aria-label="Permalink to &quot;安装ros&quot;">​</a></h3><p>如果您使用的是Ubuntu 18.04，那么适合您的ROS版本是ROS Melodic，而不是Kinetic。ROS Melodic是专为Ubuntu 18.04设计的ROS版本。</p><p>要在Ubuntu 18.04上安装ROS Melodic，请按照以下步骤进行操作：</p><ol><li>打开终端并运行以下命令，以添加ROS软件包源的密钥：</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> curl</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> apt-key</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> -</span></span></code></pre></div><ol start="2"><li>运行以下命令，以添加ROS软件包源到软件源列表：</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -c</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;echo &quot;deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main&quot; &gt; /etc/apt/sources.list.d/ros-latest.list&#39;</span></span></code></pre></div><ol start="3"><li>运行以下命令，以更新软件包列表：</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> update</span></span></code></pre></div><ol start="4"><li>运行以下命令，以安装ROS Melodic的完整桌面安装包：</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ros-melodic-desktop-full</span></span></code></pre></div><ol start="5"><li>安装完成后，运行以下命令，以初始化ROS环境：</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;source /opt/ros/melodic/setup.bash&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> &gt;&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ~/.bashrc</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">source</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ~/.bashrc</span></span></code></pre></div><ol start="6"><li>运行以下命令，以安装额外的依赖项：</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> python-rosdep</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> python-rosinstall</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> python-rosinstall-generator</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> python-wstool</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> build-essential</span></span></code></pre></div><ol start="7"><li>运行以下命令，以初始化rosdep：</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> carto_ws</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> rosdep</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> init</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">rosdep</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> update</span></span></code></pre></div><p>现在，您已经成功安装了ROS Melodic。您可以通过运行以下命令来验证已安装的ROS版本：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span>rosversion -d</span></span></code></pre></div><p>如果输出为<code>melodic</code>，则表示您已成功安装了ROS Melodic。</p><p>请注意，确保您的操作系统版本与您选择的ROS版本相匹配。如果您的操作系统版本不同，请选择适合您操作系统的其他ROS版本。</p><h3 id="编译cartographer" tabindex="-1">编译cartographer <a class="header-anchor" href="#编译cartographer" aria-label="Permalink to &quot;编译cartographer&quot;">​</a></h3>`,48)),n("p",null,[s[1]||(s[1]=i("需要删除或者注释在cartographer 包下package.xml文件里的(")),e(o,null,{default:r(()=>s[0]||(s[0]=[i("libabsl-dev")])),_:1,__:[0]}),s[2]||(s[2]=i(") 。"))]),s[5]||(s[5]=k(`<div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span># 这样子操作</span></span>
<span class="line"><span>&lt;!--  &lt;depend&gt;libabsl-dev&lt;/depend&gt; --&gt;</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> stow</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> chmod</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> +x</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ~/carto_ws/src/cartographer/scripts/install_abseil.sh</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> cd</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ~/carto_ws/src/cartographer/scripts</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ./install_abseil.sh</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># cd carto_ws</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># rosdep update</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 从这一步开始</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">rosdep</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> --from-paths</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> src</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> --ignore-src</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> --rosdistro=melodic</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -y</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 这一步会有一些包没有下载完需要反复根据提示下载 知道sucessful</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 注意！如果提示是std_msgs  那么为ros-melodic-std-msgs </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ros-melodic-提示的东西</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> cartographer</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">mkdir</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> build</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> build</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">cmake</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ..</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -G</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> Ninja</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">ninja//需要很长时间</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">ninja</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> test</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ninja</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> install</span></span></code></pre></div><h2 id="编译安装" tabindex="-1">编译安装 <a class="header-anchor" href="#编译安装" aria-label="Permalink to &quot;编译安装&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> carto_ws</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">catkin_make_isolated</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> --install</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> --use-ninja//需要很长时间(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">下次编译会很快完成</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">source</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> install_isolated/setup.bash</span></span></code></pre></div><h2 id="测试" tabindex="-1">测试 <a class="header-anchor" href="#测试" aria-label="Permalink to &quot;测试&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">wget</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -P</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ~/Downloads</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> https://storage.googleapis.com/cartographer-public-data/bags/backpack_2d/cartographer_paper_deutsches_museum.bag</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">roslaunch</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> cartographer_ros</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> demo_backpack_2d.launch</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> bag_filename:=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">\${HOME}</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">/Downloads/cartographer_paper_deutsches_museum.bag</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">wget</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -P</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ~/Downloads</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> https://storage.googleapis.com/cartographer-public-data/bags/backpack_3d/with_intensities/b3-2016-04-05-14-14-00.bag</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">roslaunch</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> cartographer_ros</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> demo_backpack_3d.launch</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> bag_filename:=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">\${HOME}</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">/Downloads/b3-2016-04-05-14-14-00.bag</span></span></code></pre></div>`,7))])}const S=c(D,[["render",C]]);export{w as __pageData,S as default};
