import{_ as t}from"./chunks/ArticleMetadata.e10718d6.js";import{_ as c,v as l,b as r,E as y,O as A,F as p,L as i,R as C,M as F,C as D,B}from"./chunks/framework.2aeb816e.js";import"./chunks/md5.772bbdf1.js";const q=JSON.parse('{"title":"降维","description":"","frontmatter":{"title":"降维","author":"阿源","date":"2023/07/12 12:00","categories":["机器学习快速入门"],"tags":["机器学习"]},"headers":[],"relativePath":"courses/tangyudi/02-机器学习篇/12-降维.md","filePath":"courses/tangyudi/02-机器学习篇/12-降维.md","lastUpdated":1691327334000}'),E={name:"courses/tangyudi/02-机器学习篇/12-降维.md"},d=p("h1",{id:"降维",tabindex:"-1"},[i("降维 "),p("a",{class:"header-anchor",href:"#降维","aria-label":'Permalink to "降维"'},"​")],-1),g=C(`<h2 id="_26-线性判别分析降维-lda" tabindex="-1">26. 线性判别分析降维 LDA <a class="header-anchor" href="#_26-线性判别分析降维-lda" aria-label="Permalink to &quot;26. 线性判别分析降维 LDA&quot;">​</a></h2><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#768390;"># 适用于有监督 分类 的数据初始降维</span></span>
<span class="line"><span style="color:#768390;"># 必须是有监督问题</span></span>
<span class="line"><span style="color:#ADBAC7;">feature_dict </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> {i:label </span><span style="color:#F47067;">for</span><span style="color:#ADBAC7;"> i,label </span><span style="color:#F47067;">in</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">zip</span><span style="color:#ADBAC7;">(</span></span>
<span class="line"><span style="color:#ADBAC7;">                </span><span style="color:#6CB6FF;">range</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">4</span><span style="color:#ADBAC7;">),</span></span>
<span class="line"><span style="color:#ADBAC7;">                  (</span><span style="color:#96D0FF;">&#39;sepal length in cm&#39;</span><span style="color:#ADBAC7;">,</span></span>
<span class="line"><span style="color:#ADBAC7;">                  </span><span style="color:#96D0FF;">&#39;sepal width in cm&#39;</span><span style="color:#ADBAC7;">,</span></span>
<span class="line"><span style="color:#ADBAC7;">                  </span><span style="color:#96D0FF;">&#39;petal length in cm&#39;</span><span style="color:#ADBAC7;">,</span></span>
<span class="line"><span style="color:#ADBAC7;">                  </span><span style="color:#96D0FF;">&#39;petal width in cm&#39;</span><span style="color:#ADBAC7;">, ))}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F47067;">import</span><span style="color:#ADBAC7;"> pandas </span><span style="color:#F47067;">as</span><span style="color:#ADBAC7;"> pd</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">df </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> pd.io.parsers.read_csv(</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F69D50;">filepath_or_buffer</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&#39;https://archive.ics.uci.edu/ml/machine-learning-databases/iris/iris.data&#39;</span><span style="color:#ADBAC7;">,</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F69D50;">header</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">None</span><span style="color:#ADBAC7;">,</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F69D50;">sep</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&#39;,&#39;</span><span style="color:#ADBAC7;">,</span></span>
<span class="line"><span style="color:#ADBAC7;">    )</span></span>
<span class="line"><span style="color:#ADBAC7;">df.columns </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> [l </span><span style="color:#F47067;">for</span><span style="color:#ADBAC7;"> i,l </span><span style="color:#F47067;">in</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">sorted</span><span style="color:#ADBAC7;">(feature_dict.items())] </span><span style="color:#F47067;">+</span><span style="color:#ADBAC7;"> [</span><span style="color:#96D0FF;">&#39;class label&#39;</span><span style="color:#ADBAC7;">]</span></span>
<span class="line"><span style="color:#ADBAC7;">df.dropna(</span><span style="color:#F69D50;">how</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&quot;all&quot;</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">inplace</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">True</span><span style="color:#ADBAC7;">) </span><span style="color:#768390;"># to drop the empty line at file-end</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">df.tail()</span></span>
<span class="line"><span style="color:#ADBAC7;">sepal length </span><span style="color:#F47067;">in</span><span style="color:#ADBAC7;"> cm	sepal width </span><span style="color:#F47067;">in</span><span style="color:#ADBAC7;"> cm	petal length </span><span style="color:#F47067;">in</span><span style="color:#ADBAC7;"> cm	petal width </span><span style="color:#F47067;">in</span><span style="color:#ADBAC7;"> cm	</span><span style="color:#F47067;">class</span><span style="color:#ADBAC7;"> label</span></span>
<span class="line"><span style="color:#6CB6FF;">145</span><span style="color:#ADBAC7;">	</span><span style="color:#6CB6FF;">6.7</span><span style="color:#ADBAC7;">	</span><span style="color:#6CB6FF;">3.0</span><span style="color:#ADBAC7;">	</span><span style="color:#6CB6FF;">5.2</span><span style="color:#ADBAC7;">	</span><span style="color:#6CB6FF;">2.3</span><span style="color:#ADBAC7;">	Iris</span><span style="color:#F47067;">-</span><span style="color:#ADBAC7;">virginica</span></span>
<span class="line"><span style="color:#6CB6FF;">146</span><span style="color:#ADBAC7;">	</span><span style="color:#6CB6FF;">6.3</span><span style="color:#ADBAC7;">	</span><span style="color:#6CB6FF;">2.5</span><span style="color:#ADBAC7;">	</span><span style="color:#6CB6FF;">5.0</span><span style="color:#ADBAC7;">	</span><span style="color:#6CB6FF;">1.9</span><span style="color:#ADBAC7;">	Iris</span><span style="color:#F47067;">-</span><span style="color:#ADBAC7;">virginica</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F47067;">from</span><span style="color:#ADBAC7;"> sklearn.preprocessing </span><span style="color:#F47067;">import</span><span style="color:#ADBAC7;"> LabelEncoder</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">X </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> df[[</span><span style="color:#96D0FF;">&#39;sepal length in cm&#39;</span><span style="color:#ADBAC7;">,</span><span style="color:#96D0FF;">&#39;sepal width in cm&#39;</span><span style="color:#ADBAC7;">,</span><span style="color:#96D0FF;">&#39;petal length in cm&#39;</span><span style="color:#ADBAC7;">,</span><span style="color:#96D0FF;">&#39;petal width in cm&#39;</span><span style="color:#ADBAC7;">]].values</span></span>
<span class="line"><span style="color:#ADBAC7;">y </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> df[</span><span style="color:#96D0FF;">&#39;class label&#39;</span><span style="color:#ADBAC7;">].values</span></span>
<span class="line"></span>
<span class="line"><span style="color:#768390;"># 把标签变成数字快捷写法</span></span>
<span class="line"><span style="color:#ADBAC7;">enc </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> LabelEncoder()</span></span>
<span class="line"><span style="color:#ADBAC7;">label_encoder </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> enc.fit(y)</span></span>
<span class="line"><span style="color:#ADBAC7;">y </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> label_encoder.transform(y) </span><span style="color:#F47067;">+</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#768390;">#label_dict = {1: &#39;Setosa&#39;, 2: &#39;Versicolor&#39;, 3:&#39;Virginica&#39;}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># 适用于有监督 分类 的数据初始降维</span></span>
<span class="line"><span style="color:#6A737D;"># 必须是有监督问题</span></span>
<span class="line"><span style="color:#24292E;">feature_dict </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {i:label </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> i,label </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">zip</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#005CC5;">range</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">                  (</span><span style="color:#032F62;">&#39;sepal length in cm&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                  </span><span style="color:#032F62;">&#39;sepal width in cm&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                  </span><span style="color:#032F62;">&#39;petal length in cm&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                  </span><span style="color:#032F62;">&#39;petal width in cm&#39;</span><span style="color:#24292E;">, ))}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> pandas </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> pd</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">df </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> pd.io.parsers.read_csv(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">filepath_or_buffer</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;https://archive.ics.uci.edu/ml/machine-learning-databases/iris/iris.data&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">header</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">None</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">sep</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;,&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    )</span></span>
<span class="line"><span style="color:#24292E;">df.columns </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [l </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> i,l </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">sorted</span><span style="color:#24292E;">(feature_dict.items())] </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> [</span><span style="color:#032F62;">&#39;class label&#39;</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">df.dropna(</span><span style="color:#E36209;">how</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;all&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">inplace</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">True</span><span style="color:#24292E;">) </span><span style="color:#6A737D;"># to drop the empty line at file-end</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">df.tail()</span></span>
<span class="line"><span style="color:#24292E;">sepal length </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> cm	sepal width </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> cm	petal length </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> cm	petal width </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> cm	</span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> label</span></span>
<span class="line"><span style="color:#005CC5;">145</span><span style="color:#24292E;">	</span><span style="color:#005CC5;">6.7</span><span style="color:#24292E;">	</span><span style="color:#005CC5;">3.0</span><span style="color:#24292E;">	</span><span style="color:#005CC5;">5.2</span><span style="color:#24292E;">	</span><span style="color:#005CC5;">2.3</span><span style="color:#24292E;">	Iris</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">virginica</span></span>
<span class="line"><span style="color:#005CC5;">146</span><span style="color:#24292E;">	</span><span style="color:#005CC5;">6.3</span><span style="color:#24292E;">	</span><span style="color:#005CC5;">2.5</span><span style="color:#24292E;">	</span><span style="color:#005CC5;">5.0</span><span style="color:#24292E;">	</span><span style="color:#005CC5;">1.9</span><span style="color:#24292E;">	Iris</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">virginica</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> sklearn.preprocessing </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> LabelEncoder</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">X </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> df[[</span><span style="color:#032F62;">&#39;sepal length in cm&#39;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&#39;sepal width in cm&#39;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&#39;petal length in cm&#39;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&#39;petal width in cm&#39;</span><span style="color:#24292E;">]].values</span></span>
<span class="line"><span style="color:#24292E;">y </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> df[</span><span style="color:#032F62;">&#39;class label&#39;</span><span style="color:#24292E;">].values</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 把标签变成数字快捷写法</span></span>
<span class="line"><span style="color:#24292E;">enc </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> LabelEncoder()</span></span>
<span class="line"><span style="color:#24292E;">label_encoder </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> enc.fit(y)</span></span>
<span class="line"><span style="color:#24292E;">y </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> label_encoder.transform(y) </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">#label_dict = {1: &#39;Setosa&#39;, 2: &#39;Versicolor&#39;, 3:&#39;Virginica&#39;}</span></span></code></pre></div><p><img src="https://cdn.staticaly.com/gh/clint-sfy/blogcdn@master/python/ML/26.1.png" alt=""></p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">import</span><span style="color:#ADBAC7;"> numpy </span><span style="color:#F47067;">as</span><span style="color:#ADBAC7;"> np</span></span>
<span class="line"><span style="color:#ADBAC7;">np.set_printoptions(</span><span style="color:#F69D50;">precision</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">4</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">mean_vectors </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> []</span></span>
<span class="line"><span style="color:#F47067;">for</span><span style="color:#ADBAC7;"> cl </span><span style="color:#F47067;">in</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">range</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">4</span><span style="color:#ADBAC7;">):</span></span>
<span class="line"><span style="color:#ADBAC7;">    mean_vectors.append(np.mean(X[y</span><span style="color:#F47067;">==</span><span style="color:#ADBAC7;">cl], </span><span style="color:#F69D50;">axis</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">))</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#6CB6FF;">print</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&#39;Mean Vector class </span><span style="color:#F47067;">%s</span><span style="color:#96D0FF;">: </span><span style="color:#F47067;">%s\\n</span><span style="color:#96D0FF;">&#39;</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">%</span><span style="color:#ADBAC7;">(cl, mean_vectors[cl</span><span style="color:#F47067;">-</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">]))</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">Mean Vector </span><span style="color:#F47067;">class</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">: [ </span><span style="color:#6CB6FF;">5.006</span><span style="color:#ADBAC7;">  </span><span style="color:#6CB6FF;">3.418</span><span style="color:#ADBAC7;">  </span><span style="color:#6CB6FF;">1.464</span><span style="color:#ADBAC7;">  </span><span style="color:#6CB6FF;">0.244</span><span style="color:#ADBAC7;">]</span></span>
<span class="line"><span style="color:#ADBAC7;">Mean Vector </span><span style="color:#F47067;">class</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;">: [ </span><span style="color:#6CB6FF;">5.936</span><span style="color:#ADBAC7;">  </span><span style="color:#6CB6FF;">2.77</span><span style="color:#ADBAC7;">   </span><span style="color:#6CB6FF;">4.26</span><span style="color:#ADBAC7;">   </span><span style="color:#6CB6FF;">1.326</span><span style="color:#ADBAC7;">]</span></span>
<span class="line"><span style="color:#ADBAC7;">Mean Vector </span><span style="color:#F47067;">class</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">3</span><span style="color:#ADBAC7;">: [ </span><span style="color:#6CB6FF;">6.588</span><span style="color:#ADBAC7;">  </span><span style="color:#6CB6FF;">2.974</span><span style="color:#ADBAC7;">  </span><span style="color:#6CB6FF;">5.552</span><span style="color:#ADBAC7;">  </span><span style="color:#6CB6FF;">2.026</span><span style="color:#ADBAC7;">]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> numpy </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> np</span></span>
<span class="line"><span style="color:#24292E;">np.set_printoptions(</span><span style="color:#E36209;">precision</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">mean_vectors </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> []</span></span>
<span class="line"><span style="color:#D73A49;">for</span><span style="color:#24292E;"> cl </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">range</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">):</span></span>
<span class="line"><span style="color:#24292E;">    mean_vectors.append(np.mean(X[y</span><span style="color:#D73A49;">==</span><span style="color:#24292E;">cl], </span><span style="color:#E36209;">axis</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;Mean Vector class </span><span style="color:#005CC5;">%s</span><span style="color:#032F62;">: </span><span style="color:#005CC5;">%s\\n</span><span style="color:#032F62;">&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">%</span><span style="color:#24292E;">(cl, mean_vectors[cl</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">]))</span></span>
<span class="line"><span style="color:#24292E;">    </span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">Mean Vector </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">: [ </span><span style="color:#005CC5;">5.006</span><span style="color:#24292E;">  </span><span style="color:#005CC5;">3.418</span><span style="color:#24292E;">  </span><span style="color:#005CC5;">1.464</span><span style="color:#24292E;">  </span><span style="color:#005CC5;">0.244</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">Mean Vector </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">: [ </span><span style="color:#005CC5;">5.936</span><span style="color:#24292E;">  </span><span style="color:#005CC5;">2.77</span><span style="color:#24292E;">   </span><span style="color:#005CC5;">4.26</span><span style="color:#24292E;">   </span><span style="color:#005CC5;">1.326</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">Mean Vector </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">: [ </span><span style="color:#005CC5;">6.588</span><span style="color:#24292E;">  </span><span style="color:#005CC5;">2.974</span><span style="color:#24292E;">  </span><span style="color:#005CC5;">5.552</span><span style="color:#24292E;">  </span><span style="color:#005CC5;">2.026</span><span style="color:#24292E;">]</span></span></code></pre></div><p><img src="https://cdn.staticaly.com/gh/clint-sfy/blogcdn@master/python/ML/26.2.png" alt=""></p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#6CB6FF;">S_W</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> np.zeros((</span><span style="color:#6CB6FF;">4</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">4</span><span style="color:#ADBAC7;">))</span></span>
<span class="line"><span style="color:#F47067;">for</span><span style="color:#ADBAC7;"> cl,mv </span><span style="color:#F47067;">in</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">zip</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">range</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">4</span><span style="color:#ADBAC7;">), mean_vectors):</span></span>
<span class="line"><span style="color:#ADBAC7;">    class_sc_mat </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> np.zeros((</span><span style="color:#6CB6FF;">4</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">4</span><span style="color:#ADBAC7;">))                  </span><span style="color:#768390;"># scatter matrix for every class</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">for</span><span style="color:#ADBAC7;"> row </span><span style="color:#F47067;">in</span><span style="color:#ADBAC7;"> X[y </span><span style="color:#F47067;">==</span><span style="color:#ADBAC7;"> cl]:</span></span>
<span class="line"><span style="color:#ADBAC7;">        row, mv </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> row.reshape(</span><span style="color:#6CB6FF;">4</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">), mv.reshape(</span><span style="color:#6CB6FF;">4</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">) </span><span style="color:#768390;"># make column vectors</span></span>
<span class="line"><span style="color:#ADBAC7;">        class_sc_mat </span><span style="color:#F47067;">+=</span><span style="color:#ADBAC7;"> (row</span><span style="color:#F47067;">-</span><span style="color:#ADBAC7;">mv).dot((row</span><span style="color:#F47067;">-</span><span style="color:#ADBAC7;">mv).T)</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#6CB6FF;">S_W</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">+=</span><span style="color:#ADBAC7;"> class_sc_mat                             </span><span style="color:#768390;"># sum class scatter matrices</span></span>
<span class="line"><span style="color:#6CB6FF;">print</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&#39;within-class Scatter Matrix:</span><span style="color:#F47067;">\\n</span><span style="color:#96D0FF;">&#39;</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">S_W</span><span style="color:#ADBAC7;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">S_W</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> np.zeros((</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#D73A49;">for</span><span style="color:#24292E;"> cl,mv </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">zip</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">range</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">), mean_vectors):</span></span>
<span class="line"><span style="color:#24292E;">    class_sc_mat </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> np.zeros((</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">))                  </span><span style="color:#6A737D;"># scatter matrix for every class</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> row </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> X[y </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> cl]:</span></span>
<span class="line"><span style="color:#24292E;">        row, mv </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> row.reshape(</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">), mv.reshape(</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">) </span><span style="color:#6A737D;"># make column vectors</span></span>
<span class="line"><span style="color:#24292E;">        class_sc_mat </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> (row</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">mv).dot((row</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">mv).T)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">S_W</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> class_sc_mat                             </span><span style="color:#6A737D;"># sum class scatter matrices</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;within-class Scatter Matrix:</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&#39;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">S_W</span><span style="color:#24292E;">)</span></span></code></pre></div><p><img src="https://cdn.staticaly.com/gh/clint-sfy/blogcdn@master/python/ML/26.3.png" alt=""></p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#ADBAC7;">overall_mean </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> np.mean(X, </span><span style="color:#F69D50;">axis</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6CB6FF;">S_B</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> np.zeros((</span><span style="color:#6CB6FF;">4</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">4</span><span style="color:#ADBAC7;">))</span></span>
<span class="line"><span style="color:#F47067;">for</span><span style="color:#ADBAC7;"> i,mean_vec </span><span style="color:#F47067;">in</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">enumerate</span><span style="color:#ADBAC7;">(mean_vectors):  </span></span>
<span class="line"><span style="color:#ADBAC7;">    n </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> X[y</span><span style="color:#F47067;">==</span><span style="color:#ADBAC7;">i</span><span style="color:#F47067;">+</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">,:].shape[</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">]</span></span>
<span class="line"><span style="color:#ADBAC7;">    mean_vec </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> mean_vec.reshape(</span><span style="color:#6CB6FF;">4</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">) </span><span style="color:#768390;"># make column vector</span></span>
<span class="line"><span style="color:#ADBAC7;">    overall_mean </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> overall_mean.reshape(</span><span style="color:#6CB6FF;">4</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">) </span><span style="color:#768390;"># make column vector</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#6CB6FF;">S_B</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">+=</span><span style="color:#ADBAC7;"> n </span><span style="color:#F47067;">*</span><span style="color:#ADBAC7;"> (mean_vec </span><span style="color:#F47067;">-</span><span style="color:#ADBAC7;"> overall_mean).dot((mean_vec </span><span style="color:#F47067;">-</span><span style="color:#ADBAC7;"> overall_mean).T)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6CB6FF;">print</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&#39;between-class Scatter Matrix:</span><span style="color:#F47067;">\\n</span><span style="color:#96D0FF;">&#39;</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">S_B</span><span style="color:#ADBAC7;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">overall_mean </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> np.mean(X, </span><span style="color:#E36209;">axis</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#005CC5;">S_B</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> np.zeros((</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#D73A49;">for</span><span style="color:#24292E;"> i,mean_vec </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">enumerate</span><span style="color:#24292E;">(mean_vectors):  </span></span>
<span class="line"><span style="color:#24292E;">    n </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> X[y</span><span style="color:#D73A49;">==</span><span style="color:#24292E;">i</span><span style="color:#D73A49;">+</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,:].shape[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">    mean_vec </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> mean_vec.reshape(</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">) </span><span style="color:#6A737D;"># make column vector</span></span>
<span class="line"><span style="color:#24292E;">    overall_mean </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> overall_mean.reshape(</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">) </span><span style="color:#6A737D;"># make column vector</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">S_B</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> n </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> (mean_vec </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> overall_mean).dot((mean_vec </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> overall_mean).T)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;between-class Scatter Matrix:</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&#39;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">S_B</span><span style="color:#24292E;">)</span></span></code></pre></div><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#ADBAC7;">eig_vals, eig_vecs </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> np.linalg.eig(np.linalg.inv(</span><span style="color:#6CB6FF;">S_W</span><span style="color:#ADBAC7;">).dot(</span><span style="color:#6CB6FF;">S_B</span><span style="color:#ADBAC7;">))</span></span>
<span class="line"><span style="color:#768390;"># 算每个特征的特征值和特征向量</span></span>
<span class="line"><span style="color:#F47067;">for</span><span style="color:#ADBAC7;"> i </span><span style="color:#F47067;">in</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">range</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">len</span><span style="color:#ADBAC7;">(eig_vals)):</span></span>
<span class="line"><span style="color:#ADBAC7;">    eigvec_sc </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> eig_vecs[:,i].reshape(</span><span style="color:#6CB6FF;">4</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">)   </span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#6CB6FF;">print</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&#39;</span><span style="color:#F47067;">\\n</span><span style="color:#96D0FF;">Eigenvector </span><span style="color:#F47067;">{}</span><span style="color:#96D0FF;">: </span><span style="color:#F47067;">\\n{}</span><span style="color:#96D0FF;">&#39;</span><span style="color:#ADBAC7;">.format(i</span><span style="color:#F47067;">+</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">, eigvec_sc.real))</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#6CB6FF;">print</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&#39;Eigenvalue </span><span style="color:#F47067;">{:}</span><span style="color:#96D0FF;">: </span><span style="color:#F47067;">{:.2e}</span><span style="color:#96D0FF;">&#39;</span><span style="color:#ADBAC7;">.format(i</span><span style="color:#F47067;">+</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">, eig_vals[i].real))</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">eig_vals, eig_vecs </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> np.linalg.eig(np.linalg.inv(</span><span style="color:#005CC5;">S_W</span><span style="color:#24292E;">).dot(</span><span style="color:#005CC5;">S_B</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#6A737D;"># 算每个特征的特征值和特征向量</span></span>
<span class="line"><span style="color:#D73A49;">for</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">range</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">len</span><span style="color:#24292E;">(eig_vals)):</span></span>
<span class="line"><span style="color:#24292E;">    eigvec_sc </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> eig_vecs[:,i].reshape(</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)   </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">Eigenvector </span><span style="color:#005CC5;">{}</span><span style="color:#032F62;">: </span><span style="color:#005CC5;">\\n{}</span><span style="color:#032F62;">&#39;</span><span style="color:#24292E;">.format(i</span><span style="color:#D73A49;">+</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, eigvec_sc.real))</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;Eigenvalue </span><span style="color:#005CC5;">{</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;">}</span><span style="color:#032F62;">: </span><span style="color:#005CC5;">{</span><span style="color:#D73A49;">:.2e</span><span style="color:#005CC5;">}</span><span style="color:#032F62;">&#39;</span><span style="color:#24292E;">.format(i</span><span style="color:#D73A49;">+</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, eig_vals[i].real))</span></span></code></pre></div><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#768390;">#特征向量：表示映射方向</span></span>
<span class="line"><span style="color:#768390;">#特征值：特征向量的重要程度</span></span>
<span class="line"><span style="color:#768390;">#Make a list of (eigenvalue, eigenvector) tuples</span></span>
<span class="line"><span style="color:#ADBAC7;">eig_pairs </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> [(np.abs(eig_vals[i]), eig_vecs[:,i]) </span><span style="color:#F47067;">for</span><span style="color:#ADBAC7;"> i </span><span style="color:#F47067;">in</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">range</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">len</span><span style="color:#ADBAC7;">(eig_vals))]</span></span>
<span class="line"><span style="color:#768390;"># Sort the (eigenvalue, eigenvector) tuples from high to low</span></span>
<span class="line"><span style="color:#ADBAC7;">eig_pairs </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">sorted</span><span style="color:#ADBAC7;">(eig_pairs, </span><span style="color:#F69D50;">key</span><span style="color:#F47067;">=lambda</span><span style="color:#ADBAC7;"> k: k[</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">], </span><span style="color:#F69D50;">reverse</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">True</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#768390;"># Visually confirm that the list is correctly sorted by decreasing eigenvalues</span></span>
<span class="line"><span style="color:#6CB6FF;">print</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&#39;Eigenvalues in decreasing order:</span><span style="color:#F47067;">\\n</span><span style="color:#96D0FF;">&#39;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#F47067;">for</span><span style="color:#ADBAC7;"> i </span><span style="color:#F47067;">in</span><span style="color:#ADBAC7;"> eig_pairs:</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#6CB6FF;">print</span><span style="color:#ADBAC7;">(i[</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">])</span></span>
<span class="line"><span style="color:#ADBAC7;">Eigenvalues </span><span style="color:#F47067;">in</span><span style="color:#ADBAC7;"> decreasing order:</span></span>
<span class="line"><span style="color:#6CB6FF;">32.2719577997</span></span>
<span class="line"><span style="color:#6CB6FF;">0.27756686384</span></span>
<span class="line"><span style="color:#6CB6FF;">7.7995841654e-15</span></span>
<span class="line"><span style="color:#6CB6FF;">5.76433252705e-15</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6CB6FF;">print</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&#39;Variance explained:</span><span style="color:#F47067;">\\n</span><span style="color:#96D0FF;">&#39;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">eigv_sum </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">sum</span><span style="color:#ADBAC7;">(eig_vals)</span></span>
<span class="line"><span style="color:#F47067;">for</span><span style="color:#ADBAC7;"> i,j </span><span style="color:#F47067;">in</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">enumerate</span><span style="color:#ADBAC7;">(eig_pairs):</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#6CB6FF;">print</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&#39;eigenvalue </span><span style="color:#F47067;">{0:}</span><span style="color:#96D0FF;">: </span><span style="color:#F47067;">{1:.2%}</span><span style="color:#96D0FF;">&#39;</span><span style="color:#ADBAC7;">.format(i</span><span style="color:#F47067;">+</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">, (j[</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">]</span><span style="color:#F47067;">/</span><span style="color:#ADBAC7;">eigv_sum).real))</span></span>
<span class="line"><span style="color:#ADBAC7;">Variance explained:</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">eigenvalue </span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">: </span><span style="color:#6CB6FF;">99.15</span><span style="color:#F47067;">%</span></span>
<span class="line"><span style="color:#ADBAC7;">eigenvalue </span><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;">: </span><span style="color:#6CB6FF;">0.85</span><span style="color:#F47067;">%</span></span>
<span class="line"><span style="color:#ADBAC7;">eigenvalue </span><span style="color:#6CB6FF;">3</span><span style="color:#ADBAC7;">: </span><span style="color:#6CB6FF;">0.00</span><span style="color:#F47067;">%</span></span>
<span class="line"><span style="color:#ADBAC7;">eigenvalue </span><span style="color:#6CB6FF;">4</span><span style="color:#ADBAC7;">: </span><span style="color:#6CB6FF;">0.00</span><span style="color:#F47067;">%</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">#特征向量：表示映射方向</span></span>
<span class="line"><span style="color:#6A737D;">#特征值：特征向量的重要程度</span></span>
<span class="line"><span style="color:#6A737D;">#Make a list of (eigenvalue, eigenvector) tuples</span></span>
<span class="line"><span style="color:#24292E;">eig_pairs </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [(np.abs(eig_vals[i]), eig_vecs[:,i]) </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">range</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">len</span><span style="color:#24292E;">(eig_vals))]</span></span>
<span class="line"><span style="color:#6A737D;"># Sort the (eigenvalue, eigenvector) tuples from high to low</span></span>
<span class="line"><span style="color:#24292E;">eig_pairs </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">sorted</span><span style="color:#24292E;">(eig_pairs, </span><span style="color:#E36209;">key</span><span style="color:#D73A49;">=lambda</span><span style="color:#24292E;"> k: k[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">], </span><span style="color:#E36209;">reverse</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">True</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#6A737D;"># Visually confirm that the list is correctly sorted by decreasing eigenvalues</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;Eigenvalues in decreasing order:</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">for</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> eig_pairs:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">print</span><span style="color:#24292E;">(i[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">])</span></span>
<span class="line"><span style="color:#24292E;">Eigenvalues </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> decreasing order:</span></span>
<span class="line"><span style="color:#005CC5;">32.2719577997</span></span>
<span class="line"><span style="color:#005CC5;">0.27756686384</span></span>
<span class="line"><span style="color:#005CC5;">7.7995841654e-15</span></span>
<span class="line"><span style="color:#005CC5;">5.76433252705e-15</span></span>
<span class="line"></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;Variance explained:</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">eigv_sum </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">sum</span><span style="color:#24292E;">(eig_vals)</span></span>
<span class="line"><span style="color:#D73A49;">for</span><span style="color:#24292E;"> i,j </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">enumerate</span><span style="color:#24292E;">(eig_pairs):</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;eigenvalue </span><span style="color:#005CC5;">{0</span><span style="color:#D73A49;">:</span><span style="color:#005CC5;">}</span><span style="color:#032F62;">: </span><span style="color:#005CC5;">{1</span><span style="color:#D73A49;">:.2%</span><span style="color:#005CC5;">}</span><span style="color:#032F62;">&#39;</span><span style="color:#24292E;">.format(i</span><span style="color:#D73A49;">+</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, (j[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">]</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">eigv_sum).real))</span></span>
<span class="line"><span style="color:#24292E;">Variance explained:</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">eigenvalue </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">99.15</span><span style="color:#D73A49;">%</span></span>
<span class="line"><span style="color:#24292E;">eigenvalue </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">0.85</span><span style="color:#D73A49;">%</span></span>
<span class="line"><span style="color:#24292E;">eigenvalue </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">0.00</span><span style="color:#D73A49;">%</span></span>
<span class="line"><span style="color:#24292E;">eigenvalue </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">0.00</span><span style="color:#D73A49;">%</span></span></code></pre></div><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#768390;"># 选择前两维特征</span></span>
<span class="line"><span style="color:#ADBAC7;">W </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> np.hstack((eig_pairs[</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">][</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">].reshape(</span><span style="color:#6CB6FF;">4</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">), eig_pairs[</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">][</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">].reshape(</span><span style="color:#6CB6FF;">4</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">)))</span></span>
<span class="line"><span style="color:#6CB6FF;">print</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&#39;Matrix W:</span><span style="color:#F47067;">\\n</span><span style="color:#96D0FF;">&#39;</span><span style="color:#ADBAC7;">, W.real)</span></span>
<span class="line"><span style="color:#ADBAC7;">Matrix W:</span></span>
<span class="line"><span style="color:#ADBAC7;"> [[ </span><span style="color:#6CB6FF;">0.2049</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">-</span><span style="color:#6CB6FF;">0.009</span><span style="color:#ADBAC7;"> ]</span></span>
<span class="line"><span style="color:#ADBAC7;"> [ </span><span style="color:#6CB6FF;">0.3871</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">-</span><span style="color:#6CB6FF;">0.589</span><span style="color:#ADBAC7;"> ]</span></span>
<span class="line"><span style="color:#ADBAC7;"> [</span><span style="color:#F47067;">-</span><span style="color:#6CB6FF;">0.5465</span><span style="color:#ADBAC7;">  </span><span style="color:#6CB6FF;">0.2543</span><span style="color:#ADBAC7;">]</span></span>
<span class="line"><span style="color:#ADBAC7;"> [</span><span style="color:#F47067;">-</span><span style="color:#6CB6FF;">0.7138</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">-</span><span style="color:#6CB6FF;">0.767</span><span style="color:#ADBAC7;"> ]]</span></span>
<span class="line"><span style="color:#ADBAC7;">X_lda </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> X.dot(W)</span></span>
<span class="line"><span style="color:#F47067;">assert</span><span style="color:#ADBAC7;"> X_lda.shape </span><span style="color:#F47067;">==</span><span style="color:#ADBAC7;"> (</span><span style="color:#6CB6FF;">150</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;">), </span><span style="color:#96D0FF;">&quot;The matrix is not 150x2 dimensional.&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># 选择前两维特征</span></span>
<span class="line"><span style="color:#24292E;">W </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> np.hstack((eig_pairs[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">][</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">].reshape(</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">), eig_pairs[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">][</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">].reshape(</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)))</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;Matrix W:</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&#39;</span><span style="color:#24292E;">, W.real)</span></span>
<span class="line"><span style="color:#24292E;">Matrix W:</span></span>
<span class="line"><span style="color:#24292E;"> [[ </span><span style="color:#005CC5;">0.2049</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">0.009</span><span style="color:#24292E;"> ]</span></span>
<span class="line"><span style="color:#24292E;"> [ </span><span style="color:#005CC5;">0.3871</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">0.589</span><span style="color:#24292E;"> ]</span></span>
<span class="line"><span style="color:#24292E;"> [</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">0.5465</span><span style="color:#24292E;">  </span><span style="color:#005CC5;">0.2543</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;"> [</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">0.7138</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">0.767</span><span style="color:#24292E;"> ]]</span></span>
<span class="line"><span style="color:#24292E;">X_lda </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> X.dot(W)</span></span>
<span class="line"><span style="color:#D73A49;">assert</span><span style="color:#24292E;"> X_lda.shape </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">150</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">), </span><span style="color:#032F62;">&quot;The matrix is not 150x2 dimensional.&quot;</span></span></code></pre></div><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">from</span><span style="color:#ADBAC7;"> matplotlib </span><span style="color:#F47067;">import</span><span style="color:#ADBAC7;"> pyplot </span><span style="color:#F47067;">as</span><span style="color:#ADBAC7;"> plt</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F47067;">def</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">plot_step_lda</span><span style="color:#ADBAC7;">():</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">    ax </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> plt.subplot(</span><span style="color:#6CB6FF;">111</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">for</span><span style="color:#ADBAC7;"> label,marker,color </span><span style="color:#F47067;">in</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">zip</span><span style="color:#ADBAC7;">(</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#6CB6FF;">range</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">4</span><span style="color:#ADBAC7;">),(</span><span style="color:#96D0FF;">&#39;^&#39;</span><span style="color:#ADBAC7;">, </span><span style="color:#96D0FF;">&#39;s&#39;</span><span style="color:#ADBAC7;">, </span><span style="color:#96D0FF;">&#39;o&#39;</span><span style="color:#ADBAC7;">),(</span><span style="color:#96D0FF;">&#39;blue&#39;</span><span style="color:#ADBAC7;">, </span><span style="color:#96D0FF;">&#39;red&#39;</span><span style="color:#ADBAC7;">, </span><span style="color:#96D0FF;">&#39;green&#39;</span><span style="color:#ADBAC7;">)):</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">        plt.scatter(</span><span style="color:#F69D50;">x</span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;">X_lda[:,</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">].real[y </span><span style="color:#F47067;">==</span><span style="color:#ADBAC7;"> label],</span></span>
<span class="line"><span style="color:#ADBAC7;">                </span><span style="color:#F69D50;">y</span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;">X_lda[:,</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">].real[y </span><span style="color:#F47067;">==</span><span style="color:#ADBAC7;"> label],</span></span>
<span class="line"><span style="color:#ADBAC7;">                </span><span style="color:#F69D50;">marker</span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;">marker,</span></span>
<span class="line"><span style="color:#ADBAC7;">                </span><span style="color:#F69D50;">color</span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;">color,</span></span>
<span class="line"><span style="color:#ADBAC7;">                </span><span style="color:#F69D50;">alpha</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">0.5</span><span style="color:#ADBAC7;">,</span></span>
<span class="line"><span style="color:#ADBAC7;">                </span><span style="color:#F69D50;">label</span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;">label_dict[label]</span></span>
<span class="line"><span style="color:#ADBAC7;">                )</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">    plt.xlabel(</span><span style="color:#96D0FF;">&#39;LD1&#39;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">    plt.ylabel(</span><span style="color:#96D0FF;">&#39;LD2&#39;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">    leg </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> plt.legend(</span><span style="color:#F69D50;">loc</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&#39;upper right&#39;</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">fancybox</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">True</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">    leg.get_frame().set_alpha(</span><span style="color:#6CB6FF;">0.5</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">    plt.title(</span><span style="color:#96D0FF;">&#39;LDA: Iris projection onto the first 2 linear discriminants&#39;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#768390;"># hide axis ticks</span></span>
<span class="line"><span style="color:#ADBAC7;">    plt.tick_params(</span><span style="color:#F69D50;">axis</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&quot;both&quot;</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">which</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&quot;both&quot;</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">bottom</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&quot;off&quot;</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">top</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&quot;off&quot;</span><span style="color:#ADBAC7;">,  </span></span>
<span class="line"><span style="color:#ADBAC7;">            </span><span style="color:#F69D50;">labelbottom</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&quot;on&quot;</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">left</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&quot;off&quot;</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">right</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&quot;off&quot;</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">labelleft</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&quot;on&quot;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#768390;"># remove axis spines</span></span>
<span class="line"><span style="color:#ADBAC7;">    ax.spines[</span><span style="color:#96D0FF;">&quot;top&quot;</span><span style="color:#ADBAC7;">].set_visible(</span><span style="color:#6CB6FF;">False</span><span style="color:#ADBAC7;">)  </span></span>
<span class="line"><span style="color:#ADBAC7;">    ax.spines[</span><span style="color:#96D0FF;">&quot;right&quot;</span><span style="color:#ADBAC7;">].set_visible(</span><span style="color:#6CB6FF;">False</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">    ax.spines[</span><span style="color:#96D0FF;">&quot;bottom&quot;</span><span style="color:#ADBAC7;">].set_visible(</span><span style="color:#6CB6FF;">False</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">    ax.spines[</span><span style="color:#96D0FF;">&quot;left&quot;</span><span style="color:#ADBAC7;">].set_visible(</span><span style="color:#6CB6FF;">False</span><span style="color:#ADBAC7;">)    </span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">    plt.grid()</span></span>
<span class="line"><span style="color:#ADBAC7;">    plt.tight_layout</span></span>
<span class="line"><span style="color:#ADBAC7;">    plt.show()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">plot_step_lda()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> matplotlib </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> pyplot </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> plt</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">plot_step_lda</span><span style="color:#24292E;">():</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    ax </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> plt.subplot(</span><span style="color:#005CC5;">111</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> label,marker,color </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">zip</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">range</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">),(</span><span style="color:#032F62;">&#39;^&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;s&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;o&#39;</span><span style="color:#24292E;">),(</span><span style="color:#032F62;">&#39;blue&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;red&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;green&#39;</span><span style="color:#24292E;">)):</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        plt.scatter(</span><span style="color:#E36209;">x</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">X_lda[:,</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">].real[y </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> label],</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#E36209;">y</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">X_lda[:,</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">].real[y </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> label],</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#E36209;">marker</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">marker,</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#E36209;">color</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">color,</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#E36209;">alpha</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0.5</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#E36209;">label</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">label_dict[label]</span></span>
<span class="line"><span style="color:#24292E;">                )</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    plt.xlabel(</span><span style="color:#032F62;">&#39;LD1&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    plt.ylabel(</span><span style="color:#032F62;">&#39;LD2&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    leg </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> plt.legend(</span><span style="color:#E36209;">loc</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;upper right&#39;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">fancybox</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">True</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    leg.get_frame().set_alpha(</span><span style="color:#005CC5;">0.5</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    plt.title(</span><span style="color:#032F62;">&#39;LDA: Iris projection onto the first 2 linear discriminants&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># hide axis ticks</span></span>
<span class="line"><span style="color:#24292E;">    plt.tick_params(</span><span style="color:#E36209;">axis</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;both&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">which</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;both&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">bottom</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;off&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">top</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;off&quot;</span><span style="color:#24292E;">,  </span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#E36209;">labelbottom</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;on&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">left</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;off&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">right</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;off&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">labelleft</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;on&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># remove axis spines</span></span>
<span class="line"><span style="color:#24292E;">    ax.spines[</span><span style="color:#032F62;">&quot;top&quot;</span><span style="color:#24292E;">].set_visible(</span><span style="color:#005CC5;">False</span><span style="color:#24292E;">)  </span></span>
<span class="line"><span style="color:#24292E;">    ax.spines[</span><span style="color:#032F62;">&quot;right&quot;</span><span style="color:#24292E;">].set_visible(</span><span style="color:#005CC5;">False</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    ax.spines[</span><span style="color:#032F62;">&quot;bottom&quot;</span><span style="color:#24292E;">].set_visible(</span><span style="color:#005CC5;">False</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    ax.spines[</span><span style="color:#032F62;">&quot;left&quot;</span><span style="color:#24292E;">].set_visible(</span><span style="color:#005CC5;">False</span><span style="color:#24292E;">)    </span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    plt.grid()</span></span>
<span class="line"><span style="color:#24292E;">    plt.tight_layout</span></span>
<span class="line"><span style="color:#24292E;">    plt.show()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">plot_step_lda()</span></span></code></pre></div><p><img src="https://cdn.staticaly.com/gh/clint-sfy/blogcdn@master/python/ML/26.4.png" alt=""></p><h3 id="官方的包" tabindex="-1">官方的包 <a class="header-anchor" href="#官方的包" aria-label="Permalink to &quot;官方的包&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">from</span><span style="color:#ADBAC7;"> sklearn.discriminant_analysis </span><span style="color:#F47067;">import</span><span style="color:#ADBAC7;"> LinearDiscriminantAnalysis </span><span style="color:#F47067;">as</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">LDA</span></span>
<span class="line"></span>
<span class="line"><span style="color:#768390;"># LDA</span></span>
<span class="line"><span style="color:#ADBAC7;">sklearn_lda </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> LDA(</span><span style="color:#F69D50;">n_components</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">X_lda_sklearn </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> sklearn_lda.fit_transform(X, y)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F47067;">def</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">plot_scikit_lda</span><span style="color:#ADBAC7;">(X, title):</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">    ax </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> plt.subplot(</span><span style="color:#6CB6FF;">111</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">for</span><span style="color:#ADBAC7;"> label,marker,color </span><span style="color:#F47067;">in</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">zip</span><span style="color:#ADBAC7;">(</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#6CB6FF;">range</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">4</span><span style="color:#ADBAC7;">),(</span><span style="color:#96D0FF;">&#39;^&#39;</span><span style="color:#ADBAC7;">, </span><span style="color:#96D0FF;">&#39;s&#39;</span><span style="color:#ADBAC7;">, </span><span style="color:#96D0FF;">&#39;o&#39;</span><span style="color:#ADBAC7;">),(</span><span style="color:#96D0FF;">&#39;blue&#39;</span><span style="color:#ADBAC7;">, </span><span style="color:#96D0FF;">&#39;red&#39;</span><span style="color:#ADBAC7;">, </span><span style="color:#96D0FF;">&#39;green&#39;</span><span style="color:#ADBAC7;">)):</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">        plt.scatter(</span><span style="color:#F69D50;">x</span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;">X[:,</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">][y </span><span style="color:#F47067;">==</span><span style="color:#ADBAC7;"> label],</span></span>
<span class="line"><span style="color:#ADBAC7;">                    </span><span style="color:#F69D50;">y</span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;">X[:,</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">][y </span><span style="color:#F47067;">==</span><span style="color:#ADBAC7;"> label] </span><span style="color:#F47067;">*</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">-</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">, </span><span style="color:#768390;"># flip the figure</span></span>
<span class="line"><span style="color:#ADBAC7;">                    </span><span style="color:#F69D50;">marker</span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;">marker,</span></span>
<span class="line"><span style="color:#ADBAC7;">                    </span><span style="color:#F69D50;">color</span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;">color,</span></span>
<span class="line"><span style="color:#ADBAC7;">                    </span><span style="color:#F69D50;">alpha</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">0.5</span><span style="color:#ADBAC7;">,</span></span>
<span class="line"><span style="color:#ADBAC7;">                    </span><span style="color:#F69D50;">label</span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;">label_dict[label])</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">    plt.xlabel(</span><span style="color:#96D0FF;">&#39;LD1&#39;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">    plt.ylabel(</span><span style="color:#96D0FF;">&#39;LD2&#39;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">    leg </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> plt.legend(</span><span style="color:#F69D50;">loc</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&#39;upper right&#39;</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">fancybox</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">True</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">    leg.get_frame().set_alpha(</span><span style="color:#6CB6FF;">0.5</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">    plt.title(title)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#768390;"># hide axis ticks</span></span>
<span class="line"><span style="color:#ADBAC7;">    plt.tick_params(</span><span style="color:#F69D50;">axis</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&quot;both&quot;</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">which</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&quot;both&quot;</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">bottom</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&quot;off&quot;</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">top</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&quot;off&quot;</span><span style="color:#ADBAC7;">,  </span></span>
<span class="line"><span style="color:#ADBAC7;">            </span><span style="color:#F69D50;">labelbottom</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&quot;on&quot;</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">left</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&quot;off&quot;</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">right</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&quot;off&quot;</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">labelleft</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&quot;on&quot;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#768390;"># remove axis spines</span></span>
<span class="line"><span style="color:#ADBAC7;">    ax.spines[</span><span style="color:#96D0FF;">&quot;top&quot;</span><span style="color:#ADBAC7;">].set_visible(</span><span style="color:#6CB6FF;">False</span><span style="color:#ADBAC7;">)  </span></span>
<span class="line"><span style="color:#ADBAC7;">    ax.spines[</span><span style="color:#96D0FF;">&quot;right&quot;</span><span style="color:#ADBAC7;">].set_visible(</span><span style="color:#6CB6FF;">False</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">    ax.spines[</span><span style="color:#96D0FF;">&quot;bottom&quot;</span><span style="color:#ADBAC7;">].set_visible(</span><span style="color:#6CB6FF;">False</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">    ax.spines[</span><span style="color:#96D0FF;">&quot;left&quot;</span><span style="color:#ADBAC7;">].set_visible(</span><span style="color:#6CB6FF;">False</span><span style="color:#ADBAC7;">)    </span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">    plt.grid()</span></span>
<span class="line"><span style="color:#ADBAC7;">    plt.tight_layout</span></span>
<span class="line"><span style="color:#ADBAC7;">    plt.show()</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span></span>
<span class="line"><span style="color:#ADBAC7;">plot_step_lda()</span></span>
<span class="line"><span style="color:#ADBAC7;">plot_scikit_lda(X_lda_sklearn, </span><span style="color:#F69D50;">title</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&#39;Default LDA via scikit-learn&#39;</span><span style="color:#ADBAC7;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> sklearn.discriminant_analysis </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> LinearDiscriminantAnalysis </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">LDA</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># LDA</span></span>
<span class="line"><span style="color:#24292E;">sklearn_lda </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> LDA(</span><span style="color:#E36209;">n_components</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">X_lda_sklearn </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> sklearn_lda.fit_transform(X, y)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">plot_scikit_lda</span><span style="color:#24292E;">(X, title):</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    ax </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> plt.subplot(</span><span style="color:#005CC5;">111</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> label,marker,color </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">zip</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">range</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">),(</span><span style="color:#032F62;">&#39;^&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;s&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;o&#39;</span><span style="color:#24292E;">),(</span><span style="color:#032F62;">&#39;blue&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;red&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;green&#39;</span><span style="color:#24292E;">)):</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        plt.scatter(</span><span style="color:#E36209;">x</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">X[:,</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">][y </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> label],</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#E36209;">y</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">X[:,</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">][y </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> label] </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#6A737D;"># flip the figure</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#E36209;">marker</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">marker,</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#E36209;">color</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">color,</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#E36209;">alpha</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0.5</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#E36209;">label</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">label_dict[label])</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    plt.xlabel(</span><span style="color:#032F62;">&#39;LD1&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    plt.ylabel(</span><span style="color:#032F62;">&#39;LD2&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    leg </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> plt.legend(</span><span style="color:#E36209;">loc</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;upper right&#39;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">fancybox</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">True</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    leg.get_frame().set_alpha(</span><span style="color:#005CC5;">0.5</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    plt.title(title)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># hide axis ticks</span></span>
<span class="line"><span style="color:#24292E;">    plt.tick_params(</span><span style="color:#E36209;">axis</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;both&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">which</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;both&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">bottom</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;off&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">top</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;off&quot;</span><span style="color:#24292E;">,  </span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#E36209;">labelbottom</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;on&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">left</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;off&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">right</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;off&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">labelleft</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;on&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># remove axis spines</span></span>
<span class="line"><span style="color:#24292E;">    ax.spines[</span><span style="color:#032F62;">&quot;top&quot;</span><span style="color:#24292E;">].set_visible(</span><span style="color:#005CC5;">False</span><span style="color:#24292E;">)  </span></span>
<span class="line"><span style="color:#24292E;">    ax.spines[</span><span style="color:#032F62;">&quot;right&quot;</span><span style="color:#24292E;">].set_visible(</span><span style="color:#005CC5;">False</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    ax.spines[</span><span style="color:#032F62;">&quot;bottom&quot;</span><span style="color:#24292E;">].set_visible(</span><span style="color:#005CC5;">False</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    ax.spines[</span><span style="color:#032F62;">&quot;left&quot;</span><span style="color:#24292E;">].set_visible(</span><span style="color:#005CC5;">False</span><span style="color:#24292E;">)    </span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    plt.grid()</span></span>
<span class="line"><span style="color:#24292E;">    plt.tight_layout</span></span>
<span class="line"><span style="color:#24292E;">    plt.show()</span></span>
<span class="line"><span style="color:#24292E;">    </span></span>
<span class="line"><span style="color:#24292E;">plot_step_lda()</span></span>
<span class="line"><span style="color:#24292E;">plot_scikit_lda(X_lda_sklearn, </span><span style="color:#E36209;">title</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;Default LDA via scikit-learn&#39;</span><span style="color:#24292E;">)</span></span></code></pre></div><p><img src="https://cdn.staticaly.com/gh/clint-sfy/blogcdn@master/python/ML/26.5.png" alt=""></p><h2 id="_27-主成分分析降维-pca" tabindex="-1">27.主成分分析降维 PCA <a class="header-anchor" href="#_27-主成分分析降维-pca" aria-label="Permalink to &quot;27.主成分分析降维 PCA&quot;">​</a></h2><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#768390;"># 无监督 的  可以降维</span></span>
<span class="line"><span style="color:#F47067;">import</span><span style="color:#ADBAC7;"> numpy </span><span style="color:#F47067;">as</span><span style="color:#ADBAC7;"> np</span></span>
<span class="line"><span style="color:#F47067;">import</span><span style="color:#ADBAC7;"> pandas </span><span style="color:#F47067;">as</span><span style="color:#ADBAC7;"> pd</span></span>
<span class="line"><span style="color:#ADBAC7;">df </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> pd.read_csv(</span><span style="color:#96D0FF;">&#39;iris.data&#39;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">df.head()</span></span>
<span class="line"><span style="color:#ADBAC7;">df.columns</span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;">[</span><span style="color:#96D0FF;">&#39;sepal_len&#39;</span><span style="color:#ADBAC7;">, </span><span style="color:#96D0FF;">&#39;sepal_wid&#39;</span><span style="color:#ADBAC7;">, </span><span style="color:#96D0FF;">&#39;petal_len&#39;</span><span style="color:#ADBAC7;">, </span><span style="color:#96D0FF;">&#39;petal_wid&#39;</span><span style="color:#ADBAC7;">, </span><span style="color:#96D0FF;">&#39;class&#39;</span><span style="color:#ADBAC7;">]</span></span>
<span class="line"><span style="color:#ADBAC7;">df.head()</span></span>
<span class="line"><span style="color:#ADBAC7;">sepal_len	sepal_wid	petal_len	petal_wid	</span><span style="color:#F47067;">class</span></span>
<span class="line"><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">	</span><span style="color:#6CB6FF;">4.9</span><span style="color:#ADBAC7;">	</span><span style="color:#6CB6FF;">3.0</span><span style="color:#ADBAC7;">	</span><span style="color:#6CB6FF;">1.4</span><span style="color:#ADBAC7;">	</span><span style="color:#6CB6FF;">0.2</span><span style="color:#ADBAC7;">	Iris</span><span style="color:#F47067;">-</span><span style="color:#ADBAC7;">setosa</span></span>
<span class="line"><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">	</span><span style="color:#6CB6FF;">4.7</span><span style="color:#ADBAC7;">	</span><span style="color:#6CB6FF;">3.2</span><span style="color:#ADBAC7;">	</span><span style="color:#6CB6FF;">1.3</span><span style="color:#ADBAC7;">	</span><span style="color:#6CB6FF;">0.2</span><span style="color:#ADBAC7;">	Iris</span><span style="color:#F47067;">-</span><span style="color:#ADBAC7;">setosa</span></span>
<span class="line"><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;">	</span><span style="color:#6CB6FF;">4.6</span><span style="color:#ADBAC7;">	</span><span style="color:#6CB6FF;">3.1</span><span style="color:#ADBAC7;">	</span><span style="color:#6CB6FF;">1.5</span><span style="color:#ADBAC7;">	</span><span style="color:#6CB6FF;">0.2</span><span style="color:#ADBAC7;">	Iris</span><span style="color:#F47067;">-</span><span style="color:#ADBAC7;">setos</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># 无监督 的  可以降维</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> numpy </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> np</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> pandas </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> pd</span></span>
<span class="line"><span style="color:#24292E;">df </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> pd.read_csv(</span><span style="color:#032F62;">&#39;iris.data&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">df.head()</span></span>
<span class="line"><span style="color:#24292E;">df.columns</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">[</span><span style="color:#032F62;">&#39;sepal_len&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;sepal_wid&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;petal_len&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;petal_wid&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;class&#39;</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">df.head()</span></span>
<span class="line"><span style="color:#24292E;">sepal_len	sepal_wid	petal_len	petal_wid	</span><span style="color:#D73A49;">class</span></span>
<span class="line"><span style="color:#005CC5;">0</span><span style="color:#24292E;">	</span><span style="color:#005CC5;">4.9</span><span style="color:#24292E;">	</span><span style="color:#005CC5;">3.0</span><span style="color:#24292E;">	</span><span style="color:#005CC5;">1.4</span><span style="color:#24292E;">	</span><span style="color:#005CC5;">0.2</span><span style="color:#24292E;">	Iris</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">setosa</span></span>
<span class="line"><span style="color:#005CC5;">1</span><span style="color:#24292E;">	</span><span style="color:#005CC5;">4.7</span><span style="color:#24292E;">	</span><span style="color:#005CC5;">3.2</span><span style="color:#24292E;">	</span><span style="color:#005CC5;">1.3</span><span style="color:#24292E;">	</span><span style="color:#005CC5;">0.2</span><span style="color:#24292E;">	Iris</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">setosa</span></span>
<span class="line"><span style="color:#005CC5;">2</span><span style="color:#24292E;">	</span><span style="color:#005CC5;">4.6</span><span style="color:#24292E;">	</span><span style="color:#005CC5;">3.1</span><span style="color:#24292E;">	</span><span style="color:#005CC5;">1.5</span><span style="color:#24292E;">	</span><span style="color:#005CC5;">0.2</span><span style="color:#24292E;">	Iris</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">setos</span></span></code></pre></div><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#768390;"># split data table into data X and class labels y</span></span>
<span class="line"><span style="color:#ADBAC7;">X </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> df.ix[:,</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">:</span><span style="color:#6CB6FF;">4</span><span style="color:#ADBAC7;">].values</span></span>
<span class="line"><span style="color:#ADBAC7;">y </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> df.ix[:,</span><span style="color:#6CB6FF;">4</span><span style="color:#ADBAC7;">].values</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F47067;">from</span><span style="color:#ADBAC7;"> matplotlib </span><span style="color:#F47067;">import</span><span style="color:#ADBAC7;"> pyplot </span><span style="color:#F47067;">as</span><span style="color:#ADBAC7;"> plt</span></span>
<span class="line"><span style="color:#F47067;">import</span><span style="color:#ADBAC7;"> math</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">label_dict </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> {</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">: </span><span style="color:#96D0FF;">&#39;Iris-Setosa&#39;</span><span style="color:#ADBAC7;">,</span></span>
<span class="line"><span style="color:#ADBAC7;">              </span><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;">: </span><span style="color:#96D0FF;">&#39;Iris-Versicolor&#39;</span><span style="color:#ADBAC7;">,</span></span>
<span class="line"><span style="color:#ADBAC7;">              </span><span style="color:#6CB6FF;">3</span><span style="color:#ADBAC7;">: </span><span style="color:#96D0FF;">&#39;Iris-Virgnica&#39;</span><span style="color:#ADBAC7;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">feature_dict </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> {</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">: </span><span style="color:#96D0FF;">&#39;sepal length [cm]&#39;</span><span style="color:#ADBAC7;">,</span></span>
<span class="line"><span style="color:#ADBAC7;">                </span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">: </span><span style="color:#96D0FF;">&#39;sepal width [cm]&#39;</span><span style="color:#ADBAC7;">,</span></span>
<span class="line"><span style="color:#ADBAC7;">                </span><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;">: </span><span style="color:#96D0FF;">&#39;petal length [cm]&#39;</span><span style="color:#ADBAC7;">,</span></span>
<span class="line"><span style="color:#ADBAC7;">                </span><span style="color:#6CB6FF;">3</span><span style="color:#ADBAC7;">: </span><span style="color:#96D0FF;">&#39;petal width [cm]&#39;</span><span style="color:#ADBAC7;">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">plt.figure(</span><span style="color:#F69D50;">figsize</span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">8</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">6</span><span style="color:#ADBAC7;">))</span></span>
<span class="line"><span style="color:#F47067;">for</span><span style="color:#ADBAC7;"> cnt </span><span style="color:#F47067;">in</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">range</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">4</span><span style="color:#ADBAC7;">):</span></span>
<span class="line"><span style="color:#ADBAC7;">    plt.subplot(</span><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;">, cnt</span><span style="color:#F47067;">+</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">for</span><span style="color:#ADBAC7;"> lab </span><span style="color:#F47067;">in</span><span style="color:#ADBAC7;"> (</span><span style="color:#96D0FF;">&#39;Iris-setosa&#39;</span><span style="color:#ADBAC7;">, </span><span style="color:#96D0FF;">&#39;Iris-versicolor&#39;</span><span style="color:#ADBAC7;">, </span><span style="color:#96D0FF;">&#39;Iris-virginica&#39;</span><span style="color:#ADBAC7;">):</span></span>
<span class="line"><span style="color:#ADBAC7;">        plt.hist(X[y</span><span style="color:#F47067;">==</span><span style="color:#ADBAC7;">lab, cnt],</span></span>
<span class="line"><span style="color:#ADBAC7;">                     </span><span style="color:#F69D50;">label</span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;">lab,</span></span>
<span class="line"><span style="color:#ADBAC7;">                     </span><span style="color:#F69D50;">bins</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">10</span><span style="color:#ADBAC7;">,</span></span>
<span class="line"><span style="color:#ADBAC7;">                     </span><span style="color:#F69D50;">alpha</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">0.3</span><span style="color:#ADBAC7;">,)</span></span>
<span class="line"><span style="color:#ADBAC7;">    plt.xlabel(feature_dict[cnt])</span></span>
<span class="line"><span style="color:#ADBAC7;">    plt.legend(</span><span style="color:#F69D50;">loc</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&#39;upper right&#39;</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">fancybox</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">True</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">fontsize</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">8</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">plt.tight_layout()</span></span>
<span class="line"><span style="color:#ADBAC7;">plt.show()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># split data table into data X and class labels y</span></span>
<span class="line"><span style="color:#24292E;">X </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> df.ix[:,</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">].values</span></span>
<span class="line"><span style="color:#24292E;">y </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> df.ix[:,</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">].values</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> matplotlib </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> pyplot </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> plt</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> math</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">label_dict </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;Iris-Setosa&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">              </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;Iris-Versicolor&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">              </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;Iris-Virgnica&#39;</span><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">feature_dict </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;sepal length [cm]&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;sepal width [cm]&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;petal length [cm]&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;petal width [cm]&#39;</span><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">plt.figure(</span><span style="color:#E36209;">figsize</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">8</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">6</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#D73A49;">for</span><span style="color:#24292E;"> cnt </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">range</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">):</span></span>
<span class="line"><span style="color:#24292E;">    plt.subplot(</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, cnt</span><span style="color:#D73A49;">+</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> lab </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> (</span><span style="color:#032F62;">&#39;Iris-setosa&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;Iris-versicolor&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;Iris-virginica&#39;</span><span style="color:#24292E;">):</span></span>
<span class="line"><span style="color:#24292E;">        plt.hist(X[y</span><span style="color:#D73A49;">==</span><span style="color:#24292E;">lab, cnt],</span></span>
<span class="line"><span style="color:#24292E;">                     </span><span style="color:#E36209;">label</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">lab,</span></span>
<span class="line"><span style="color:#24292E;">                     </span><span style="color:#E36209;">bins</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                     </span><span style="color:#E36209;">alpha</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0.3</span><span style="color:#24292E;">,)</span></span>
<span class="line"><span style="color:#24292E;">    plt.xlabel(feature_dict[cnt])</span></span>
<span class="line"><span style="color:#24292E;">    plt.legend(</span><span style="color:#E36209;">loc</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;upper right&#39;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">fancybox</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">True</span><span style="color:#24292E;">, </span><span style="color:#E36209;">fontsize</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">8</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">plt.tight_layout()</span></span>
<span class="line"><span style="color:#24292E;">plt.show()</span></span></code></pre></div><p><img src="https://cdn.staticaly.com/gh/clint-sfy/blogcdn@master/python/ML/26.6.png" alt=""></p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">from</span><span style="color:#ADBAC7;"> sklearn.preprocessing </span><span style="color:#F47067;">import</span><span style="color:#ADBAC7;"> StandardScaler</span></span>
<span class="line"><span style="color:#ADBAC7;">X_std </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> StandardScaler().fit_transform(X)</span></span>
<span class="line"><span style="color:#ADBAC7;">mean_vec </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> np.mean(X_std, </span><span style="color:#F69D50;">axis</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">cov_mat </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> (X_std </span><span style="color:#F47067;">-</span><span style="color:#ADBAC7;"> mean_vec).T.dot((X_std </span><span style="color:#F47067;">-</span><span style="color:#ADBAC7;"> mean_vec)) </span><span style="color:#F47067;">/</span><span style="color:#ADBAC7;"> (X_std.shape[</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">]</span><span style="color:#F47067;">-</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#6CB6FF;">print</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&#39;Covariance matrix </span><span style="color:#F47067;">\\n%s</span><span style="color:#96D0FF;">&#39;</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">%</span><span style="color:#ADBAC7;">cov_mat)</span></span>
<span class="line"><span style="color:#6CB6FF;">print</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&#39;NumPy covariance matrix: </span><span style="color:#F47067;">\\n%s</span><span style="color:#96D0FF;">&#39;</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">%</span><span style="color:#ADBAC7;">np.cov(X_std.T))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">cov_mat </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> np.cov(X_std.T)</span></span>
<span class="line"><span style="color:#768390;"># 来计算给定矩阵cov_mat的特征值和特征向量</span></span>
<span class="line"><span style="color:#ADBAC7;">eig_vals, eig_vecs </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> np.linalg.eig(cov_mat)</span></span>
<span class="line"><span style="color:#6CB6FF;">print</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&#39;Eigenvectors </span><span style="color:#F47067;">\\n%s</span><span style="color:#96D0FF;">&#39;</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">%</span><span style="color:#ADBAC7;">eig_vecs)</span></span>
<span class="line"><span style="color:#6CB6FF;">print</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&#39;</span><span style="color:#F47067;">\\n</span><span style="color:#96D0FF;">Eigenvalues </span><span style="color:#F47067;">\\n%s</span><span style="color:#96D0FF;">&#39;</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">%</span><span style="color:#ADBAC7;">eig_vals)</span></span>
<span class="line"><span style="color:#ADBAC7;">Eigenvectors </span></span>
<span class="line"><span style="color:#ADBAC7;">[[ </span><span style="color:#6CB6FF;">0.52308496</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">-</span><span style="color:#6CB6FF;">0.36956962</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">-</span><span style="color:#6CB6FF;">0.72154279</span><span style="color:#ADBAC7;">  </span><span style="color:#6CB6FF;">0.26301409</span><span style="color:#ADBAC7;">]</span></span>
<span class="line"><span style="color:#ADBAC7;"> [</span><span style="color:#F47067;">-</span><span style="color:#6CB6FF;">0.25956935</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">-</span><span style="color:#6CB6FF;">0.92681168</span><span style="color:#ADBAC7;">  </span><span style="color:#6CB6FF;">0.2411952</span><span style="color:#ADBAC7;">  </span><span style="color:#F47067;">-</span><span style="color:#6CB6FF;">0.12437342</span><span style="color:#ADBAC7;">]</span></span>
<span class="line"><span style="color:#ADBAC7;"> [ </span><span style="color:#6CB6FF;">0.58184289</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">-</span><span style="color:#6CB6FF;">0.01912775</span><span style="color:#ADBAC7;">  </span><span style="color:#6CB6FF;">0.13962963</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">-</span><span style="color:#6CB6FF;">0.80099722</span><span style="color:#ADBAC7;">]</span></span>
<span class="line"><span style="color:#ADBAC7;"> [ </span><span style="color:#6CB6FF;">0.56609604</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">-</span><span style="color:#6CB6FF;">0.06381646</span><span style="color:#ADBAC7;">  </span><span style="color:#6CB6FF;">0.63380158</span><span style="color:#ADBAC7;">  </span><span style="color:#6CB6FF;">0.52321917</span><span style="color:#ADBAC7;">]]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">Eigenvalues </span></span>
<span class="line"><span style="color:#ADBAC7;">[ </span><span style="color:#6CB6FF;">2.92442837</span><span style="color:#ADBAC7;">  </span><span style="color:#6CB6FF;">0.93215233</span><span style="color:#ADBAC7;">  </span><span style="color:#6CB6FF;">0.14946373</span><span style="color:#ADBAC7;">  </span><span style="color:#6CB6FF;">0.02098259</span><span style="color:#ADBAC7;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#768390;"># Make a list of (eigenvalue, eigenvector) tuples</span></span>
<span class="line"><span style="color:#ADBAC7;">eig_pairs </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> [(np.abs(eig_vals[i]), eig_vecs[:,i]) </span><span style="color:#F47067;">for</span><span style="color:#ADBAC7;"> i </span><span style="color:#F47067;">in</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">range</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">len</span><span style="color:#ADBAC7;">(eig_vals))]</span></span>
<span class="line"><span style="color:#6CB6FF;">print</span><span style="color:#ADBAC7;"> (eig_pairs)</span></span>
<span class="line"><span style="color:#6CB6FF;">print</span><span style="color:#ADBAC7;"> (</span><span style="color:#96D0FF;">&#39;----------&#39;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#768390;"># Sort the (eigenvalue, eigenvector) tuples from high to low</span></span>
<span class="line"><span style="color:#ADBAC7;">eig_pairs.sort(</span><span style="color:#F69D50;">key</span><span style="color:#F47067;">=lambda</span><span style="color:#ADBAC7;"> x: x[</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">], </span><span style="color:#F69D50;">reverse</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">True</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#768390;"># Visually confirm that the list is correctly sorted by decreasing eigenvalues</span></span>
<span class="line"><span style="color:#6CB6FF;">print</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&#39;Eigenvalues in descending order:&#39;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#F47067;">for</span><span style="color:#ADBAC7;"> i </span><span style="color:#F47067;">in</span><span style="color:#ADBAC7;"> eig_pairs:</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#6CB6FF;">print</span><span style="color:#ADBAC7;">(i[</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">])</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span></span>
<span class="line"><span style="color:#ADBAC7;">tot </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">sum</span><span style="color:#ADBAC7;">(eig_vals)</span></span>
<span class="line"><span style="color:#ADBAC7;">var_exp </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> [(i </span><span style="color:#F47067;">/</span><span style="color:#ADBAC7;"> tot)</span><span style="color:#F47067;">*</span><span style="color:#6CB6FF;">100</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">for</span><span style="color:#ADBAC7;"> i </span><span style="color:#F47067;">in</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">sorted</span><span style="color:#ADBAC7;">(eig_vals, </span><span style="color:#F69D50;">reverse</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">True</span><span style="color:#ADBAC7;">)]</span></span>
<span class="line"><span style="color:#6CB6FF;">print</span><span style="color:#ADBAC7;"> (var_exp)</span></span>
<span class="line"><span style="color:#768390;"># 计算输入数组的累积和</span></span>
<span class="line"><span style="color:#ADBAC7;">cum_var_exp </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> np.cumsum(var_exp)</span></span>
<span class="line"><span style="color:#ADBAC7;">cum_var_exp</span></span>
<span class="line"><span style="color:#ADBAC7;">[</span><span style="color:#6CB6FF;">72.620033326920336</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">23.147406858644135</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">3.7115155645845164</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">0.52104424985101538</span><span style="color:#ADBAC7;">]</span></span>
<span class="line"><span style="color:#ADBAC7;">array([  </span><span style="color:#6CB6FF;">72.62003333</span><span style="color:#ADBAC7;">,   </span><span style="color:#6CB6FF;">95.76744019</span><span style="color:#ADBAC7;">,   </span><span style="color:#6CB6FF;">99.47895575</span><span style="color:#ADBAC7;">,  </span><span style="color:#6CB6FF;">100</span><span style="color:#ADBAC7;">.        ])</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">plt.figure(</span><span style="color:#F69D50;">figsize</span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">6</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">4</span><span style="color:#ADBAC7;">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">plt.bar(</span><span style="color:#6CB6FF;">range</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">4</span><span style="color:#ADBAC7;">), var_exp, </span><span style="color:#F69D50;">alpha</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">0.5</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">align</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&#39;center&#39;</span><span style="color:#ADBAC7;">,</span></span>
<span class="line"><span style="color:#ADBAC7;">            </span><span style="color:#F69D50;">label</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&#39;individual explained variance&#39;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">plt.step(</span><span style="color:#6CB6FF;">range</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">4</span><span style="color:#ADBAC7;">), cum_var_exp, </span><span style="color:#F69D50;">where</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&#39;mid&#39;</span><span style="color:#ADBAC7;">,</span></span>
<span class="line"><span style="color:#ADBAC7;">             </span><span style="color:#F69D50;">label</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&#39;cumulative explained variance&#39;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">plt.ylabel(</span><span style="color:#96D0FF;">&#39;Explained variance ratio&#39;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">plt.xlabel(</span><span style="color:#96D0FF;">&#39;Principal components&#39;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">plt.legend(</span><span style="color:#F69D50;">loc</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&#39;best&#39;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">plt.tight_layout()</span></span>
<span class="line"><span style="color:#ADBAC7;">plt.show()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> sklearn.preprocessing </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> StandardScaler</span></span>
<span class="line"><span style="color:#24292E;">X_std </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> StandardScaler().fit_transform(X)</span></span>
<span class="line"><span style="color:#24292E;">mean_vec </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> np.mean(X_std, </span><span style="color:#E36209;">axis</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">cov_mat </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (X_std </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> mean_vec).T.dot((X_std </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> mean_vec)) </span><span style="color:#D73A49;">/</span><span style="color:#24292E;"> (X_std.shape[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">]</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;Covariance matrix </span><span style="color:#005CC5;">\\n%s</span><span style="color:#032F62;">&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">%</span><span style="color:#24292E;">cov_mat)</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;NumPy covariance matrix: </span><span style="color:#005CC5;">\\n%s</span><span style="color:#032F62;">&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">%</span><span style="color:#24292E;">np.cov(X_std.T))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">cov_mat </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> np.cov(X_std.T)</span></span>
<span class="line"><span style="color:#6A737D;"># 来计算给定矩阵cov_mat的特征值和特征向量</span></span>
<span class="line"><span style="color:#24292E;">eig_vals, eig_vecs </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> np.linalg.eig(cov_mat)</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;Eigenvectors </span><span style="color:#005CC5;">\\n%s</span><span style="color:#032F62;">&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">%</span><span style="color:#24292E;">eig_vecs)</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">Eigenvalues </span><span style="color:#005CC5;">\\n%s</span><span style="color:#032F62;">&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">%</span><span style="color:#24292E;">eig_vals)</span></span>
<span class="line"><span style="color:#24292E;">Eigenvectors </span></span>
<span class="line"><span style="color:#24292E;">[[ </span><span style="color:#005CC5;">0.52308496</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">0.36956962</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">0.72154279</span><span style="color:#24292E;">  </span><span style="color:#005CC5;">0.26301409</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;"> [</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">0.25956935</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">0.92681168</span><span style="color:#24292E;">  </span><span style="color:#005CC5;">0.2411952</span><span style="color:#24292E;">  </span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">0.12437342</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;"> [ </span><span style="color:#005CC5;">0.58184289</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">0.01912775</span><span style="color:#24292E;">  </span><span style="color:#005CC5;">0.13962963</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">0.80099722</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;"> [ </span><span style="color:#005CC5;">0.56609604</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">0.06381646</span><span style="color:#24292E;">  </span><span style="color:#005CC5;">0.63380158</span><span style="color:#24292E;">  </span><span style="color:#005CC5;">0.52321917</span><span style="color:#24292E;">]]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">Eigenvalues </span></span>
<span class="line"><span style="color:#24292E;">[ </span><span style="color:#005CC5;">2.92442837</span><span style="color:#24292E;">  </span><span style="color:#005CC5;">0.93215233</span><span style="color:#24292E;">  </span><span style="color:#005CC5;">0.14946373</span><span style="color:#24292E;">  </span><span style="color:#005CC5;">0.02098259</span><span style="color:#24292E;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># Make a list of (eigenvalue, eigenvector) tuples</span></span>
<span class="line"><span style="color:#24292E;">eig_pairs </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [(np.abs(eig_vals[i]), eig_vecs[:,i]) </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">range</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">len</span><span style="color:#24292E;">(eig_vals))]</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;"> (eig_pairs)</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;"> (</span><span style="color:#032F62;">&#39;----------&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#6A737D;"># Sort the (eigenvalue, eigenvector) tuples from high to low</span></span>
<span class="line"><span style="color:#24292E;">eig_pairs.sort(</span><span style="color:#E36209;">key</span><span style="color:#D73A49;">=lambda</span><span style="color:#24292E;"> x: x[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">], </span><span style="color:#E36209;">reverse</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">True</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#6A737D;"># Visually confirm that the list is correctly sorted by decreasing eigenvalues</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;Eigenvalues in descending order:&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">for</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> eig_pairs:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">print</span><span style="color:#24292E;">(i[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">])</span></span>
<span class="line"><span style="color:#24292E;">    </span></span>
<span class="line"><span style="color:#24292E;">tot </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">sum</span><span style="color:#24292E;">(eig_vals)</span></span>
<span class="line"><span style="color:#24292E;">var_exp </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [(i </span><span style="color:#D73A49;">/</span><span style="color:#24292E;"> tot)</span><span style="color:#D73A49;">*</span><span style="color:#005CC5;">100</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">sorted</span><span style="color:#24292E;">(eig_vals, </span><span style="color:#E36209;">reverse</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">True</span><span style="color:#24292E;">)]</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;"> (var_exp)</span></span>
<span class="line"><span style="color:#6A737D;"># 计算输入数组的累积和</span></span>
<span class="line"><span style="color:#24292E;">cum_var_exp </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> np.cumsum(var_exp)</span></span>
<span class="line"><span style="color:#24292E;">cum_var_exp</span></span>
<span class="line"><span style="color:#24292E;">[</span><span style="color:#005CC5;">72.620033326920336</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">23.147406858644135</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">3.7115155645845164</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">0.52104424985101538</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">array([  </span><span style="color:#005CC5;">72.62003333</span><span style="color:#24292E;">,   </span><span style="color:#005CC5;">95.76744019</span><span style="color:#24292E;">,   </span><span style="color:#005CC5;">99.47895575</span><span style="color:#24292E;">,  </span><span style="color:#005CC5;">100</span><span style="color:#24292E;">.        ])</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">plt.figure(</span><span style="color:#E36209;">figsize</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">6</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">plt.bar(</span><span style="color:#005CC5;">range</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">), var_exp, </span><span style="color:#E36209;">alpha</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0.5</span><span style="color:#24292E;">, </span><span style="color:#E36209;">align</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;center&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#E36209;">label</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;individual explained variance&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">plt.step(</span><span style="color:#005CC5;">range</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">), cum_var_exp, </span><span style="color:#E36209;">where</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;mid&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">             </span><span style="color:#E36209;">label</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;cumulative explained variance&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">plt.ylabel(</span><span style="color:#032F62;">&#39;Explained variance ratio&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">plt.xlabel(</span><span style="color:#032F62;">&#39;Principal components&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">plt.legend(</span><span style="color:#E36209;">loc</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;best&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">plt.tight_layout()</span></span>
<span class="line"><span style="color:#24292E;">plt.show()</span></span></code></pre></div><p><img src="https://cdn.staticaly.com/gh/clint-sfy/blogcdn@master/python/ML/26.7.png" alt=""></p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#ADBAC7;">matrix_w </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> np.hstack((eig_pairs[</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">][</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">].reshape(</span><span style="color:#6CB6FF;">4</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">),</span></span>
<span class="line"><span style="color:#ADBAC7;">                      eig_pairs[</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">][</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">].reshape(</span><span style="color:#6CB6FF;">4</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">)))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6CB6FF;">print</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&#39;Matrix W:</span><span style="color:#F47067;">\\n</span><span style="color:#96D0FF;">&#39;</span><span style="color:#ADBAC7;">, matrix_w)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">Y </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> X_std.dot(matrix_w)  </span><span style="color:#768390;"># 降维后的数据</span></span>
<span class="line"><span style="color:#ADBAC7;">array([[</span><span style="color:#F47067;">-</span><span style="color:#6CB6FF;">2.10795032</span><span style="color:#ADBAC7;">,  </span><span style="color:#6CB6FF;">0.64427554</span><span style="color:#ADBAC7;">],</span></span>
<span class="line"><span style="color:#ADBAC7;">       [</span><span style="color:#F47067;">-</span><span style="color:#6CB6FF;">2.38797131</span><span style="color:#ADBAC7;">,  </span><span style="color:#6CB6FF;">0.30583307</span><span style="color:#ADBAC7;">],</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">matrix_w </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> np.hstack((eig_pairs[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">][</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">].reshape(</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">                      eig_pairs[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">][</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">].reshape(</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;Matrix W:</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&#39;</span><span style="color:#24292E;">, matrix_w)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">Y </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> X_std.dot(matrix_w)  </span><span style="color:#6A737D;"># 降维后的数据</span></span>
<span class="line"><span style="color:#24292E;">array([[</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">2.10795032</span><span style="color:#24292E;">,  </span><span style="color:#005CC5;">0.64427554</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">       [</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">2.38797131</span><span style="color:#24292E;">,  </span><span style="color:#005CC5;">0.30583307</span><span style="color:#24292E;">],</span></span></code></pre></div><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#ADBAC7;">plt.figure(</span><span style="color:#F69D50;">figsize</span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">6</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">4</span><span style="color:#ADBAC7;">))</span></span>
<span class="line"><span style="color:#F47067;">for</span><span style="color:#ADBAC7;"> lab, col </span><span style="color:#F47067;">in</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">zip</span><span style="color:#ADBAC7;">((</span><span style="color:#96D0FF;">&#39;Iris-setosa&#39;</span><span style="color:#ADBAC7;">, </span><span style="color:#96D0FF;">&#39;Iris-versicolor&#39;</span><span style="color:#ADBAC7;">, </span><span style="color:#96D0FF;">&#39;Iris-virginica&#39;</span><span style="color:#ADBAC7;">),</span></span>
<span class="line"><span style="color:#ADBAC7;">                        (</span><span style="color:#96D0FF;">&#39;blue&#39;</span><span style="color:#ADBAC7;">, </span><span style="color:#96D0FF;">&#39;red&#39;</span><span style="color:#ADBAC7;">, </span><span style="color:#96D0FF;">&#39;green&#39;</span><span style="color:#ADBAC7;">)):</span></span>
<span class="line"><span style="color:#ADBAC7;">     plt.scatter(X[y</span><span style="color:#F47067;">==</span><span style="color:#ADBAC7;">lab, </span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">],</span></span>
<span class="line"><span style="color:#ADBAC7;">                X[y</span><span style="color:#F47067;">==</span><span style="color:#ADBAC7;">lab, </span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">],</span></span>
<span class="line"><span style="color:#ADBAC7;">                </span><span style="color:#F69D50;">label</span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;">lab,</span></span>
<span class="line"><span style="color:#ADBAC7;">                </span><span style="color:#F69D50;">c</span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;">col)</span></span>
<span class="line"><span style="color:#ADBAC7;">plt.xlabel(</span><span style="color:#96D0FF;">&#39;sepal_len&#39;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">plt.ylabel(</span><span style="color:#96D0FF;">&#39;sepal_wid&#39;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">plt.legend(</span><span style="color:#F69D50;">loc</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&#39;best&#39;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">plt.tight_layout()</span></span>
<span class="line"><span style="color:#ADBAC7;">plt.show()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">plt.figure(</span><span style="color:#E36209;">figsize</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">6</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#D73A49;">for</span><span style="color:#24292E;"> lab, col </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">zip</span><span style="color:#24292E;">((</span><span style="color:#032F62;">&#39;Iris-setosa&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;Iris-versicolor&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;Iris-virginica&#39;</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">                        (</span><span style="color:#032F62;">&#39;blue&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;red&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;green&#39;</span><span style="color:#24292E;">)):</span></span>
<span class="line"><span style="color:#24292E;">     plt.scatter(X[y</span><span style="color:#D73A49;">==</span><span style="color:#24292E;">lab, </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">                X[y</span><span style="color:#D73A49;">==</span><span style="color:#24292E;">lab, </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#E36209;">label</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">lab,</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#E36209;">c</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">col)</span></span>
<span class="line"><span style="color:#24292E;">plt.xlabel(</span><span style="color:#032F62;">&#39;sepal_len&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">plt.ylabel(</span><span style="color:#032F62;">&#39;sepal_wid&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">plt.legend(</span><span style="color:#E36209;">loc</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;best&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">plt.tight_layout()</span></span>
<span class="line"><span style="color:#24292E;">plt.show()</span></span></code></pre></div><p><img src="https://cdn.staticaly.com/gh/clint-sfy/blogcdn@master/python/ML/26.8.png" alt=""></p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#ADBAC7;">plt.figure(</span><span style="color:#F69D50;">figsize</span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">6</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">4</span><span style="color:#ADBAC7;">))</span></span>
<span class="line"><span style="color:#F47067;">for</span><span style="color:#ADBAC7;"> lab, col </span><span style="color:#F47067;">in</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">zip</span><span style="color:#ADBAC7;">((</span><span style="color:#96D0FF;">&#39;Iris-setosa&#39;</span><span style="color:#ADBAC7;">, </span><span style="color:#96D0FF;">&#39;Iris-versicolor&#39;</span><span style="color:#ADBAC7;">, </span><span style="color:#96D0FF;">&#39;Iris-virginica&#39;</span><span style="color:#ADBAC7;">),</span></span>
<span class="line"><span style="color:#ADBAC7;">                        (</span><span style="color:#96D0FF;">&#39;blue&#39;</span><span style="color:#ADBAC7;">, </span><span style="color:#96D0FF;">&#39;red&#39;</span><span style="color:#ADBAC7;">, </span><span style="color:#96D0FF;">&#39;green&#39;</span><span style="color:#ADBAC7;">)):</span></span>
<span class="line"><span style="color:#ADBAC7;">     plt.scatter(Y[y</span><span style="color:#F47067;">==</span><span style="color:#ADBAC7;">lab, </span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">],</span></span>
<span class="line"><span style="color:#ADBAC7;">                Y[y</span><span style="color:#F47067;">==</span><span style="color:#ADBAC7;">lab, </span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">],</span></span>
<span class="line"><span style="color:#ADBAC7;">                </span><span style="color:#F69D50;">label</span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;">lab,</span></span>
<span class="line"><span style="color:#ADBAC7;">                </span><span style="color:#F69D50;">c</span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;">col)</span></span>
<span class="line"><span style="color:#ADBAC7;">plt.xlabel(</span><span style="color:#96D0FF;">&#39;Principal Component 1&#39;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">plt.ylabel(</span><span style="color:#96D0FF;">&#39;Principal Component 2&#39;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">plt.legend(</span><span style="color:#F69D50;">loc</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&#39;lower center&#39;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">plt.tight_layout()</span></span>
<span class="line"><span style="color:#ADBAC7;">plt.show()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">plt.figure(</span><span style="color:#E36209;">figsize</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">6</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#D73A49;">for</span><span style="color:#24292E;"> lab, col </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">zip</span><span style="color:#24292E;">((</span><span style="color:#032F62;">&#39;Iris-setosa&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;Iris-versicolor&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;Iris-virginica&#39;</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">                        (</span><span style="color:#032F62;">&#39;blue&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;red&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;green&#39;</span><span style="color:#24292E;">)):</span></span>
<span class="line"><span style="color:#24292E;">     plt.scatter(Y[y</span><span style="color:#D73A49;">==</span><span style="color:#24292E;">lab, </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">                Y[y</span><span style="color:#D73A49;">==</span><span style="color:#24292E;">lab, </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#E36209;">label</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">lab,</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#E36209;">c</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">col)</span></span>
<span class="line"><span style="color:#24292E;">plt.xlabel(</span><span style="color:#032F62;">&#39;Principal Component 1&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">plt.ylabel(</span><span style="color:#032F62;">&#39;Principal Component 2&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">plt.legend(</span><span style="color:#E36209;">loc</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;lower center&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">plt.tight_layout()</span></span>
<span class="line"><span style="color:#24292E;">plt.show()</span></span></code></pre></div><p><img src="https://cdn.staticaly.com/gh/clint-sfy/blogcdn@master/python/ML/26.9.png" alt=""></p>`,27);function m(s,u,h,_,v,b){const o=t,e=F("ClientOnly");return l(),r("div",null,[d,y(e,null,{default:A(()=>{var n,a;return[(((n=s.$frontmatter)==null?void 0:n.aside)??!0)&&(((a=s.$frontmatter)==null?void 0:a.showArticleMetadata)??!0)?(l(),D(o,{key:0,article:s.$frontmatter},null,8,["article"])):B("",!0)]}),_:1}),g])}const w=c(E,[["render",m]]);export{q as __pageData,w as default};
