import{_ as e}from"./chunks/ArticleMetadata.v6H_tZE7.js";import{_ as k,C as d,c as r,o as p,k as l,G as g,P as c,a as A,w as y,b as o,e as C}from"./chunks/framework.CLT-Xekf.js";import"./chunks/md5.CFXlnVHb.js";const f=JSON.parse('{"title":"假设检验","description":"","frontmatter":{"title":"假设检验","author":"阿源","date":"2023/06/12 12:00","categories":["机器学习理论基础"],"tags":["机器学习","数学基础"]},"headers":[],"relativePath":"courses/tangyudi/01-数学基础篇/12-假设检验.md","filePath":"courses/tangyudi/01-数学基础篇/12-假设检验.md","lastUpdated":1713341239000}'),D={name:"courses/tangyudi/01-数学基础篇/12-假设检验.md"};function F(a,s,E,m,B,u){const t=e,h=d("ClientOnly");return p(),r("div",null,[s[0]||(s[0]=l("h1",{id:"假设检验",tabindex:"-1"},[A("假设检验 "),l("a",{class:"header-anchor",href:"#假设检验","aria-label":'Permalink to "假设检验"'},"​")],-1)),g(h,null,{default:y(()=>{var i,n;return[(((i=a.$frontmatter)==null?void 0:i.aside)??!0)&&(((n=a.$frontmatter)==null?void 0:n.showArticleMetadata)??!0)?(p(),o(t,{key:0,article:a.$frontmatter},null,8,["article"])):C("",!0)]}),_:1}),s[1]||(s[1]=c(`<h2 id="_12-假设检验" tabindex="-1">12. 假设检验 <a class="header-anchor" href="#_12-假设检验" aria-label="Permalink to &quot;12. 假设检验&quot;">​</a></h2><h3 id="_1-基本思想" tabindex="-1">1. 基本思想 <a class="header-anchor" href="#_1-基本思想" aria-label="Permalink to &quot;1. 基本思想&quot;">​</a></h3><ul><li><p>什么是假设：对总体参数（均值，比例等）的具体数值所作的陈述。比如，我认为新的配方的药效要比原来的更好。</p></li><li><p>什么是假设检验：先对总体的参数提出某种假设，然后利用样本的信息判断假设是否成立的过程。比如，上面的假设我是要接受还是拒绝呢。</p></li><li><p>推广新的教育方案后，教学效果是否有所提高</p></li><li><p>醉驾判定为刑事犯罪后是否会使得交通事故减少</p></li><li><p>男生和女生在选文理科时是否存在性别因素影响</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/clint-sfy/blogcdn@master/python/math/%E5%81%87%E8%AE%BE%E6%A3%80%E9%AA%8C1.png" alt=""></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span>显著性水平：</span></span>
<span class="line"><span></span></span>
<span class="line"><span>一个概率值，原假设为真时，拒绝原假设的概率，表示为 alpha 常用取值为0.01, 0.05, 0.10</span></span>
<span class="line"><span>一个公司要来招聘了，本来实际有200个人准备混一混，但是公司希望只有5%的人是浑水摸鱼进来的，所以可能会有200*0.05=4个人混进来，所谓显著性水平α，就是你允许最多有多大比例浑水摸鱼的通过你的测试。</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span>假设检验的步骤：</span></span>
<span class="line"><span></span></span>
<span class="line"><span>提出假设</span></span>
<span class="line"><span>确定适当的检验统计量</span></span>
<span class="line"><span>规定显著性水平</span></span>
<span class="line"><span>计算检验统计量的值</span></span>
<span class="line"><span>做出统计决策</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span>原假设与备择建设：</span></span>
<span class="line"><span></span></span>
<span class="line"><span>待检验的假设又叫原假设，也可以叫零假设，表示为H0。（零假设其实就是表示原假设一般都是说没有差异，没有改变。。。）</span></span>
<span class="line"><span>与原假设对比的假设叫做备择假设，表示为H1</span></span>
<span class="line"><span>一般在比较的时候，主要有等于，大于，小于</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span>检验统计量：</span></span>
<span class="line"><span></span></span>
<span class="line"><span>计算检验的统计量</span></span>
<span class="line"><span>根据给定的显著性水平，查表得出相应的临界值</span></span>
<span class="line"><span>将检验统计量的值与显著性水平的临界值进行比较</span></span>
<span class="line"><span>得出拒绝或不拒绝原假设的结论</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span>检验中常说的小概率：</span></span>
<span class="line"><span>在一次试验中，一个几乎不可能发生的事件发生的概率</span></span>
<span class="line"><span>在一次试验中小概率事件一旦发生，我们就有理由拒绝原假设</span></span>
<span class="line"><span>小概率由我们事先确定</span></span></code></pre></div><h3 id="_2-左右侧检验与双侧检验" tabindex="-1">2. 左右侧检验与双侧检验 <a class="header-anchor" href="#_2-左右侧检验与双侧检验" aria-label="Permalink to &quot;2. 左右侧检验与双侧检验&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span>P值：</span></span>
<span class="line"><span>是一个概率值</span></span>
<span class="line"><span>如果原假设为真，P-值是抽样分布中大于或小于样本统计量的概率</span></span>
<span class="line"><span>左侧检验时，P-值为曲线上方小于等于检验统计量部分的面积</span></span>
<span class="line"><span>右侧检验时，P-值为曲线上方大于等于检验统计量部分的面积</span></span></code></pre></div><p><img src="https://cdn.jsdelivr.net/gh/clint-sfy/blogcdn@master/python/math/%E5%81%87%E8%AE%BE%E6%A3%80%E9%AA%8C2.png" alt=""></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span>当关键词有不得少于/低于的时候用左侧，比如灯泡的使用寿命不得少于/低于700小时时</span></span>
<span class="line"><span>当关键词有不得多于/高于的时候用右侧，比如次品率不得多于/高于5%时</span></span></code></pre></div><p><img src="https://cdn.jsdelivr.net/gh/clint-sfy/blogcdn@master/python/math/%E5%81%87%E8%AE%BE%E6%A3%80%E9%AA%8C3.png" alt=""></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span>    单侧检验指按分布的一侧计算显著性水平概率的检验。用于检验大于、小于、高于、低于、优于、劣于等有确定性大小关系的假设检验问题。这类问题的确定是有一定的理论依据的。假设检验写作：μ1&lt;μ2或μ1&gt;μ2。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    双侧检验指按分布两端计算显著性水平概率的检验， 应用于理论上不能确定两个总体一个一定比另一个大或小的假设检验。一般假设检验写作H1：μ1≠μ2。</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span>检验结果：</span></span>
<span class="line"><span>单侧检验</span></span>
<span class="line"><span>若p值 &gt; α, 不拒绝 H0</span></span>
<span class="line"><span>若p值 &lt; α, 拒绝 H0</span></span>
<span class="line"><span></span></span>
<span class="line"><span>双侧检验</span></span>
<span class="line"><span>若p-值 &gt; α/2, 不拒绝 H0</span></span>
<span class="line"><span>若p-值 &lt; α/2, 拒绝 H0</span></span></code></pre></div><p><img src="https://cdn.jsdelivr.net/gh/clint-sfy/blogcdn@master/python/math/%E5%81%87%E8%AE%BE%E6%A3%80%E9%AA%8C4.png" alt=""></p><h3 id="_3-z检验基本原理" tabindex="-1">3. Z检验基本原理 <a class="header-anchor" href="#_3-z检验基本原理" aria-label="Permalink to &quot;3. Z检验基本原理&quot;">​</a></h3><ul><li>当总体标准差已知,样本量较大时用标准正态分布的理论来推断差异发生的概率，从而比较两个平均数的差异是否显著</li><li>标准正态变换后Ｚ的界值</li></ul><p><img src="https://cdn.jsdelivr.net/gh/clint-sfy/blogcdn@master/python/math/%E5%81%87%E8%AE%BE%E6%A3%80%E9%AA%8C5.png" alt=""></p><h3 id="_4-z检验实例" tabindex="-1">4. Z检验实例 <a class="header-anchor" href="#_4-z检验实例" aria-label="Permalink to &quot;4. Z检验实例&quot;">​</a></h3><p>研究正常人与高血压患者胆固醇含量(mg%)的资料如下,试比较两组血清胆固醇含量有无差别。</p><p><img src="https://cdn.jsdelivr.net/gh/clint-sfy/blogcdn@master/python/math/%E5%81%87%E8%AE%BE%E6%A3%80%E9%AA%8C6.png" alt=""></p><p>某机床厂加工一种零件，根据经验知道，该厂加工零件的椭圆度近似服从正态分布，其总体均值为μ=0.081mm，总体标准差为σ= 0.025 。今换一种新机床进行加工，抽取n=200个零件进行检验，得到的椭圆度为0.076mm。试问新机床加工零件的椭圆度的均值与以前有无显著差异？（α＝0.05）</p><p><img src="https://cdn.jsdelivr.net/gh/clint-sfy/blogcdn@master/python/math/%E5%81%87%E8%AE%BE%E6%A3%80%E9%AA%8C7.png" alt=""></p><p>​ 根据过去大量资料，某厂生产的灯泡的使用寿命服从正态分布N~(1020，100^2)。现从最近生产的一批产品中随机抽取16只，测得样本平均寿命为1080小时。试在0.05的显著性水平下判断这批产品的使用寿命是否有显著提高？(α＝0.05)</p><p><img src="https://cdn.jsdelivr.net/gh/clint-sfy/blogcdn@master/python/math/%E5%81%87%E8%AE%BE%E6%A3%80%E9%AA%8C8.png" alt=""></p><h3 id="_5-t检验基本原理" tabindex="-1">5. T检验基本原理 <a class="header-anchor" href="#_5-t检验基本原理" aria-label="Permalink to &quot;5. T检验基本原理&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span>根据研究设计,t检验有三种形式：</span></span>
<span class="line"><span>单个样本的t检验：</span></span>
<span class="line"><span>用来比较一组数据的平均值和一个数值有无差异。例如，你选取了5个人，测定了他们的身高，要看这五个人的身高平均值是否高于、低于还是等于1.70m，就需要用这个检验方法。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>配对样本均数t检验(非独立两样本均数t检验)</span></span>
<span class="line"><span>用来看一组样本在处理前后的平均值有无差异。比如，你选取了5个人，分别在饭前和饭后测量了他们的体重，想检测吃饭对他们的体重有无影响，就需要用这个t检验。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>两个独立样本均数t检验</span></span>
<span class="line"><span>用来看两组数据的平均值有无差异。比如，你选取了5男5女，想看男女之间身高有无差异，这样，男的一组，女的一组，这两个组之间的身高平均值的大小比较可用这种方法。</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span>单个样本t检验</span></span>
<span class="line"><span></span></span>
<span class="line"><span>又称单样本均数t检验(one sample t test),适用于样本均数与已知总体均数μ0的比较,目的是检验样本均数所代表的总体均数μ是否与已知总体均数μ0有差别。</span></span>
<span class="line"><span>已知总体均数μ0一般为标准值、理论值或经大量观察得到的较稳定的指标值。</span></span>
<span class="line"><span>应用条件，总体标准α未知的小样本资料,且服从正态分布。</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span>配对样本均数t检验：</span></span>
<span class="line"><span>简称配对t检验(paired t test),又称非独立两样本均数t检验,适用于配对设计计量资料均数的比较。</span></span>
<span class="line"><span>配对设计(paired design)是将受试对象按某些特征相近的原则配成对子，每对中的两个个体随机地给予两种处理。</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span>配对样本均数t检验原理：</span></span>
<span class="line"><span>配对设计的资料具有对子内数据一一对应的特征,研究者应关心是对子的效应差值而不是各自的效应值。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>进行配对t检验时，首选应计算各对数据间的差值d，将d作为变量计算均数。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>配对样本t检验的基本原理是假设两种处理的效应相同，理论上差值d的总体均数μd 为0，现有的不等于0差值样本均数可以来自μd = 0的总体,也可以来μd ≠ 0的总体。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>可将该检验理解为差值样本均数与已知总体均数μd（μd = 0）比较的单样本t检验,其检验统计量为：</span></span></code></pre></div><h3 id="_6-t检验实例" tabindex="-1">6. T检验实例 <a class="header-anchor" href="#_6-t检验实例" aria-label="Permalink to &quot;6. T检验实例&quot;">​</a></h3><p>有12名接种卡介苗的儿童，8周后用两批不同的结核菌素，一批是标准结核菌素，一批是新制结核菌素，分别注射在儿童的前臂，两种结核菌素的皮肤浸润反应平均直径(mm)如表所示，问两种结核菌素的反应性有无差别。</p><p><img src="https://cdn.jsdelivr.net/gh/clint-sfy/blogcdn@master/python/math/%E5%81%87%E8%AE%BE%E6%A3%80%E9%AA%8C9.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/clint-sfy/blogcdn@master/python/math/%E5%81%87%E8%AE%BE%E6%A3%80%E9%AA%8C10.png" alt=""></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span>两独立样本t检验</span></span>
<span class="line"><span>两独立样本t 检验(two independent sample t-test)，又称成组 t 检验。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>适用于完全随机设计的两样本均数的比较,其目的是检验两样本所来自总体的均数是否相等。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>完全随机设计是将受试对象随机地分配到两组中，每组患者分别接受不同的处理，分析比较处理的效应。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>两独立样本t检验要求两样本所代表的总体服从正态分布N(μ1，σ^2)和N(μ2，σ^2)，且两总体方差σ1^2、σ2^2相等,即方差齐性。若两总体方差不等需要先进行变换</span></span>
<span class="line"><span></span></span>
<span class="line"><span>两独立样本t检验原理</span></span>
<span class="line"><span>两独立样本t检验的检验假设是两总体均数相等,即H0：μ1=μ2，也可表述为μ1－μ2=0,这里可将两样本均数的差值看成一个变量样本,则在H0条件下两独立样本均数t检验可视为样本与已知总体均数μ1－μ2=0的单样本t检验, 统计量计算公式为：</span></span></code></pre></div><p><img src="https://cdn.jsdelivr.net/gh/clint-sfy/blogcdn@master/python/math/%E5%81%87%E8%AE%BE%E6%A3%80%E9%AA%8C11.png" alt=""></p><h3 id="_7-t检验应用条件" tabindex="-1">7. T检验应用条件 <a class="header-anchor" href="#_7-t检验应用条件" aria-label="Permalink to &quot;7. T检验应用条件&quot;">​</a></h3><ul><li>两组计量资料小样本比较</li><li>样本对总体有较好代表性，对比组间有较好组间均衡性——随机抽样和随机分组</li><li>样本来自正态分布总体，配对t检验要求差值服从正态分布，大样本时，用z检验，且正态性要求可以放宽</li><li>两独立样本均数t检验要求方差齐性——两组总体方差相等或两样本方差间无显著性</li></ul><h3 id="_8-卡方检验" tabindex="-1">8. 卡方检验 <a class="header-anchor" href="#_8-卡方检验" aria-label="Permalink to &quot;8. 卡方检验&quot;">​</a></h3><p>用于检验两个（或多个）率或构成比之间差别是否有统计学意义，配对卡方检验检验配对计数资料的差异是否有统计学意义。</p><h3 id="卡方检验-chi-square-test" tabindex="-1">卡方检验(Chi-square test) <a class="header-anchor" href="#卡方检验-chi-square-test" aria-label="Permalink to &quot;卡方检验(Chi-square test)&quot;">​</a></h3><p>用于检验两个（或多个）率或构成比之间差别是否有统计学意义，配对卡方检验检验配对计数资料的差异是否有统计学意义。</p><p>检验实际频数(A)和理论频数(T)的差别是否由抽样误差所引起的。也就是由样本率（或样本构成比）来推断总体率或构成比。</p><p><img src="https://cdn.jsdelivr.net/gh/clint-sfy/blogcdn@master/python/math/%E5%81%87%E8%AE%BE%E6%A3%80%E9%AA%8C12.png" alt=""></p><p>ARC是位于R行C列交叉处的实际频数， TRC是位于R行C列交叉处的理论频数。 （ ARC - TRC ）反映实际频数与理论频数的差距，除以TRC 为的是考虑相对差距。所以，χ^2 值反映了实际频数与理论频数的吻合程度， χ^2 值大，说明实际频数与理论频数的差距大。 χ^2 值的大小除了与实际频数和理论频数的差的大小有关外，还与它们的行、列数有关。即自由度的大小。</p><p><img src="https://cdn.jsdelivr.net/gh/clint-sfy/blogcdn@master/python/math/%E5%81%87%E8%AE%BE%E6%A3%80%E9%AA%8C13.png" alt=""></p><p>某药品检验所随机抽取574名成年人，研究抗生素的耐药性（资料如表8-11）。问两种人群的耐药率是否一致？</p><p><img src="https://cdn.jsdelivr.net/gh/clint-sfy/blogcdn@master/python/math/%E5%81%87%E8%AE%BE%E6%A3%80%E9%AA%8C14.png" alt=""></p><h3 id="_9-假设检验中的两类错误" tabindex="-1">9. 假设检验中的两类错误 <a class="header-anchor" href="#_9-假设检验中的两类错误" aria-label="Permalink to &quot;9. 假设检验中的两类错误&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span>第一类错误（弃真错误）：</span></span>
<span class="line"><span>原假设为真时拒绝原假设</span></span>
<span class="line"><span>第一类错误的概率为α</span></span>
<span class="line"><span></span></span>
<span class="line"><span>第二类错误（取伪错误）：</span></span>
<span class="line"><span>原假设为假时接受原假设</span></span>
<span class="line"><span>第二类错误的概率为β</span></span></code></pre></div><p><img src="https://cdn.jsdelivr.net/gh/clint-sfy/blogcdn@master/python/math/%E5%81%87%E8%AE%BE%E6%A3%80%E9%AA%8C15.png" alt=""></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span>一个公司有员工3000 人（研究的总体） ，为了检验公司员工工资统计报表的真实性，研究者作了 50 人的大样本随机抽样调查，人均收入的调查结果是： X （样本均值）=871 元；S（标准差）=21 元 问能否认为统计报表中人均收入μ0=880 元的数据是真实的？（显著性水平α=0.05 ）</span></span>
<span class="line"><span></span></span>
<span class="line"><span>原假设 H0：调查数据 871 元与报表数据 880 元之间没有显著性差异，公司员工工资均值的真实情况为880 元；</span></span>
<span class="line"><span>假设 H1：调查数据和报表数据之间有显著性的差异，公司员工工资均值的真实情况不是880 元。</span></span>
<span class="line"><span>α 错误出现原因：</span></span>
<span class="line"><span>我们只抽了一个样本，而个别的样本可能是特殊的，不管你的抽样多么符合科学抽样的要求。理论上讲，在 3000 个员工中随机抽取 50 人作为调查样本，有很多种构成样本的可能性，相当于 3000 选 50，这个数目是很大的。这样，在理论上就有存在很多个样本平均数。也就是说，由于小概率事件的出现，我们把本来真实的原假设拒绝了。这就是 α 错误出现的原因。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>β 错误出现原因：</span></span>
<span class="line"><span>第二个问题是，统计检验的逻辑犯了从结论推断前提的错误。命题 B 是由命题 A 经演绎推论出来的，或写作符号 A→B，命题 C 是我们在检验中所依据操作法则。如果A 是真的，且我们从 A 到 B 的演绎推论如果也是正确的，那么B 可能是真实的。相反，如果结果 B是真实的，那么就不能得出A 必定是真实的结论。这就是 β错误出现的原因。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>α 错误概率计算：</span></span>
<span class="line"><span>由实际推断原理引起的，即“小概率事件不会发生”的假定所引起的，所以有理由将所有小概率事件发生的概率之和或者即显著性水平（α=0.05）看作α错误发生的概率，换言之，α错误发生的概率为检验所选择的显著性水平。如果是单侧检验，弃真错误的概率则为 α/2。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>β错误的概率计算：</span></span>
<span class="line"><span>犯β错误的概率的计算是比较复杂的，由于β错误的出现原因是属于逻辑上的，所以在总体参数不知道的情况下是无法计算它出现概率的大小的。 我们在以上例子的基础上进一步设计：这个公司职员的实际工资不是880 元，而是是 870 元，原假设为伪，仍然假设实际工资是880元。这样我们就可以在总体均值为 870 元和 880元两种情况下， 分别作出两条正态分布曲线 （A线和 B 线）</span></span>
<span class="line"><span></span></span>
<span class="line"><span>犯 β错误的概率大小就是相对正态曲线A 而言，图 1 中阴影部分的面积： ZX1=1.41 ；ZX2=5.59</span></span>
<span class="line"><span>查标准正态分布表可知，β=Φ（ZX2）-Φ（ZX1）=0.0793 结果表明，如果总体的真值为 870 元，而虚无假设为880元的话，那么，平均而言每100 次抽样中，将约有8次把真实情况当作880 元被接受，即犯β错误的概率大小是0.0793。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>犯第一类错误的危害较大，由于报告了本来不存在的现象，则因此现象而衍生出的后续研究、应用的危害将是不可估量的。想对而言，第二类错误的危害则相对较小，因为研究者如果对自己的假设很有信心，可能会重新设计实验，再次来过，直到得到自己满意的结果（但是如果对本就错误的观点坚持的话，可能会演变成第一类错误）。</span></span></code></pre></div><h3 id="_10-案例-假设检验" tabindex="-1">10. 案例：假设检验 <a class="header-anchor" href="#_10-案例-假设检验" aria-label="Permalink to &quot;10. 案例：假设检验&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> pandas </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> pd</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> pylab</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> math</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> numpy </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> np</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> matplotlib.pyplot </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> plt</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">%</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">matplotlib inline</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> numpy </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> np</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> scipy.stats </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> norm</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> scipy.stats</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> warnings</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">warnings.filterwarnings(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;ignore&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">df </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> pd.read_csv(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;normtemp.txt&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">sep</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;   &#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">names</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;Temperature&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;Gender&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;Heart Rate&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">])</span></span></code></pre></div><p>要保证数据为正态分布</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">observed_temperatures </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> df[</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;Temperature&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">].sort_values()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">bin_val </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> np.arange(</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">start</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> observed_temperatures.min(), </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">stop</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> observed_temperatures.max(), </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">step</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> .05</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">mu, std </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> np.mean(observed_temperatures), np.std(observed_temperatures)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">p </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> norm.pdf(observed_temperatures, mu, std)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">plt.hist(observed_temperatures,</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">bins</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> bin_val, </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">normed</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">True</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">stacked</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">True</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">plt.plot(observed_temperatures, p, </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">color</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;red&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">plt.xticks(np.arange(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">95.75</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">101.25</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0.25</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">),</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">rotation</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">90</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">plt.xlabel(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;Human Body Temperature Distributions&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">plt.xlabel(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;human body temperature&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">plt.show()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;Average (Mu): &#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> str</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(mu) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39; / &#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;Standard Deviation: &#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">str</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(std))</span></span></code></pre></div><p><img src="https://cdn.jsdelivr.net/gh/clint-sfy/blogcdn@master/python/math/%E5%81%87%E8%AE%BE%E6%A3%80%E9%AA%8C16.png" alt=""></p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> observed_temperatures</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">#Shapiro-Wilk Test: https://en.wikipedia.org/wiki/Shapiro%E2%80%93Wilk_test</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">shapiro_test, shapiro_p </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> scipy.stats.shapiro(x)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;Shapiro-Wilk Stat:&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,shapiro_test, </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot; Shapiro-Wilk p-Value:&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, shapiro_p)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">k2, p </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> scipy.stats.normaltest(observed_temperatures)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;p:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,p) </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># p值大于0.05 可以接受假设 符合正态分布</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">#Another method to determining normality is through Quantile-Quantile Plots.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">scipy.stats.probplot(observed_temperatures, </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">dist</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;norm&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">plot</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">pylab)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">pylab.show()</span></span></code></pre></div><p><img src="https://cdn.jsdelivr.net/gh/clint-sfy/blogcdn@master/python/math/%E5%81%87%E8%AE%BE%E6%A3%80%E9%AA%8C17.png" alt=""></p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> ecdf</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(data):</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    #Compute ECDF</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    n </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> len</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(data)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> np.sort(data)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    y </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> np.arange(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, n</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> n</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> x, y</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># Compute empirical mean and standard deviation</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># Number of samples</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">n </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> len</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(df[</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;Temperature&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">]) </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># Sample mean</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">mu </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> np.mean(df[</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;Temperature&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">]) </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># Sample standard deviation</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">std </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> np.std(df[</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;Temperature&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">]) </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;Mean temperature: &#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, mu, </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;with standard deviation of +/-&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, std)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">#Random sampling of the data based off of the mean of the data.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">normalized_sample </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> np.random.normal(mu, std, </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">size</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">10000</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">x_temperature, y_temperature </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ecdf(df[</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;Temperature&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">])</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">normalized_x, normalized_y </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ecdf(normalized_sample)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># Plot the ECDFs</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">fig </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> plt.figure(</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">figsize</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">8</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">plt.plot(normalized_x, normalized_y)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">plt.plot(x_temperature, y_temperature, </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">marker</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;.&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">linestyle</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;none&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">plt.ylabel(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;ECDF&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">plt.xlabel(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;Temperature&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">plt.legend((</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;Normal Distribution&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;Sample data&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">))</span></span></code></pre></div><p><img src="https://cdn.jsdelivr.net/gh/clint-sfy/blogcdn@master/python/math/%E5%81%87%E8%AE%BE%E6%A3%80%E9%AA%8C18.png" alt=""></p><p>有学者提出98.6是人类的平均体温，我们该这样认为吗？ 在这里我们选择t检验，因为我们只能计算样本的标准差</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> scipy </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> stats</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># T检验</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">CW_mu</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 98.6</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">stats.ttest_1samp(df[</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;Temperature&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">], </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">CW_mu</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">axis</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">Ttest_1sampResult(</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">statistic</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=-</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">5.4548232923640771</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">pvalue</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">2.4106320415610081e-07</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># T-Stat -5.454 p-value近乎0了. 我们该拒绝这样的假设</span></span></code></pre></div><p>男性和女性的体温有明显差异吗 两独立样本t检验 H0: 没有明显差异 H1: 有明显差异</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">female_temp </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> df.Temperature[df.Gender </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">male_temp </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> df.Temperature[df.Gender </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">mean_female_temp </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> np.mean(female_temp)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">mean_male_temp </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> np.mean(male_temp)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;Average female body temperature = &#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> +</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> str</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(mean_female_temp))</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;Average male body temperature = &#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> +</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> str</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(mean_male_temp))</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># Compute independent t-test  独立的</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">stats.ttest_ind(female_temp, male_temp, </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">axis</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">Average female body temperature </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 98.39384615384616</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">Average male body temperature </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 98.1046153846154</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">Ttest_indResult(</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">statistic</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">2.2854345381654984</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">pvalue</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0.02393188312240236</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 由于P值=0.024 &lt; 0.05，我们需要拒绝原假设，我们有%95的自信认为是有差异的！</span></span></code></pre></div><h3 id="_11-案例-卡方检验" tabindex="-1">11. 案例： 卡方检验 <a class="header-anchor" href="#_11-案例-卡方检验" aria-label="Permalink to &quot;11. 案例： 卡方检验&quot;">​</a></h3><p>白人和黑人在求职路上会有种族的歧视吗？</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">data </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> pd.io.stata.read_stata(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;us_job_market_discrimination.dta&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">blacks </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> data[data.race </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">==</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;b&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">whites </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> data[data.race </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">==</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;w&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">]</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span>卡方检验</span></span>
<span class="line"><span>白人获得职位</span></span>
<span class="line"><span>白人被拒绝</span></span>
<span class="line"><span>黑人获得职位</span></span>
<span class="line"><span>黑人被拒绝</span></span>
<span class="line"><span></span></span>
<span class="line"><span>假设检验</span></span>
<span class="line"><span>H0：种族对求职结果没有显著影响</span></span>
<span class="line"><span>H1：种族对求职结果有影响</span></span></code></pre></div><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">blacks_called </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> len</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(blacks[blacks[</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;call&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> True</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">])</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">blacks_not_called </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> len</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(blacks[blacks[</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;call&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> False</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">])</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">whites_called </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> len</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(whites[whites[</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;call&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> True</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">])</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">whites_not_called </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> len</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(whites[whites[</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;call&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> False</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">])</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">observed </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> pd.DataFrame({</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;blacks&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: {</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;called&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: blacks_called, </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;not_called&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: blacks_not_called},</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">                         &#39;whites&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: {</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;called&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : whites_called, </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;not_called&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : whites_not_called}})</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">num_called_back </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> blacks_called </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> whites_called</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">num_not_called </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> blacks_not_called </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> whites_not_called</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 得到期望的比率</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">rate_of_callbacks </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> num_called_back </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (num_not_called </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> num_called_back)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">expected_called </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> len</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(data)  </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> rate_of_callbacks</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">expected_not_called </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> len</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(data)  </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> -</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> rate_of_callbacks)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> scipy.stats </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> stats</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">observed_frequencies </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> [blacks_not_called, whites_not_called, whites_called, blacks_called]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">expected_frequencies </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> [expected_not_called</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, expected_not_called</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, expected_called</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, expected_called</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">stats.chisquare(</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">f_obs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> observed_frequencies,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">                f_exp</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> expected_frequencies)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">Power_divergenceResult(</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">statistic</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">16.879050414270221</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">pvalue</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0.00074839594410972638</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 看起来种族歧视是存在的！</span></span></code></pre></div>`,72))])}const q=k(D,[["render",F]]);export{f as __pageData,q as default};
