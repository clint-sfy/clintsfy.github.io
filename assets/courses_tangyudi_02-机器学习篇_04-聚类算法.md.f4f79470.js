import{_ as t}from"./chunks/ArticleMetadata.efdb5e9a.js";import{_ as c,v as l,b as r,t as y,O as C,F as p,L as A,R as i,M as F,C as D,B}from"./chunks/framework.5cbdba25.js";import"./chunks/md5.02486a14.js";const x=JSON.parse('{"title":"聚类算法","description":"","frontmatter":{"title":"聚类算法","author":"阿源","date":"2023/07/04 12:00","categories":["机器学习快速入门"],"tags":["机器学习"]},"headers":[],"relativePath":"courses/tangyudi/02-机器学习篇/04-聚类算法.md","filePath":"courses/tangyudi/02-机器学习篇/04-聚类算法.md","lastUpdated":1695348718000}'),E={name:"courses/tangyudi/02-机器学习篇/04-聚类算法.md"},_=p("h1",{id:"聚类算法",tabindex:"-1"},[A("聚类算法 "),p("a",{class:"header-anchor",href:"#聚类算法","aria-label":'Permalink to "聚类算法"'},"​")],-1),d=i(`<h2 id="_8-聚类算法原理" tabindex="-1">8. 聚类算法原理 <a class="header-anchor" href="#_8-聚类算法原理" aria-label="Permalink to &quot;8. 聚类算法原理&quot;">​</a></h2><p>kmeans</p><p>优势： 简单，快速，适合常规数据集 K值难确定 劣势： 复杂度与样本呈线性关系 很难发现任意形状的簇</p><p>db聚类</p><p>优势： 不需要指定簇个数 擅长找到离群点（检测任务） 可以发现任意形状的簇 两个参数就够了</p><p>劣势</p><p>高维数据有些困难（可以做降维） Sklearn中效率很慢（数据削减策略） 参数难以选择（参数对结果的影响非常</p><h2 id="_9-kmeans代码实现" tabindex="-1">9. Kmeans代码实现 <a class="header-anchor" href="#_9-kmeans代码实现" aria-label="Permalink to &quot;9. Kmeans代码实现&quot;">​</a></h2><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"></span></code></pre></div><h2 id="_10-聚类算法实验分析" tabindex="-1">10. 聚类算法实验分析 <a class="header-anchor" href="#_10-聚类算法实验分析" aria-label="Permalink to &quot;10. 聚类算法实验分析&quot;">​</a></h2><h3 id="kmeans" tabindex="-1">Kmeans <a class="header-anchor" href="#kmeans" aria-label="Permalink to &quot;Kmeans&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">import</span><span style="color:#ADBAC7;"> numpy </span><span style="color:#F47067;">as</span><span style="color:#ADBAC7;"> np</span></span>
<span class="line"><span style="color:#F47067;">import</span><span style="color:#ADBAC7;"> os</span></span>
<span class="line"><span style="color:#F47067;">%</span><span style="color:#ADBAC7;">matplotlib inline</span></span>
<span class="line"><span style="color:#F47067;">import</span><span style="color:#ADBAC7;"> matplotlib</span></span>
<span class="line"><span style="color:#F47067;">import</span><span style="color:#ADBAC7;"> matplotlib.pyplot </span><span style="color:#F47067;">as</span><span style="color:#ADBAC7;"> plt</span></span>
<span class="line"><span style="color:#ADBAC7;">plt.rcParams[</span><span style="color:#96D0FF;">&#39;axes.labelsize&#39;</span><span style="color:#ADBAC7;">] </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">14</span></span>
<span class="line"><span style="color:#ADBAC7;">plt.rcParams[</span><span style="color:#96D0FF;">&#39;xtick.labelsize&#39;</span><span style="color:#ADBAC7;">] </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">12</span></span>
<span class="line"><span style="color:#ADBAC7;">plt.rcParams[</span><span style="color:#96D0FF;">&#39;ytick.labelsize&#39;</span><span style="color:#ADBAC7;">] </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">12</span></span>
<span class="line"><span style="color:#F47067;">import</span><span style="color:#ADBAC7;"> warnings</span></span>
<span class="line"><span style="color:#ADBAC7;">warnings.filterwarnings(</span><span style="color:#96D0FF;">&#39;ignore&#39;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">np.random.seed(</span><span style="color:#6CB6FF;">42</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F47067;">from</span><span style="color:#ADBAC7;"> sklearn.datasets </span><span style="color:#F47067;">import</span><span style="color:#ADBAC7;"> make_blobs</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">blob_centers </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> np.array(</span></span>
<span class="line"><span style="color:#ADBAC7;">    [[</span><span style="color:#6CB6FF;">0.2</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">2.3</span><span style="color:#ADBAC7;">],</span></span>
<span class="line"><span style="color:#ADBAC7;">     [</span><span style="color:#F47067;">-</span><span style="color:#6CB6FF;">1.5</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">2.3</span><span style="color:#ADBAC7;">],</span></span>
<span class="line"><span style="color:#ADBAC7;">     [</span><span style="color:#F47067;">-</span><span style="color:#6CB6FF;">2.8</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">1.8</span><span style="color:#ADBAC7;">],</span></span>
<span class="line"><span style="color:#ADBAC7;">     [</span><span style="color:#F47067;">-</span><span style="color:#6CB6FF;">2.8</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">2.8</span><span style="color:#ADBAC7;">],</span></span>
<span class="line"><span style="color:#ADBAC7;">     [</span><span style="color:#F47067;">-</span><span style="color:#6CB6FF;">2.8</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">1.3</span><span style="color:#ADBAC7;">]])</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">blob_std </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;">np.array([</span><span style="color:#6CB6FF;">0.4</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">0.3</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">0.1</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">0.1</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">0.1</span><span style="color:#ADBAC7;">]) </span></span>
<span class="line"><span style="color:#ADBAC7;">X,y </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> make_blobs(</span><span style="color:#F69D50;">n_samples</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">2000</span><span style="color:#ADBAC7;">,</span><span style="color:#F69D50;">centers</span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;">blob_centers,</span></span>
<span class="line"><span style="color:#ADBAC7;">                     </span><span style="color:#F69D50;">cluster_std</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> blob_std,</span><span style="color:#F69D50;">random_state</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">7</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F47067;">def</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">plot_clusters</span><span style="color:#ADBAC7;">(X, y</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">None</span><span style="color:#ADBAC7;">):</span></span>
<span class="line"><span style="color:#ADBAC7;">    plt.scatter(X[:, </span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">], X[:, </span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">], </span><span style="color:#F69D50;">c</span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;">y, </span><span style="color:#F69D50;">s</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">    plt.xlabel(</span><span style="color:#96D0FF;">&quot;$x_1$&quot;</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">fontsize</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">14</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">    plt.ylabel(</span><span style="color:#96D0FF;">&quot;$x_2$&quot;</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">fontsize</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">14</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">rotation</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">plt.figure(</span><span style="color:#F69D50;">figsize</span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">8</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">4</span><span style="color:#ADBAC7;">))</span></span>
<span class="line"><span style="color:#ADBAC7;">plot_clusters(X)</span></span>
<span class="line"><span style="color:#ADBAC7;">plt.show()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> numpy </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> np</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> os</span></span>
<span class="line"><span style="color:#D73A49;">%</span><span style="color:#24292E;">matplotlib inline</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> matplotlib</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> matplotlib.pyplot </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> plt</span></span>
<span class="line"><span style="color:#24292E;">plt.rcParams[</span><span style="color:#032F62;">&#39;axes.labelsize&#39;</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">14</span></span>
<span class="line"><span style="color:#24292E;">plt.rcParams[</span><span style="color:#032F62;">&#39;xtick.labelsize&#39;</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">12</span></span>
<span class="line"><span style="color:#24292E;">plt.rcParams[</span><span style="color:#032F62;">&#39;ytick.labelsize&#39;</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">12</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> warnings</span></span>
<span class="line"><span style="color:#24292E;">warnings.filterwarnings(</span><span style="color:#032F62;">&#39;ignore&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">np.random.seed(</span><span style="color:#005CC5;">42</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> sklearn.datasets </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> make_blobs</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">blob_centers </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> np.array(</span></span>
<span class="line"><span style="color:#24292E;">    [[</span><span style="color:#005CC5;">0.2</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">2.3</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">     [</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">1.5</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">2.3</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">     [</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">2.8</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">1.8</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">     [</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">2.8</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">2.8</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">     [</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">2.8</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">1.3</span><span style="color:#24292E;">]])</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">blob_std </span><span style="color:#D73A49;">=</span><span style="color:#24292E;">np.array([</span><span style="color:#005CC5;">0.4</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">0.3</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">0.1</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">0.1</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">0.1</span><span style="color:#24292E;">]) </span></span>
<span class="line"><span style="color:#24292E;">X,y </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> make_blobs(</span><span style="color:#E36209;">n_samples</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">2000</span><span style="color:#24292E;">,</span><span style="color:#E36209;">centers</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">blob_centers,</span></span>
<span class="line"><span style="color:#24292E;">                     </span><span style="color:#E36209;">cluster_std</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> blob_std,</span><span style="color:#E36209;">random_state</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">7</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">plot_clusters</span><span style="color:#24292E;">(X, y</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">None</span><span style="color:#24292E;">):</span></span>
<span class="line"><span style="color:#24292E;">    plt.scatter(X[:, </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">], X[:, </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">], </span><span style="color:#E36209;">c</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">y, </span><span style="color:#E36209;">s</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    plt.xlabel(</span><span style="color:#032F62;">&quot;$x_1$&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">fontsize</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">14</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    plt.ylabel(</span><span style="color:#032F62;">&quot;$x_2$&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">fontsize</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">14</span><span style="color:#24292E;">, </span><span style="color:#E36209;">rotation</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">plt.figure(</span><span style="color:#E36209;">figsize</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">8</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#24292E;">plot_clusters(X)</span></span>
<span class="line"><span style="color:#24292E;">plt.show()</span></span></code></pre></div><p><img src="https://cdn.jsdelivr.net/gh/clint-sfy/blogcdn@master/python/ML/10.1.png" alt=""></p><h3 id="决策边界" tabindex="-1">决策边界 <a class="header-anchor" href="#决策边界" aria-label="Permalink to &quot;决策边界&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">from</span><span style="color:#ADBAC7;"> sklearn.cluster </span><span style="color:#F47067;">import</span><span style="color:#ADBAC7;"> KMeans</span></span>
<span class="line"><span style="color:#ADBAC7;">k </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">5</span></span>
<span class="line"><span style="color:#ADBAC7;">kmeans </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> KMeans(</span><span style="color:#F69D50;">n_clusters</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> k,</span><span style="color:#F69D50;">random_state</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">42</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">y_pred </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;">  kmeans.fit_predict(X)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#768390;"># fit_predict(X)与kmeans.labels_ 得到预测结果是一致的</span></span>
<span class="line"><span style="color:#768390;"># 分类标签</span></span>
<span class="line"><span style="color:#ADBAC7;">y_pred</span></span>
<span class="line"><span style="color:#ADBAC7;">kmeans.labels_ </span></span>
<span class="line"><span style="color:#ADBAC7;">array([</span><span style="color:#6CB6FF;">4</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">...</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">])</span></span>
<span class="line"><span style="color:#768390;"># 中心点</span></span>
<span class="line"><span style="color:#ADBAC7;">kmeans.cluster_centers_</span></span>
<span class="line"><span style="color:#ADBAC7;">array([[</span><span style="color:#F47067;">-</span><span style="color:#6CB6FF;">2.80389616</span><span style="color:#ADBAC7;">,  </span><span style="color:#6CB6FF;">1.80117999</span><span style="color:#ADBAC7;">],</span></span>
<span class="line"><span style="color:#ADBAC7;">       [ </span><span style="color:#6CB6FF;">0.20876306</span><span style="color:#ADBAC7;">,  </span><span style="color:#6CB6FF;">2.25551336</span><span style="color:#ADBAC7;">],</span></span>
<span class="line"><span style="color:#ADBAC7;">       [</span><span style="color:#F47067;">-</span><span style="color:#6CB6FF;">2.79290307</span><span style="color:#ADBAC7;">,  </span><span style="color:#6CB6FF;">2.79641063</span><span style="color:#ADBAC7;">],</span></span>
<span class="line"><span style="color:#ADBAC7;">       [</span><span style="color:#F47067;">-</span><span style="color:#6CB6FF;">1.46679593</span><span style="color:#ADBAC7;">,  </span><span style="color:#6CB6FF;">2.28585348</span><span style="color:#ADBAC7;">],</span></span>
<span class="line"><span style="color:#ADBAC7;">       [</span><span style="color:#F47067;">-</span><span style="color:#6CB6FF;">2.80037642</span><span style="color:#ADBAC7;">,  </span><span style="color:#6CB6FF;">1.30082566</span><span style="color:#ADBAC7;">]])</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> sklearn.cluster </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> KMeans</span></span>
<span class="line"><span style="color:#24292E;">k </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">5</span></span>
<span class="line"><span style="color:#24292E;">kmeans </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> KMeans(</span><span style="color:#E36209;">n_clusters</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> k,</span><span style="color:#E36209;">random_state</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">42</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">y_pred </span><span style="color:#D73A49;">=</span><span style="color:#24292E;">  kmeans.fit_predict(X)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># fit_predict(X)与kmeans.labels_ 得到预测结果是一致的</span></span>
<span class="line"><span style="color:#6A737D;"># 分类标签</span></span>
<span class="line"><span style="color:#24292E;">y_pred</span></span>
<span class="line"><span style="color:#24292E;">kmeans.labels_ </span></span>
<span class="line"><span style="color:#24292E;">array([</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">...</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">])</span></span>
<span class="line"><span style="color:#6A737D;"># 中心点</span></span>
<span class="line"><span style="color:#24292E;">kmeans.cluster_centers_</span></span>
<span class="line"><span style="color:#24292E;">array([[</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">2.80389616</span><span style="color:#24292E;">,  </span><span style="color:#005CC5;">1.80117999</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">       [ </span><span style="color:#005CC5;">0.20876306</span><span style="color:#24292E;">,  </span><span style="color:#005CC5;">2.25551336</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">       [</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">2.79290307</span><span style="color:#24292E;">,  </span><span style="color:#005CC5;">2.79641063</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">       [</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">1.46679593</span><span style="color:#24292E;">,  </span><span style="color:#005CC5;">2.28585348</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">       [</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">2.80037642</span><span style="color:#24292E;">,  </span><span style="color:#005CC5;">1.30082566</span><span style="color:#24292E;">]])</span></span></code></pre></div><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#ADBAC7;">X_new </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> np.array([[</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;">],[</span><span style="color:#6CB6FF;">3</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;">],[</span><span style="color:#F47067;">-</span><span style="color:#6CB6FF;">3</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">3</span><span style="color:#ADBAC7;">],[</span><span style="color:#F47067;">-</span><span style="color:#6CB6FF;">3</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">2.5</span><span style="color:#ADBAC7;">]])</span></span>
<span class="line"><span style="color:#ADBAC7;">kmeans.predict(X_new)</span></span>
<span class="line"><span style="color:#ADBAC7;">array([</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;">])</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">kmeans.transform(X_new)</span></span>
<span class="line"><span style="color:#ADBAC7;">array([[</span><span style="color:#6CB6FF;">2.81093633</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">0.32995317</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">2.9042344</span><span style="color:#ADBAC7;"> , </span><span style="color:#6CB6FF;">1.49439034</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">2.88633901</span><span style="color:#ADBAC7;">],</span></span>
<span class="line"><span style="color:#ADBAC7;">       [</span><span style="color:#6CB6FF;">5.80730058</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">2.80290755</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">5.84739223</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">4.4759332</span><span style="color:#ADBAC7;"> , </span><span style="color:#6CB6FF;">5.84236351</span><span style="color:#ADBAC7;">],</span></span>
<span class="line"><span style="color:#ADBAC7;">       [</span><span style="color:#6CB6FF;">1.21475352</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">3.29399768</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">0.29040966</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">1.69136631</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">1.71086031</span><span style="color:#ADBAC7;">],</span></span>
<span class="line"><span style="color:#ADBAC7;">       [</span><span style="color:#6CB6FF;">0.72581411</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">3.21806371</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">0.36159148</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">1.54808703</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">1.21567622</span><span style="color:#ADBAC7;">]])</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F47067;">def</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">plot_data</span><span style="color:#ADBAC7;">(X):</span></span>
<span class="line"><span style="color:#ADBAC7;">    plt.plot(X[:, </span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">], X[:, </span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">], </span><span style="color:#96D0FF;">&#39;k.&#39;</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">markersize</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F47067;">def</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">plot_centroids</span><span style="color:#ADBAC7;">(centroids, weights</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">None</span><span style="color:#ADBAC7;">, circle_color</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&#39;w&#39;</span><span style="color:#ADBAC7;">, cross_color</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&#39;k&#39;</span><span style="color:#ADBAC7;">):</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;"> weights </span><span style="color:#F47067;">is</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">not</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">None</span><span style="color:#ADBAC7;">:</span></span>
<span class="line"><span style="color:#ADBAC7;">        centroids </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> centroids[weights </span><span style="color:#F47067;">&gt;</span><span style="color:#ADBAC7;"> weights.max() </span><span style="color:#F47067;">/</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">10</span><span style="color:#ADBAC7;">]</span></span>
<span class="line"><span style="color:#ADBAC7;">    plt.scatter(centroids[:, </span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">], centroids[:, </span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">],</span></span>
<span class="line"><span style="color:#ADBAC7;">                </span><span style="color:#F69D50;">marker</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&#39;o&#39;</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">s</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">30</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">linewidths</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">8</span><span style="color:#ADBAC7;">,</span></span>
<span class="line"><span style="color:#ADBAC7;">                </span><span style="color:#F69D50;">color</span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;">circle_color, </span><span style="color:#F69D50;">zorder</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">10</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">alpha</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">0.9</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">    plt.scatter(centroids[:, </span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">], centroids[:, </span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">],</span></span>
<span class="line"><span style="color:#ADBAC7;">                </span><span style="color:#F69D50;">marker</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&#39;x&#39;</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">s</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">50</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">linewidths</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">50</span><span style="color:#ADBAC7;">,</span></span>
<span class="line"><span style="color:#ADBAC7;">                </span><span style="color:#F69D50;">color</span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;">cross_color, </span><span style="color:#F69D50;">zorder</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">11</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">alpha</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F47067;">def</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">plot_decision_boundaries</span><span style="color:#ADBAC7;">(clusterer, X, resolution</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">1000</span><span style="color:#ADBAC7;">, show_centroids</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">True</span><span style="color:#ADBAC7;">,</span></span>
<span class="line"><span style="color:#ADBAC7;">                             show_xlabels</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">True</span><span style="color:#ADBAC7;">, show_ylabels</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">True</span><span style="color:#ADBAC7;">):</span></span>
<span class="line"><span style="color:#ADBAC7;">    mins </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> X.min(</span><span style="color:#F69D50;">axis</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">) </span><span style="color:#F47067;">-</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">0.1</span></span>
<span class="line"><span style="color:#ADBAC7;">    maxs </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> X.max(</span><span style="color:#F69D50;">axis</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">) </span><span style="color:#F47067;">+</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">0.1</span></span>
<span class="line"><span style="color:#ADBAC7;">    xx, yy </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> np.meshgrid(np.linspace(mins[</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">], maxs[</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">], resolution),</span></span>
<span class="line"><span style="color:#ADBAC7;">                         np.linspace(mins[</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">], maxs[</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">], resolution))</span></span>
<span class="line"><span style="color:#ADBAC7;">    Z </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> clusterer.predict(np.c_[xx.ravel(), yy.ravel()])</span></span>
<span class="line"><span style="color:#ADBAC7;">    Z </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> Z.reshape(xx.shape)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">    plt.contourf(Z, </span><span style="color:#F69D50;">extent</span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;">(mins[</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">], maxs[</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">], mins[</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">], maxs[</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">]),</span></span>
<span class="line"><span style="color:#ADBAC7;">                </span><span style="color:#F69D50;">cmap</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&quot;Pastel2&quot;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">    plt.contour(Z, </span><span style="color:#F69D50;">extent</span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;">(mins[</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">], maxs[</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">], mins[</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">], maxs[</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">]),</span></span>
<span class="line"><span style="color:#ADBAC7;">                </span><span style="color:#F69D50;">linewidths</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">colors</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&#39;k&#39;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">    plot_data(X)</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;"> show_centroids:</span></span>
<span class="line"><span style="color:#ADBAC7;">        plot_centroids(clusterer.cluster_centers_)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;"> show_xlabels:</span></span>
<span class="line"><span style="color:#ADBAC7;">        plt.xlabel(</span><span style="color:#96D0FF;">&quot;$x_1$&quot;</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">fontsize</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">14</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">else</span><span style="color:#ADBAC7;">:</span></span>
<span class="line"><span style="color:#ADBAC7;">        plt.tick_params(</span><span style="color:#F69D50;">labelbottom</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&#39;off&#39;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;"> show_ylabels:</span></span>
<span class="line"><span style="color:#ADBAC7;">        plt.ylabel(</span><span style="color:#96D0FF;">&quot;$x_2$&quot;</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">fontsize</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">14</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">rotation</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">else</span><span style="color:#ADBAC7;">:</span></span>
<span class="line"><span style="color:#ADBAC7;">        plt.tick_params(</span><span style="color:#F69D50;">labelleft</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&#39;off&#39;</span><span style="color:#ADBAC7;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">X_new </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> np.array([[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">],[</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">],[</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">],[</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">2.5</span><span style="color:#24292E;">]])</span></span>
<span class="line"><span style="color:#24292E;">kmeans.predict(X_new)</span></span>
<span class="line"><span style="color:#24292E;">array([</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">])</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">kmeans.transform(X_new)</span></span>
<span class="line"><span style="color:#24292E;">array([[</span><span style="color:#005CC5;">2.81093633</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">0.32995317</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2.9042344</span><span style="color:#24292E;"> , </span><span style="color:#005CC5;">1.49439034</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2.88633901</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">       [</span><span style="color:#005CC5;">5.80730058</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2.80290755</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">5.84739223</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">4.4759332</span><span style="color:#24292E;"> , </span><span style="color:#005CC5;">5.84236351</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">       [</span><span style="color:#005CC5;">1.21475352</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">3.29399768</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">0.29040966</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">1.69136631</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">1.71086031</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">       [</span><span style="color:#005CC5;">0.72581411</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">3.21806371</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">0.36159148</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">1.54808703</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">1.21567622</span><span style="color:#24292E;">]])</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">plot_data</span><span style="color:#24292E;">(X):</span></span>
<span class="line"><span style="color:#24292E;">    plt.plot(X[:, </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">], X[:, </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">], </span><span style="color:#032F62;">&#39;k.&#39;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">markersize</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">plot_centroids</span><span style="color:#24292E;">(centroids, weights</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">None</span><span style="color:#24292E;">, circle_color</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;w&#39;</span><span style="color:#24292E;">, cross_color</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;k&#39;</span><span style="color:#24292E;">):</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> weights </span><span style="color:#D73A49;">is</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">not</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">None</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">        centroids </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> centroids[weights </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> weights.max() </span><span style="color:#D73A49;">/</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">    plt.scatter(centroids[:, </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">], centroids[:, </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#E36209;">marker</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;o&#39;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">s</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">30</span><span style="color:#24292E;">, </span><span style="color:#E36209;">linewidths</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">8</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#E36209;">color</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">circle_color, </span><span style="color:#E36209;">zorder</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">, </span><span style="color:#E36209;">alpha</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0.9</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    plt.scatter(centroids[:, </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">], centroids[:, </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#E36209;">marker</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;x&#39;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">s</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">50</span><span style="color:#24292E;">, </span><span style="color:#E36209;">linewidths</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">50</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#E36209;">color</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">cross_color, </span><span style="color:#E36209;">zorder</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">11</span><span style="color:#24292E;">, </span><span style="color:#E36209;">alpha</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">plot_decision_boundaries</span><span style="color:#24292E;">(clusterer, X, resolution</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">1000</span><span style="color:#24292E;">, show_centroids</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">True</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                             show_xlabels</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">True</span><span style="color:#24292E;">, show_ylabels</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">True</span><span style="color:#24292E;">):</span></span>
<span class="line"><span style="color:#24292E;">    mins </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> X.min(</span><span style="color:#E36209;">axis</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0.1</span></span>
<span class="line"><span style="color:#24292E;">    maxs </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> X.max(</span><span style="color:#E36209;">axis</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0.1</span></span>
<span class="line"><span style="color:#24292E;">    xx, yy </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> np.meshgrid(np.linspace(mins[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">], maxs[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">], resolution),</span></span>
<span class="line"><span style="color:#24292E;">                         np.linspace(mins[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">], maxs[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">], resolution))</span></span>
<span class="line"><span style="color:#24292E;">    Z </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> clusterer.predict(np.c_[xx.ravel(), yy.ravel()])</span></span>
<span class="line"><span style="color:#24292E;">    Z </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Z.reshape(xx.shape)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    plt.contourf(Z, </span><span style="color:#E36209;">extent</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">(mins[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">], maxs[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">], mins[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">], maxs[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">]),</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#E36209;">cmap</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;Pastel2&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    plt.contour(Z, </span><span style="color:#E36209;">extent</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">(mins[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">], maxs[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">], mins[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">], maxs[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">]),</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#E36209;">linewidths</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#E36209;">colors</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;k&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    plot_data(X)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> show_centroids:</span></span>
<span class="line"><span style="color:#24292E;">        plot_centroids(clusterer.cluster_centers_)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> show_xlabels:</span></span>
<span class="line"><span style="color:#24292E;">        plt.xlabel(</span><span style="color:#032F62;">&quot;$x_1$&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">fontsize</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">14</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">else</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">        plt.tick_params(</span><span style="color:#E36209;">labelbottom</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;off&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> show_ylabels:</span></span>
<span class="line"><span style="color:#24292E;">        plt.ylabel(</span><span style="color:#032F62;">&quot;$x_2$&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">fontsize</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">14</span><span style="color:#24292E;">, </span><span style="color:#E36209;">rotation</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">else</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">        plt.tick_params(</span><span style="color:#E36209;">labelleft</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;off&#39;</span><span style="color:#24292E;">)</span></span></code></pre></div><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#ADBAC7;">plt.figure(</span><span style="color:#F69D50;">figsize</span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">8</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">4</span><span style="color:#ADBAC7;">))</span></span>
<span class="line"><span style="color:#ADBAC7;">plot_decision_boundaries(kmeans, X)</span></span>
<span class="line"><span style="color:#ADBAC7;">plt.show()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">plt.figure(</span><span style="color:#E36209;">figsize</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">8</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#24292E;">plot_decision_boundaries(kmeans, X)</span></span>
<span class="line"><span style="color:#24292E;">plt.show()</span></span></code></pre></div><p><img src="https://cdn.jsdelivr.net/gh/clint-sfy/blogcdn@master/python/ML/10.2.png" alt=""></p><h3 id="算法流程" tabindex="-1">算法流程 <a class="header-anchor" href="#算法流程" aria-label="Permalink to &quot;算法流程&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#768390;"># 展示了迭代的过程</span></span>
<span class="line"><span style="color:#ADBAC7;">kmeans_iter1 </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> KMeans(</span><span style="color:#F69D50;">n_clusters</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">5</span><span style="color:#ADBAC7;">,</span><span style="color:#F69D50;">init</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">&#39;random&#39;</span><span style="color:#ADBAC7;">,</span><span style="color:#F69D50;">n_init</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">,</span><span style="color:#F69D50;">max_iter</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">,</span><span style="color:#F69D50;">random_state</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">kmeans_iter2 </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> KMeans(</span><span style="color:#F69D50;">n_clusters</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">5</span><span style="color:#ADBAC7;">,</span><span style="color:#F69D50;">init</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">&#39;random&#39;</span><span style="color:#ADBAC7;">,</span><span style="color:#F69D50;">n_init</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">,</span><span style="color:#F69D50;">max_iter</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;">,</span><span style="color:#F69D50;">random_state</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">kmeans_iter3 </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> KMeans(</span><span style="color:#F69D50;">n_clusters</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">5</span><span style="color:#ADBAC7;">,</span><span style="color:#F69D50;">init</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">&#39;random&#39;</span><span style="color:#ADBAC7;">,</span><span style="color:#F69D50;">n_init</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">,</span><span style="color:#F69D50;">max_iter</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">3</span><span style="color:#ADBAC7;">,</span><span style="color:#F69D50;">random_state</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">kmeans_iter1.fit(X)</span></span>
<span class="line"><span style="color:#ADBAC7;">kmeans_iter2.fit(X)</span></span>
<span class="line"><span style="color:#ADBAC7;">kmeans_iter3.fit(X)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">plt.figure(</span><span style="color:#F69D50;">figsize</span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">12</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">8</span><span style="color:#ADBAC7;">))</span></span>
<span class="line"><span style="color:#ADBAC7;">plt.subplot(</span><span style="color:#6CB6FF;">321</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">plot_data(X)</span></span>
<span class="line"><span style="color:#ADBAC7;">plot_centroids(kmeans_iter1.cluster_centers_, </span><span style="color:#F69D50;">circle_color</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&#39;r&#39;</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">cross_color</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&#39;k&#39;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">plt.title(</span><span style="color:#96D0FF;">&#39;Update cluster_centers&#39;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">plt.subplot(</span><span style="color:#6CB6FF;">322</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">plot_decision_boundaries(kmeans_iter1, X,</span><span style="color:#F69D50;">show_xlabels</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">False</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">show_ylabels</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">False</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">plt.title(</span><span style="color:#96D0FF;">&#39;Label&#39;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">plt.subplot(</span><span style="color:#6CB6FF;">323</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">plot_decision_boundaries(kmeans_iter1, X,</span><span style="color:#F69D50;">show_xlabels</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">False</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">show_ylabels</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">False</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">plot_centroids(kmeans_iter2.cluster_centers_,)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">plt.subplot(</span><span style="color:#6CB6FF;">324</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">plot_decision_boundaries(kmeans_iter2, X,</span><span style="color:#F69D50;">show_xlabels</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">False</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">show_ylabels</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">False</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">plt.subplot(</span><span style="color:#6CB6FF;">325</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">plot_decision_boundaries(kmeans_iter2, X,</span><span style="color:#F69D50;">show_xlabels</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">False</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">show_ylabels</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">False</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">plot_centroids(kmeans_iter3.cluster_centers_,)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">plt.subplot(</span><span style="color:#6CB6FF;">326</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">plot_decision_boundaries(kmeans_iter3, X,</span><span style="color:#F69D50;">show_xlabels</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">False</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">show_ylabels</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">False</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">plt.show()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># 展示了迭代的过程</span></span>
<span class="line"><span style="color:#24292E;">kmeans_iter1 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> KMeans(</span><span style="color:#E36209;">n_clusters</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">5</span><span style="color:#24292E;">,</span><span style="color:#E36209;">init</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;random&#39;</span><span style="color:#24292E;">,</span><span style="color:#E36209;">n_init</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#E36209;">max_iter</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#E36209;">random_state</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">kmeans_iter2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> KMeans(</span><span style="color:#E36209;">n_clusters</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">5</span><span style="color:#24292E;">,</span><span style="color:#E36209;">init</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;random&#39;</span><span style="color:#24292E;">,</span><span style="color:#E36209;">n_init</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#E36209;">max_iter</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span><span style="color:#E36209;">random_state</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">kmeans_iter3 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> KMeans(</span><span style="color:#E36209;">n_clusters</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">5</span><span style="color:#24292E;">,</span><span style="color:#E36209;">init</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;random&#39;</span><span style="color:#24292E;">,</span><span style="color:#E36209;">n_init</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#E36209;">max_iter</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">,</span><span style="color:#E36209;">random_state</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">kmeans_iter1.fit(X)</span></span>
<span class="line"><span style="color:#24292E;">kmeans_iter2.fit(X)</span></span>
<span class="line"><span style="color:#24292E;">kmeans_iter3.fit(X)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">plt.figure(</span><span style="color:#E36209;">figsize</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">12</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">8</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#24292E;">plt.subplot(</span><span style="color:#005CC5;">321</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">plot_data(X)</span></span>
<span class="line"><span style="color:#24292E;">plot_centroids(kmeans_iter1.cluster_centers_, </span><span style="color:#E36209;">circle_color</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;r&#39;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">cross_color</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;k&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">plt.title(</span><span style="color:#032F62;">&#39;Update cluster_centers&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">plt.subplot(</span><span style="color:#005CC5;">322</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">plot_decision_boundaries(kmeans_iter1, X,</span><span style="color:#E36209;">show_xlabels</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">False</span><span style="color:#24292E;">, </span><span style="color:#E36209;">show_ylabels</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">False</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">plt.title(</span><span style="color:#032F62;">&#39;Label&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">plt.subplot(</span><span style="color:#005CC5;">323</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">plot_decision_boundaries(kmeans_iter1, X,</span><span style="color:#E36209;">show_xlabels</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">False</span><span style="color:#24292E;">, </span><span style="color:#E36209;">show_ylabels</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">False</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">plot_centroids(kmeans_iter2.cluster_centers_,)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">plt.subplot(</span><span style="color:#005CC5;">324</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">plot_decision_boundaries(kmeans_iter2, X,</span><span style="color:#E36209;">show_xlabels</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">False</span><span style="color:#24292E;">, </span><span style="color:#E36209;">show_ylabels</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">False</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">plt.subplot(</span><span style="color:#005CC5;">325</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">plot_decision_boundaries(kmeans_iter2, X,</span><span style="color:#E36209;">show_xlabels</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">False</span><span style="color:#24292E;">, </span><span style="color:#E36209;">show_ylabels</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">False</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">plot_centroids(kmeans_iter3.cluster_centers_,)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">plt.subplot(</span><span style="color:#005CC5;">326</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">plot_decision_boundaries(kmeans_iter3, X,</span><span style="color:#E36209;">show_xlabels</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">False</span><span style="color:#24292E;">, </span><span style="color:#E36209;">show_ylabels</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">False</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">plt.show()</span></span></code></pre></div><p><img src="https://cdn.jsdelivr.net/gh/clint-sfy/blogcdn@master/python/ML/10.3.png" alt=""></p><h3 id="不稳定的结果" tabindex="-1">不稳定的结果 <a class="header-anchor" href="#不稳定的结果" aria-label="Permalink to &quot;不稳定的结果&quot;">​</a></h3><p>初始的随机种子不一样，得到的结果也不同</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">def</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">plot_clusterer_comparison</span><span style="color:#ADBAC7;">(c1,c2,X):</span></span>
<span class="line"><span style="color:#ADBAC7;">    c1.fit(X)</span></span>
<span class="line"><span style="color:#ADBAC7;">    c2.fit(X)</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span></span>
<span class="line"><span style="color:#ADBAC7;">    plt.figure(</span><span style="color:#F69D50;">figsize</span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">12</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">4</span><span style="color:#ADBAC7;">))</span></span>
<span class="line"><span style="color:#ADBAC7;">    plt.subplot(</span><span style="color:#6CB6FF;">121</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">    plot_decision_boundaries(c1,X)</span></span>
<span class="line"><span style="color:#ADBAC7;">    plt.subplot(</span><span style="color:#6CB6FF;">122</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">    plot_decision_boundaries(c2,X)</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span></span>
<span class="line"><span style="color:#ADBAC7;">c1 </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> KMeans(</span><span style="color:#F69D50;">n_clusters</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">5</span><span style="color:#ADBAC7;">,</span><span style="color:#F69D50;">init</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&#39;random&#39;</span><span style="color:#ADBAC7;">,</span><span style="color:#F69D50;">n_init</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">,</span><span style="color:#F69D50;">random_state</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">11</span><span style="color:#ADBAC7;">) </span><span style="color:#768390;"># 随机种子 初始中心点</span></span>
<span class="line"><span style="color:#ADBAC7;">c2 </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> KMeans(</span><span style="color:#F69D50;">n_clusters</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">5</span><span style="color:#ADBAC7;">,</span><span style="color:#F69D50;">init</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&#39;random&#39;</span><span style="color:#ADBAC7;">,</span><span style="color:#F69D50;">n_init</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">,</span><span style="color:#F69D50;">random_state</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">19</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">plot_clusterer_comparison(c1,c2,X)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">plot_clusterer_comparison</span><span style="color:#24292E;">(c1,c2,X):</span></span>
<span class="line"><span style="color:#24292E;">    c1.fit(X)</span></span>
<span class="line"><span style="color:#24292E;">    c2.fit(X)</span></span>
<span class="line"><span style="color:#24292E;">    </span></span>
<span class="line"><span style="color:#24292E;">    plt.figure(</span><span style="color:#E36209;">figsize</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">12</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#24292E;">    plt.subplot(</span><span style="color:#005CC5;">121</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    plot_decision_boundaries(c1,X)</span></span>
<span class="line"><span style="color:#24292E;">    plt.subplot(</span><span style="color:#005CC5;">122</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    plot_decision_boundaries(c2,X)</span></span>
<span class="line"><span style="color:#24292E;">    </span></span>
<span class="line"><span style="color:#24292E;">c1 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> KMeans(</span><span style="color:#E36209;">n_clusters</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">5</span><span style="color:#24292E;">,</span><span style="color:#E36209;">init</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;random&#39;</span><span style="color:#24292E;">,</span><span style="color:#E36209;">n_init</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#E36209;">random_state</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">11</span><span style="color:#24292E;">) </span><span style="color:#6A737D;"># 随机种子 初始中心点</span></span>
<span class="line"><span style="color:#24292E;">c2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> KMeans(</span><span style="color:#E36209;">n_clusters</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">5</span><span style="color:#24292E;">,</span><span style="color:#E36209;">init</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;random&#39;</span><span style="color:#24292E;">,</span><span style="color:#E36209;">n_init</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#E36209;">random_state</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">19</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">plot_clusterer_comparison(c1,c2,X)</span></span></code></pre></div><p><img src="https://cdn.jsdelivr.net/gh/clint-sfy/blogcdn@master/python/ML/10.4.png" alt=""></p><h3 id="评估方法" tabindex="-1">评估方法 <a class="header-anchor" href="#评估方法" aria-label="Permalink to &quot;评估方法&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#768390;"># Inertia指标：每个样本与其质心的距离</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">kmeans.inertia_ </span><span style="color:#768390;"># 希望越小越好</span></span>
<span class="line"><span style="color:#6CB6FF;">211.5985372581684</span></span>
<span class="line"></span>
<span class="line"><span style="color:#768390;">#transform得到的是当前样本到每个簇中心距离</span></span>
<span class="line"><span style="color:#ADBAC7;">kmeans.transform(X)</span></span>
<span class="line"><span style="color:#ADBAC7;">array([[</span><span style="color:#6CB6FF;">0.46779778</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">3.04611916</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">1.45402521</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">1.54944305</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">0.11146795</span><span style="color:#ADBAC7;">],</span></span>
<span class="line"><span style="color:#ADBAC7;">       [</span><span style="color:#6CB6FF;">0.07122059</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">3.11541584</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">0.99002955</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">1.48612753</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">0.51431557</span><span style="color:#ADBAC7;">],</span></span>
<span class="line"><span style="color:#ADBAC7;">       [</span><span style="color:#6CB6FF;">3.81713488</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">1.32016676</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">4.09069201</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">2.67154781</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">3.76340605</span><span style="color:#ADBAC7;">],</span></span>
<span class="line"><span style="color:#ADBAC7;">       </span><span style="color:#6CB6FF;">...</span><span style="color:#ADBAC7;">,</span></span>
<span class="line"><span style="color:#ADBAC7;">       [</span><span style="color:#6CB6FF;">0.92830156</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">3.04886464</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">0.06769209</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">1.40795651</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">1.42865797</span><span style="color:#ADBAC7;">],</span></span>
<span class="line"><span style="color:#ADBAC7;">       [</span><span style="color:#6CB6FF;">3.10300136</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">0.14895409</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">3.05913478</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">1.71125</span><span style="color:#ADBAC7;">   , </span><span style="color:#6CB6FF;">3.23385668</span><span style="color:#ADBAC7;">],</span></span>
<span class="line"><span style="color:#ADBAC7;">       [</span><span style="color:#6CB6FF;">0.22700281</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">2.8625311</span><span style="color:#ADBAC7;"> , </span><span style="color:#6CB6FF;">0.85434589</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">1.21678483</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">0.67518173</span><span style="color:#ADBAC7;">]])</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">kmeans.labels_</span></span>
<span class="line"><span style="color:#ADBAC7;">array([</span><span style="color:#6CB6FF;">4</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">...</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">])</span></span>
<span class="line"><span style="color:#ADBAC7;">X_dist[np.arange(</span><span style="color:#6CB6FF;">len</span><span style="color:#ADBAC7;">(X_dist)),kmeans.labels_]</span></span>
<span class="line"><span style="color:#ADBAC7;">array([</span><span style="color:#6CB6FF;">0.11146795</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">0.07122059</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">1.32016676</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">...</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">0.06769209</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">0.14895409</span><span style="color:#ADBAC7;">,</span></span>
<span class="line"><span style="color:#ADBAC7;">       </span><span style="color:#6CB6FF;">0.22700281</span><span style="color:#ADBAC7;">])</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">np.sum(X_dist[np.arange(</span><span style="color:#6CB6FF;">len</span><span style="color:#ADBAC7;">(X_dist)),kmeans.labels_]</span><span style="color:#F47067;">**</span><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#6CB6FF;">211.59853725816856</span></span>
<span class="line"><span style="color:#ADBAC7;">kmeans.score(X)</span></span>
<span class="line"><span style="color:#F47067;">-</span><span style="color:#6CB6FF;">211.59853725816856</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># Inertia指标：每个样本与其质心的距离</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">kmeans.inertia_ </span><span style="color:#6A737D;"># 希望越小越好</span></span>
<span class="line"><span style="color:#005CC5;">211.5985372581684</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">#transform得到的是当前样本到每个簇中心距离</span></span>
<span class="line"><span style="color:#24292E;">kmeans.transform(X)</span></span>
<span class="line"><span style="color:#24292E;">array([[</span><span style="color:#005CC5;">0.46779778</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">3.04611916</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">1.45402521</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">1.54944305</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">0.11146795</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">       [</span><span style="color:#005CC5;">0.07122059</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">3.11541584</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">0.99002955</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">1.48612753</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">0.51431557</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">       [</span><span style="color:#005CC5;">3.81713488</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">1.32016676</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">4.09069201</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2.67154781</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">3.76340605</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">       </span><span style="color:#005CC5;">...</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">       [</span><span style="color:#005CC5;">0.92830156</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">3.04886464</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">0.06769209</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">1.40795651</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">1.42865797</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">       [</span><span style="color:#005CC5;">3.10300136</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">0.14895409</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">3.05913478</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">1.71125</span><span style="color:#24292E;">   , </span><span style="color:#005CC5;">3.23385668</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">       [</span><span style="color:#005CC5;">0.22700281</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2.8625311</span><span style="color:#24292E;"> , </span><span style="color:#005CC5;">0.85434589</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">1.21678483</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">0.67518173</span><span style="color:#24292E;">]])</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">kmeans.labels_</span></span>
<span class="line"><span style="color:#24292E;">array([</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">...</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">])</span></span>
<span class="line"><span style="color:#24292E;">X_dist[np.arange(</span><span style="color:#005CC5;">len</span><span style="color:#24292E;">(X_dist)),kmeans.labels_]</span></span>
<span class="line"><span style="color:#24292E;">array([</span><span style="color:#005CC5;">0.11146795</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">0.07122059</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">1.32016676</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">...</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">0.06769209</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">0.14895409</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">       </span><span style="color:#005CC5;">0.22700281</span><span style="color:#24292E;">])</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">np.sum(X_dist[np.arange(</span><span style="color:#005CC5;">len</span><span style="color:#24292E;">(X_dist)),kmeans.labels_]</span><span style="color:#D73A49;">**</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#005CC5;">211.59853725816856</span></span>
<span class="line"><span style="color:#24292E;">kmeans.score(X)</span></span>
<span class="line"><span style="color:#D73A49;">-</span><span style="color:#005CC5;">211.59853725816856</span></span></code></pre></div><h3 id="找到最佳簇数" tabindex="-1">找到最佳簇数 <a class="header-anchor" href="#找到最佳簇数" aria-label="Permalink to &quot;找到最佳簇数&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#768390;"># 如果k值越大，得到的结果肯定会越来越小！！！</span></span>
<span class="line"><span style="color:#ADBAC7;">kmeans_per_k </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> [KMeans(</span><span style="color:#F69D50;">n_clusters</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> k).fit(X) </span><span style="color:#F47067;">for</span><span style="color:#ADBAC7;"> k </span><span style="color:#F47067;">in</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">range</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">10</span><span style="color:#ADBAC7;">)]</span></span>
<span class="line"><span style="color:#ADBAC7;">inertias </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> [model.inertia_ </span><span style="color:#F47067;">for</span><span style="color:#ADBAC7;"> model </span><span style="color:#F47067;">in</span><span style="color:#ADBAC7;"> kmeans_per_k]</span></span>
<span class="line"><span style="color:#ADBAC7;">plt.figure(</span><span style="color:#F69D50;">figsize</span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">8</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">4</span><span style="color:#ADBAC7;">))</span></span>
<span class="line"><span style="color:#ADBAC7;">plt.plot(</span><span style="color:#6CB6FF;">range</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">10</span><span style="color:#ADBAC7;">),inertias,</span><span style="color:#96D0FF;">&#39;bo-&#39;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">plt.axis([</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">8.5</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">1300</span><span style="color:#ADBAC7;">])</span></span>
<span class="line"><span style="color:#ADBAC7;">plt.show()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># 如果k值越大，得到的结果肯定会越来越小！！！</span></span>
<span class="line"><span style="color:#24292E;">kmeans_per_k </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [KMeans(</span><span style="color:#E36209;">n_clusters</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> k).fit(X) </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> k </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">range</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">)]</span></span>
<span class="line"><span style="color:#24292E;">inertias </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [model.inertia_ </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> model </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> kmeans_per_k]</span></span>
<span class="line"><span style="color:#24292E;">plt.figure(</span><span style="color:#E36209;">figsize</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">8</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#24292E;">plt.plot(</span><span style="color:#005CC5;">range</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">),inertias,</span><span style="color:#032F62;">&#39;bo-&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">plt.axis([</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">8.5</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">1300</span><span style="color:#24292E;">])</span></span>
<span class="line"><span style="color:#24292E;">plt.show()</span></span></code></pre></div><p><img src="https://cdn.jsdelivr.net/gh/clint-sfy/blogcdn@master/python/ML/10.5.png" alt=""></p><h3 id="轮廓系数" tabindex="-1">轮廓系数 <a class="header-anchor" href="#轮廓系数" aria-label="Permalink to &quot;轮廓系数&quot;">​</a></h3><p>另一种判断k值的 方法</p><p><img src="https://cdn.jsdelivr.net/gh/clint-sfy/blogcdn@master/python/ML/10.6.png" alt=""></p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">from</span><span style="color:#ADBAC7;"> sklearn.metrics </span><span style="color:#F47067;">import</span><span style="color:#ADBAC7;"> silhouette_score </span></span>
<span class="line"><span style="color:#768390;"># 轮廓系数</span></span>
<span class="line"><span style="color:#ADBAC7;">silhouette_score(X,kmeans.labels_)</span></span>
<span class="line"><span style="color:#6CB6FF;">0.655517642572828</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">kmeans_per_k</span></span>
<span class="line"><span style="color:#ADBAC7;">[KMeans(</span><span style="color:#F69D50;">algorithm</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&#39;auto&#39;</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">copy_x</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">True</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">init</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&#39;k-means++&#39;</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">max_iter</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">300</span><span style="color:#ADBAC7;">,</span></span>
<span class="line"><span style="color:#ADBAC7;">     </span><span style="color:#F69D50;">n_clusters</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">n_init</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">10</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">n_jobs</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">None</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">precompute_distances</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&#39;auto&#39;</span><span style="color:#ADBAC7;">,</span></span>
<span class="line"><span style="color:#ADBAC7;">     </span><span style="color:#F69D50;">random_state</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">None</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">tol</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">0.0001</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">verbose</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">),</span></span>
<span class="line"><span style="color:#ADBAC7;"> KMeans(</span><span style="color:#F69D50;">algorithm</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&#39;auto&#39;</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">copy_x</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">True</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">init</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&#39;k-means++&#39;</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">max_iter</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">300</span><span style="color:#ADBAC7;">,</span></span>
<span class="line"><span style="color:#ADBAC7;">     </span><span style="color:#F69D50;">n_clusters</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">n_init</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">10</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">n_jobs</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">None</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">precompute_distances</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&#39;auto&#39;</span><span style="color:#ADBAC7;">,</span></span>
<span class="line"><span style="color:#ADBAC7;">     </span><span style="color:#F69D50;">random_state</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">None</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">tol</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">0.0001</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">verbose</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;"> </span></span>
<span class="line"><span style="color:#ADBAC7;">silhouette_scores = [silhouette_score(X,model.labels_) </span><span style="color:#F47067;">for</span><span style="color:#ADBAC7;"> model </span><span style="color:#F47067;">in</span><span style="color:#ADBAC7;"> kmeans_per_k[</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">:]]</span></span>
<span class="line"><span style="color:#768390;"># 轮廓系数越接近1 说明越合理  但不一定最合理 只是参考</span></span>
<span class="line"><span style="color:#ADBAC7;">plt.figure(</span><span style="color:#F69D50;">figsize</span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">8</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">4</span><span style="color:#ADBAC7;">))</span></span>
<span class="line"><span style="color:#ADBAC7;">plt.plot(</span><span style="color:#6CB6FF;">range</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">10</span><span style="color:#ADBAC7;">),silhouette_scores,</span><span style="color:#96D0FF;">&#39;bo-&#39;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">plt.show()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> sklearn.metrics </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> silhouette_score </span></span>
<span class="line"><span style="color:#6A737D;"># 轮廓系数</span></span>
<span class="line"><span style="color:#24292E;">silhouette_score(X,kmeans.labels_)</span></span>
<span class="line"><span style="color:#005CC5;">0.655517642572828</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">kmeans_per_k</span></span>
<span class="line"><span style="color:#24292E;">[KMeans(</span><span style="color:#E36209;">algorithm</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;auto&#39;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">copy_x</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">True</span><span style="color:#24292E;">, </span><span style="color:#E36209;">init</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;k-means++&#39;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">max_iter</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">300</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">     </span><span style="color:#E36209;">n_clusters</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#E36209;">n_init</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">, </span><span style="color:#E36209;">n_jobs</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">None</span><span style="color:#24292E;">, </span><span style="color:#E36209;">precompute_distances</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;auto&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">     </span><span style="color:#E36209;">random_state</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">None</span><span style="color:#24292E;">, </span><span style="color:#E36209;">tol</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0.0001</span><span style="color:#24292E;">, </span><span style="color:#E36209;">verbose</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;"> KMeans(</span><span style="color:#E36209;">algorithm</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;auto&#39;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">copy_x</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">True</span><span style="color:#24292E;">, </span><span style="color:#E36209;">init</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;k-means++&#39;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">max_iter</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">300</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">     </span><span style="color:#E36209;">n_clusters</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#E36209;">n_init</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">, </span><span style="color:#E36209;">n_jobs</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">None</span><span style="color:#24292E;">, </span><span style="color:#E36209;">precompute_distances</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;auto&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">     </span><span style="color:#E36209;">random_state</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">None</span><span style="color:#24292E;">, </span><span style="color:#E36209;">tol</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0.0001</span><span style="color:#24292E;">, </span><span style="color:#E36209;">verbose</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">silhouette_scores = [silhouette_score(X,model.labels_) </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> model </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> kmeans_per_k[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">:]]</span></span>
<span class="line"><span style="color:#6A737D;"># 轮廓系数越接近1 说明越合理  但不一定最合理 只是参考</span></span>
<span class="line"><span style="color:#24292E;">plt.figure(</span><span style="color:#E36209;">figsize</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">8</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#24292E;">plt.plot(</span><span style="color:#005CC5;">range</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">),silhouette_scores,</span><span style="color:#032F62;">&#39;bo-&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">plt.show()</span></span></code></pre></div><p><img src="https://cdn.jsdelivr.net/gh/clint-sfy/blogcdn@master/python/ML/10.7.png" alt=""></p><h3 id="kmeans存在的问题" tabindex="-1">Kmeans存在的问题 <a class="header-anchor" href="#kmeans存在的问题" aria-label="Permalink to &quot;Kmeans存在的问题&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#768390;"># 评估只能当做参考</span></span>
<span class="line"><span style="color:#ADBAC7;">X1, y1 </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> make_blobs(</span><span style="color:#F69D50;">n_samples</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">1000</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">centers</span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;">((</span><span style="color:#6CB6FF;">4</span><span style="color:#ADBAC7;">, </span><span style="color:#F47067;">-</span><span style="color:#6CB6FF;">4</span><span style="color:#ADBAC7;">), (</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">)), </span><span style="color:#F69D50;">random_state</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">42</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">X1 </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> X1.dot(np.array([[</span><span style="color:#6CB6FF;">0.374</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">0.95</span><span style="color:#ADBAC7;">], [</span><span style="color:#6CB6FF;">0.732</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">0.598</span><span style="color:#ADBAC7;">]]))</span></span>
<span class="line"><span style="color:#ADBAC7;">X2, y2 </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> make_blobs(</span><span style="color:#F69D50;">n_samples</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">250</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">centers</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">random_state</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">42</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">X2 </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> X2 </span><span style="color:#F47067;">+</span><span style="color:#ADBAC7;"> [</span><span style="color:#6CB6FF;">6</span><span style="color:#ADBAC7;">, </span><span style="color:#F47067;">-</span><span style="color:#6CB6FF;">8</span><span style="color:#ADBAC7;">]</span></span>
<span class="line"><span style="color:#ADBAC7;">X </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> np.r_[X1, X2]</span></span>
<span class="line"><span style="color:#ADBAC7;">y </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> np.r_[y1, y2]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">plot_data(X)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># 评估只能当做参考</span></span>
<span class="line"><span style="color:#24292E;">X1, y1 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> make_blobs(</span><span style="color:#E36209;">n_samples</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">1000</span><span style="color:#24292E;">, </span><span style="color:#E36209;">centers</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">((</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">), (</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">)), </span><span style="color:#E36209;">random_state</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">42</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">X1 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> X1.dot(np.array([[</span><span style="color:#005CC5;">0.374</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">0.95</span><span style="color:#24292E;">], [</span><span style="color:#005CC5;">0.732</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">0.598</span><span style="color:#24292E;">]]))</span></span>
<span class="line"><span style="color:#24292E;">X2, y2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> make_blobs(</span><span style="color:#E36209;">n_samples</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">250</span><span style="color:#24292E;">, </span><span style="color:#E36209;">centers</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#E36209;">random_state</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">42</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">X2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> X2 </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">6</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">8</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">X </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> np.r_[X1, X2]</span></span>
<span class="line"><span style="color:#24292E;">y </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> np.r_[y1, y2]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">plot_data(X)</span></span></code></pre></div><p><img src="https://cdn.jsdelivr.net/gh/clint-sfy/blogcdn@master/python/ML/10.8.png" alt=""></p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#768390;"># 玩赖的 初始值规定了比较合理三个中心</span></span>
<span class="line"><span style="color:#768390;"># 事实上 即使inertia比较小 看出来分类也比较不合理</span></span>
<span class="line"><span style="color:#ADBAC7;">kmeans_good </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> KMeans(</span><span style="color:#F69D50;">n_clusters</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">3</span><span style="color:#ADBAC7;">,</span><span style="color:#F69D50;">init</span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;">np.array([[</span><span style="color:#F47067;">-</span><span style="color:#6CB6FF;">1.5</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">2.5</span><span style="color:#ADBAC7;">],[</span><span style="color:#6CB6FF;">0.5</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">],[</span><span style="color:#6CB6FF;">4</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">]]),</span><span style="color:#F69D50;">n_init</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">,</span><span style="color:#F69D50;">random_state</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">42</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">kmeans_bad </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> KMeans(</span><span style="color:#F69D50;">n_clusters</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">3</span><span style="color:#ADBAC7;">,</span><span style="color:#F69D50;">random_state</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">42</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">kmeans_good.fit(X)</span></span>
<span class="line"><span style="color:#ADBAC7;">kmeans_bad.fit(X)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">plt.figure(</span><span style="color:#F69D50;">figsize</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> (</span><span style="color:#6CB6FF;">10</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">4</span><span style="color:#ADBAC7;">))</span></span>
<span class="line"><span style="color:#ADBAC7;">plt.subplot(</span><span style="color:#6CB6FF;">121</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">plot_decision_boundaries(kmeans_good,X)</span></span>
<span class="line"><span style="color:#ADBAC7;">plt.title(</span><span style="color:#96D0FF;">&#39;Good - inertia = </span><span style="color:#F47067;">{}</span><span style="color:#96D0FF;">&#39;</span><span style="color:#ADBAC7;">.format(kmeans_good.inertia_))</span></span>
<span class="line"><span style="color:#ADBAC7;"> </span></span>
<span class="line"><span style="color:#ADBAC7;">plt.subplot(</span><span style="color:#6CB6FF;">122</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">plot_decision_boundaries(kmeans_bad,X)</span></span>
<span class="line"><span style="color:#ADBAC7;">plt.title(</span><span style="color:#96D0FF;">&#39;Bad - inertia = </span><span style="color:#F47067;">{}</span><span style="color:#96D0FF;">&#39;</span><span style="color:#ADBAC7;">.format(kmeans_bad.inertia_))</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># 玩赖的 初始值规定了比较合理三个中心</span></span>
<span class="line"><span style="color:#6A737D;"># 事实上 即使inertia比较小 看出来分类也比较不合理</span></span>
<span class="line"><span style="color:#24292E;">kmeans_good </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> KMeans(</span><span style="color:#E36209;">n_clusters</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">,</span><span style="color:#E36209;">init</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">np.array([[</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">1.5</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">2.5</span><span style="color:#24292E;">],[</span><span style="color:#005CC5;">0.5</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">],[</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">]]),</span><span style="color:#E36209;">n_init</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#E36209;">random_state</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">42</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">kmeans_bad </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> KMeans(</span><span style="color:#E36209;">n_clusters</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">,</span><span style="color:#E36209;">random_state</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">42</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">kmeans_good.fit(X)</span></span>
<span class="line"><span style="color:#24292E;">kmeans_bad.fit(X)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">plt.figure(</span><span style="color:#E36209;">figsize</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#24292E;">plt.subplot(</span><span style="color:#005CC5;">121</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">plot_decision_boundaries(kmeans_good,X)</span></span>
<span class="line"><span style="color:#24292E;">plt.title(</span><span style="color:#032F62;">&#39;Good - inertia = </span><span style="color:#005CC5;">{}</span><span style="color:#032F62;">&#39;</span><span style="color:#24292E;">.format(kmeans_good.inertia_))</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">plt.subplot(</span><span style="color:#005CC5;">122</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">plot_decision_boundaries(kmeans_bad,X)</span></span>
<span class="line"><span style="color:#24292E;">plt.title(</span><span style="color:#032F62;">&#39;Bad - inertia = </span><span style="color:#005CC5;">{}</span><span style="color:#032F62;">&#39;</span><span style="color:#24292E;">.format(kmeans_bad.inertia_))</span></span></code></pre></div><p><img src="https://cdn.jsdelivr.net/gh/clint-sfy/blogcdn@master/python/ML/10.9.png" alt=""></p><h3 id="图像分割小例子" tabindex="-1">图像分割小例子 <a class="header-anchor" href="#图像分割小例子" aria-label="Permalink to &quot;图像分割小例子&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#768390;">#ladybug.png 把向日葵从图像中分割出来</span></span>
<span class="line"><span style="color:#F47067;">from</span><span style="color:#ADBAC7;"> matplotlib.image </span><span style="color:#F47067;">import</span><span style="color:#ADBAC7;"> imread</span></span>
<span class="line"><span style="color:#ADBAC7;">image </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> imread(</span><span style="color:#96D0FF;">&#39;ladybug.png&#39;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">image.shape</span></span>
<span class="line"><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">533</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">800</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">3</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">X </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> image.reshape(</span><span style="color:#F47067;">-</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">3</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">X.shape</span></span>
<span class="line"><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">426400</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">3</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">kmeans </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> KMeans(</span><span style="color:#F69D50;">n_clusters</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">8</span><span style="color:#ADBAC7;">,</span><span style="color:#F69D50;">random_state</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">42</span><span style="color:#ADBAC7;">).fit(X)</span></span>
<span class="line"><span style="color:#768390;"># 拿到中心位置</span></span>
<span class="line"><span style="color:#ADBAC7;">kmeans.cluster_centers_</span></span>
<span class="line"></span>
<span class="line"><span style="color:#768390;"># 需要还原成三维  图片</span></span>
<span class="line"><span style="color:#ADBAC7;">segmented_img </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> kmeans.cluster_centers_[kmeans.labels_].reshape(</span><span style="color:#6CB6FF;">533</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">800</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">3</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">segmented_imgs </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> []</span></span>
<span class="line"><span style="color:#ADBAC7;">n_colors </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> (</span><span style="color:#6CB6FF;">10</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">8</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">6</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">4</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#768390;"># 不同聚类中心进行展示</span></span>
<span class="line"><span style="color:#F47067;">for</span><span style="color:#ADBAC7;"> n_cluster </span><span style="color:#F47067;">in</span><span style="color:#ADBAC7;"> n_colors:</span></span>
<span class="line"><span style="color:#ADBAC7;">    kmeans </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> KMeans(</span><span style="color:#F69D50;">n_clusters</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> n_cluster,</span><span style="color:#F69D50;">random_state</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">42</span><span style="color:#ADBAC7;">).fit(X)</span></span>
<span class="line"><span style="color:#ADBAC7;">    segmented_img </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> kmeans.cluster_centers_[kmeans.labels_]</span></span>
<span class="line"><span style="color:#ADBAC7;">    segmented_imgs.append(segmented_img.reshape(image.shape))</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span></span>
<span class="line"><span style="color:#ADBAC7;">plt.figure(</span><span style="color:#F69D50;">figsize</span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">10</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">5</span><span style="color:#ADBAC7;">))</span></span>
<span class="line"><span style="color:#ADBAC7;">plt.subplot(</span><span style="color:#6CB6FF;">231</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">plt.imshow(image)</span></span>
<span class="line"><span style="color:#ADBAC7;">plt.title(</span><span style="color:#96D0FF;">&#39;Original image&#39;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F47067;">for</span><span style="color:#ADBAC7;"> idx,n_clusters </span><span style="color:#F47067;">in</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">enumerate</span><span style="color:#ADBAC7;">(n_colors):</span></span>
<span class="line"><span style="color:#ADBAC7;">    plt.subplot(</span><span style="color:#6CB6FF;">232</span><span style="color:#F47067;">+</span><span style="color:#ADBAC7;">idx)</span></span>
<span class="line"><span style="color:#ADBAC7;">    plt.imshow(segmented_imgs[idx])</span></span>
<span class="line"><span style="color:#ADBAC7;">    plt.title(</span><span style="color:#96D0FF;">&#39;</span><span style="color:#F47067;">{}</span><span style="color:#96D0FF;">colors&#39;</span><span style="color:#ADBAC7;">.format(n_clusters))</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">#ladybug.png 把向日葵从图像中分割出来</span></span>
<span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> matplotlib.image </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> imread</span></span>
<span class="line"><span style="color:#24292E;">image </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> imread(</span><span style="color:#032F62;">&#39;ladybug.png&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">image.shape</span></span>
<span class="line"><span style="color:#24292E;">(</span><span style="color:#005CC5;">533</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">800</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">X </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> image.reshape(</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">X.shape</span></span>
<span class="line"><span style="color:#24292E;">(</span><span style="color:#005CC5;">426400</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">kmeans </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> KMeans(</span><span style="color:#E36209;">n_clusters</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">8</span><span style="color:#24292E;">,</span><span style="color:#E36209;">random_state</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">42</span><span style="color:#24292E;">).fit(X)</span></span>
<span class="line"><span style="color:#6A737D;"># 拿到中心位置</span></span>
<span class="line"><span style="color:#24292E;">kmeans.cluster_centers_</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 需要还原成三维  图片</span></span>
<span class="line"><span style="color:#24292E;">segmented_img </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> kmeans.cluster_centers_[kmeans.labels_].reshape(</span><span style="color:#005CC5;">533</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">800</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">segmented_imgs </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> []</span></span>
<span class="line"><span style="color:#24292E;">n_colors </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">8</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">6</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#6A737D;"># 不同聚类中心进行展示</span></span>
<span class="line"><span style="color:#D73A49;">for</span><span style="color:#24292E;"> n_cluster </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> n_colors:</span></span>
<span class="line"><span style="color:#24292E;">    kmeans </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> KMeans(</span><span style="color:#E36209;">n_clusters</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> n_cluster,</span><span style="color:#E36209;">random_state</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">42</span><span style="color:#24292E;">).fit(X)</span></span>
<span class="line"><span style="color:#24292E;">    segmented_img </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> kmeans.cluster_centers_[kmeans.labels_]</span></span>
<span class="line"><span style="color:#24292E;">    segmented_imgs.append(segmented_img.reshape(image.shape))</span></span>
<span class="line"><span style="color:#24292E;">    </span></span>
<span class="line"><span style="color:#24292E;">plt.figure(</span><span style="color:#E36209;">figsize</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">5</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#24292E;">plt.subplot(</span><span style="color:#005CC5;">231</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">plt.imshow(image)</span></span>
<span class="line"><span style="color:#24292E;">plt.title(</span><span style="color:#032F62;">&#39;Original image&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">for</span><span style="color:#24292E;"> idx,n_clusters </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">enumerate</span><span style="color:#24292E;">(n_colors):</span></span>
<span class="line"><span style="color:#24292E;">    plt.subplot(</span><span style="color:#005CC5;">232</span><span style="color:#D73A49;">+</span><span style="color:#24292E;">idx)</span></span>
<span class="line"><span style="color:#24292E;">    plt.imshow(segmented_imgs[idx])</span></span>
<span class="line"><span style="color:#24292E;">    plt.title(</span><span style="color:#032F62;">&#39;</span><span style="color:#005CC5;">{}</span><span style="color:#032F62;">colors&#39;</span><span style="color:#24292E;">.format(n_clusters))</span></span></code></pre></div><p><img src="https://cdn.jsdelivr.net/gh/clint-sfy/blogcdn@master/python/ML/10.10.png" alt=""></p><h3 id="半监督学习" tabindex="-1">半监督学习 <a class="header-anchor" href="#半监督学习" aria-label="Permalink to &quot;半监督学习&quot;">​</a></h3><p>用逻辑回归识别手写体数字，可以用无监督聚类提高准确率</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#768390;"># 首先，让我们将训练集聚类为50个集群， 然后对于每个聚类，让我们找到最靠近质心的图像。 我们将这些图像称为代表性图像</span></span>
<span class="line"><span style="color:#F47067;">from</span><span style="color:#ADBAC7;"> sklearn.datasets </span><span style="color:#F47067;">import</span><span style="color:#ADBAC7;"> load_digits</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">X_digits,y_digits </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> load_digits(</span><span style="color:#F69D50;">return_X_y</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">True</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F47067;">from</span><span style="color:#ADBAC7;"> sklearn.model_selection </span><span style="color:#F47067;">import</span><span style="color:#ADBAC7;"> train_test_split</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">X_train,X_test,y_train,y_test </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> train_test_split(X_digits,y_digits,</span><span style="color:#F69D50;">random_state</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">42</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#768390;"># 有1347个手写体，8*8的像素点</span></span>
<span class="line"><span style="color:#ADBAC7;">X_train.shape </span></span>
<span class="line"><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">1347</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">64</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">y_train.shape</span></span>
<span class="line"><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">1347</span><span style="color:#ADBAC7;">,)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># 首先，让我们将训练集聚类为50个集群， 然后对于每个聚类，让我们找到最靠近质心的图像。 我们将这些图像称为代表性图像</span></span>
<span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> sklearn.datasets </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> load_digits</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">X_digits,y_digits </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> load_digits(</span><span style="color:#E36209;">return_X_y</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">True</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> sklearn.model_selection </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> train_test_split</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">X_train,X_test,y_train,y_test </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> train_test_split(X_digits,y_digits,</span><span style="color:#E36209;">random_state</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">42</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#6A737D;"># 有1347个手写体，8*8的像素点</span></span>
<span class="line"><span style="color:#24292E;">X_train.shape </span></span>
<span class="line"><span style="color:#24292E;">(</span><span style="color:#005CC5;">1347</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">64</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">y_train.shape</span></span>
<span class="line"><span style="color:#24292E;">(</span><span style="color:#005CC5;">1347</span><span style="color:#24292E;">,)</span></span></code></pre></div><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#768390;">#直接用逻辑回归的话 一般</span></span>
<span class="line"><span style="color:#768390;">#训练集只选了前50个</span></span>
<span class="line"><span style="color:#F47067;">from</span><span style="color:#ADBAC7;"> sklearn.linear_model </span><span style="color:#F47067;">import</span><span style="color:#ADBAC7;"> LogisticRegression</span></span>
<span class="line"><span style="color:#ADBAC7;">n_labeled </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">50</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">log_reg </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> LogisticRegression(</span><span style="color:#F69D50;">random_state</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">42</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">log_reg.fit(X_train[:n_labeled], y_train[:n_labeled])</span></span>
<span class="line"><span style="color:#ADBAC7;">log_reg.score(X_test, y_test)</span></span>
<span class="line"><span style="color:#6CB6FF;">0.8266666666666667</span></span>
<span class="line"></span>
<span class="line"><span style="color:#768390;"># 对这前50个进行聚类</span></span>
<span class="line"><span style="color:#ADBAC7;">k </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">50</span></span>
<span class="line"><span style="color:#ADBAC7;">kmeans </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> KMeans(</span><span style="color:#F69D50;">n_clusters</span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;">k, </span><span style="color:#F69D50;">random_state</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">42</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">X_digits_dist </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> kmeans.fit_transform(X_train)</span></span>
<span class="line"><span style="color:#ADBAC7;">X_digits_dist.shape</span></span>
<span class="line"><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">1347</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">50</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#768390;"># 它用于返回数组中最小元素的索引</span></span>
<span class="line"><span style="color:#ADBAC7;">representative_digits_idx </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> np.argmin(X_digits_dist,</span><span style="color:#F69D50;">axis</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">representative_digits_idx.shape</span></span>
<span class="line"><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">50</span><span style="color:#ADBAC7;">,)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">X_representative_digits </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> X_train[representative_digits_idx]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#768390;"># 现在让我们绘制这些代表性图像并手动标记它们：</span></span>
<span class="line"><span style="color:#ADBAC7;">plt.figure(</span><span style="color:#F69D50;">figsize</span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">8</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;">))</span></span>
<span class="line"><span style="color:#F47067;">for</span><span style="color:#ADBAC7;"> index, X_representative_digit </span><span style="color:#F47067;">in</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">enumerate</span><span style="color:#ADBAC7;">(X_representative_digits):</span></span>
<span class="line"><span style="color:#ADBAC7;">    plt.subplot(k </span><span style="color:#F47067;">//</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">10</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">10</span><span style="color:#ADBAC7;">, index </span><span style="color:#F47067;">+</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">    plt.imshow(X_representative_digit.reshape(</span><span style="color:#6CB6FF;">8</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">8</span><span style="color:#ADBAC7;">), </span><span style="color:#F69D50;">cmap</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&quot;binary&quot;</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">interpolation</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&quot;bilinear&quot;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">    plt.axis(</span><span style="color:#96D0FF;">&#39;off&#39;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">plt.show()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">#直接用逻辑回归的话 一般</span></span>
<span class="line"><span style="color:#6A737D;">#训练集只选了前50个</span></span>
<span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> sklearn.linear_model </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> LogisticRegression</span></span>
<span class="line"><span style="color:#24292E;">n_labeled </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">50</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">log_reg </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> LogisticRegression(</span><span style="color:#E36209;">random_state</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">42</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">log_reg.fit(X_train[:n_labeled], y_train[:n_labeled])</span></span>
<span class="line"><span style="color:#24292E;">log_reg.score(X_test, y_test)</span></span>
<span class="line"><span style="color:#005CC5;">0.8266666666666667</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 对这前50个进行聚类</span></span>
<span class="line"><span style="color:#24292E;">k </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">50</span></span>
<span class="line"><span style="color:#24292E;">kmeans </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> KMeans(</span><span style="color:#E36209;">n_clusters</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">k, </span><span style="color:#E36209;">random_state</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">42</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">X_digits_dist </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> kmeans.fit_transform(X_train)</span></span>
<span class="line"><span style="color:#24292E;">X_digits_dist.shape</span></span>
<span class="line"><span style="color:#24292E;">(</span><span style="color:#005CC5;">1347</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">50</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#6A737D;"># 它用于返回数组中最小元素的索引</span></span>
<span class="line"><span style="color:#24292E;">representative_digits_idx </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> np.argmin(X_digits_dist,</span><span style="color:#E36209;">axis</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">representative_digits_idx.shape</span></span>
<span class="line"><span style="color:#24292E;">(</span><span style="color:#005CC5;">50</span><span style="color:#24292E;">,)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">X_representative_digits </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> X_train[representative_digits_idx]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 现在让我们绘制这些代表性图像并手动标记它们：</span></span>
<span class="line"><span style="color:#24292E;">plt.figure(</span><span style="color:#E36209;">figsize</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">8</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#D73A49;">for</span><span style="color:#24292E;"> index, X_representative_digit </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">enumerate</span><span style="color:#24292E;">(X_representative_digits):</span></span>
<span class="line"><span style="color:#24292E;">    plt.subplot(k </span><span style="color:#D73A49;">//</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">10</span><span style="color:#24292E;">, index </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    plt.imshow(X_representative_digit.reshape(</span><span style="color:#005CC5;">8</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">8</span><span style="color:#24292E;">), </span><span style="color:#E36209;">cmap</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;binary&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">interpolation</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;bilinear&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    plt.axis(</span><span style="color:#032F62;">&#39;off&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">plt.show()</span></span></code></pre></div><p><img src="https://cdn.jsdelivr.net/gh/clint-sfy/blogcdn@master/python/ML/10.11.png" alt=""></p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#ADBAC7;">y_representative_digits </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> np.array([</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#6CB6FF;">4</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">8</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">6</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">8</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">3</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">7</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">7</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">9</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;">,</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#6CB6FF;">5</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">5</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">8</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">5</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">9</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">6</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">,</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">6</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">9</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">8</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">3</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">7</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">4</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">,</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#6CB6FF;">6</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">5</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">4</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">8</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">6</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">3</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">9</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;">,</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#6CB6FF;">4</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">9</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">4</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">7</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">6</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">3</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">])</span></span>
<span class="line"><span style="color:#768390;"># 现在我们有一个只有50个标记实例的数据集，它们中的每一个都是其集群的代表性图像，而不是完全随机的实例。 让我们看看性能是否更好：</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">log_reg </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> LogisticRegression(</span><span style="color:#F69D50;">random_state</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">42</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">log_reg.fit(X_representative_digits, y_representative_digits)</span></span>
<span class="line"><span style="color:#ADBAC7;">log_reg.score(X_test, y_test)</span></span>
<span class="line"><span style="color:#6CB6FF;">0.9244444444444444</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">y_representative_digits </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> np.array([</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">8</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">6</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">8</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">7</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">7</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">9</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">5</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">5</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">8</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">5</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">9</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">6</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">6</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">9</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">8</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">7</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">6</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">5</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">8</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">6</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">9</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">9</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">7</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">6</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">])</span></span>
<span class="line"><span style="color:#6A737D;"># 现在我们有一个只有50个标记实例的数据集，它们中的每一个都是其集群的代表性图像，而不是完全随机的实例。 让我们看看性能是否更好：</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">log_reg </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> LogisticRegression(</span><span style="color:#E36209;">random_state</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">42</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">log_reg.fit(X_representative_digits, y_representative_digits)</span></span>
<span class="line"><span style="color:#24292E;">log_reg.score(X_test, y_test)</span></span>
<span class="line"><span style="color:#005CC5;">0.9244444444444444</span></span></code></pre></div><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#768390;"># 但也许我们可以更进一步：如果我们将标签传播到同一群集中的所有其他实例，该怎么办？</span></span>
<span class="line"><span style="color:#ADBAC7;">y_train_propagated </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> np.empty(</span><span style="color:#6CB6FF;">len</span><span style="color:#ADBAC7;">(X_train), </span><span style="color:#F69D50;">dtype</span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;">np.int32)</span></span>
<span class="line"><span style="color:#F47067;">for</span><span style="color:#ADBAC7;"> i </span><span style="color:#F47067;">in</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">range</span><span style="color:#ADBAC7;">(k):</span></span>
<span class="line"><span style="color:#ADBAC7;">    y_train_propagated[kmeans.labels_</span><span style="color:#F47067;">==</span><span style="color:#ADBAC7;">i] </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> y_representative_digits[i]</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span></span>
<span class="line"><span style="color:#ADBAC7;">log_reg </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> LogisticRegression(</span><span style="color:#F69D50;">random_state</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">42</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">log_reg.fit(X_train, y_train_propagated)</span></span>
<span class="line"><span style="color:#ADBAC7;">LogisticRegression(</span><span style="color:#F69D50;">C</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">1.0</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">class_weight</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">None</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">dual</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">False</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">fit_intercept</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">True</span><span style="color:#ADBAC7;">,</span></span>
<span class="line"><span style="color:#ADBAC7;">          </span><span style="color:#F69D50;">intercept_scaling</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">max_iter</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">100</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">multi_class</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&#39;warn&#39;</span><span style="color:#ADBAC7;">,</span></span>
<span class="line"><span style="color:#ADBAC7;">          </span><span style="color:#F69D50;">n_jobs</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">None</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">penalty</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&#39;l2&#39;</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">random_state</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">42</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">solver</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&#39;warn&#39;</span><span style="color:#ADBAC7;">,</span></span>
<span class="line"><span style="color:#ADBAC7;">          </span><span style="color:#F69D50;">tol</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">0.0001</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">verbose</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">warm_start</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">False</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">log_reg.score(X_test, y_test)</span></span>
<span class="line"><span style="color:#6CB6FF;">0.9288888888888889</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># 但也许我们可以更进一步：如果我们将标签传播到同一群集中的所有其他实例，该怎么办？</span></span>
<span class="line"><span style="color:#24292E;">y_train_propagated </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> np.empty(</span><span style="color:#005CC5;">len</span><span style="color:#24292E;">(X_train), </span><span style="color:#E36209;">dtype</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">np.int32)</span></span>
<span class="line"><span style="color:#D73A49;">for</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">range</span><span style="color:#24292E;">(k):</span></span>
<span class="line"><span style="color:#24292E;">    y_train_propagated[kmeans.labels_</span><span style="color:#D73A49;">==</span><span style="color:#24292E;">i] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> y_representative_digits[i]</span></span>
<span class="line"><span style="color:#24292E;">    </span></span>
<span class="line"><span style="color:#24292E;">log_reg </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> LogisticRegression(</span><span style="color:#E36209;">random_state</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">42</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">log_reg.fit(X_train, y_train_propagated)</span></span>
<span class="line"><span style="color:#24292E;">LogisticRegression(</span><span style="color:#E36209;">C</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">1.0</span><span style="color:#24292E;">, </span><span style="color:#E36209;">class_weight</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">None</span><span style="color:#24292E;">, </span><span style="color:#E36209;">dual</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">False</span><span style="color:#24292E;">, </span><span style="color:#E36209;">fit_intercept</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">True</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#E36209;">intercept_scaling</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#E36209;">max_iter</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">100</span><span style="color:#24292E;">, </span><span style="color:#E36209;">multi_class</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;warn&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#E36209;">n_jobs</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">None</span><span style="color:#24292E;">, </span><span style="color:#E36209;">penalty</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;l2&#39;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">random_state</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">42</span><span style="color:#24292E;">, </span><span style="color:#E36209;">solver</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;warn&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#E36209;">tol</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0.0001</span><span style="color:#24292E;">, </span><span style="color:#E36209;">verbose</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, </span><span style="color:#E36209;">warm_start</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">False</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">log_reg.score(X_test, y_test)</span></span>
<span class="line"><span style="color:#005CC5;">0.9288888888888889</span></span></code></pre></div><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#768390;">#只选择前20个来试试</span></span>
<span class="line"><span style="color:#ADBAC7;">percentile_closest </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">20</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">X_cluster_dist </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> X_digits_dist[np.arange(</span><span style="color:#6CB6FF;">len</span><span style="color:#ADBAC7;">(X_train)), kmeans.labels_]</span></span>
<span class="line"><span style="color:#F47067;">for</span><span style="color:#ADBAC7;"> i </span><span style="color:#F47067;">in</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">range</span><span style="color:#ADBAC7;">(k):</span></span>
<span class="line"><span style="color:#ADBAC7;">    in_cluster </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> (kmeans.labels_ </span><span style="color:#F47067;">==</span><span style="color:#ADBAC7;"> i)</span></span>
<span class="line"><span style="color:#ADBAC7;">    cluster_dist </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> X_cluster_dist[in_cluster] </span><span style="color:#768390;">#选择属于当前簇的所有样本</span></span>
<span class="line"><span style="color:#ADBAC7;">    cutoff_distance </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> np.percentile(cluster_dist, percentile_closest) </span><span style="color:#768390;">#排序找到前20个</span></span>
<span class="line"><span style="color:#ADBAC7;">    above_cutoff </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> (X_cluster_dist </span><span style="color:#F47067;">&gt;</span><span style="color:#ADBAC7;"> cutoff_distance) </span><span style="color:#768390;"># False True结果</span></span>
<span class="line"><span style="color:#ADBAC7;">    X_cluster_dist[in_cluster </span><span style="color:#F47067;">&amp;</span><span style="color:#ADBAC7;"> above_cutoff] </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">-</span><span style="color:#6CB6FF;">1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">partially_propagated </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> (X_cluster_dist </span><span style="color:#F47067;">!=</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">-</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">X_train_partially_propagated </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> X_train[partially_propagated]</span></span>
<span class="line"><span style="color:#ADBAC7;">y_train_partially_propagated </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> y_train_propagated[partially_propagated]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">log_reg </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> LogisticRegression(</span><span style="color:#F69D50;">random_state</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">42</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">log_reg.fit(X_train_partially_propagated, y_train_partially_propagated)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">log_reg.score(X_test, y_test)</span></span>
<span class="line"><span style="color:#6CB6FF;">0.9422222222222222</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">#只选择前20个来试试</span></span>
<span class="line"><span style="color:#24292E;">percentile_closest </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">20</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">X_cluster_dist </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> X_digits_dist[np.arange(</span><span style="color:#005CC5;">len</span><span style="color:#24292E;">(X_train)), kmeans.labels_]</span></span>
<span class="line"><span style="color:#D73A49;">for</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">range</span><span style="color:#24292E;">(k):</span></span>
<span class="line"><span style="color:#24292E;">    in_cluster </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (kmeans.labels_ </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> i)</span></span>
<span class="line"><span style="color:#24292E;">    cluster_dist </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> X_cluster_dist[in_cluster] </span><span style="color:#6A737D;">#选择属于当前簇的所有样本</span></span>
<span class="line"><span style="color:#24292E;">    cutoff_distance </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> np.percentile(cluster_dist, percentile_closest) </span><span style="color:#6A737D;">#排序找到前20个</span></span>
<span class="line"><span style="color:#24292E;">    above_cutoff </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (X_cluster_dist </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> cutoff_distance) </span><span style="color:#6A737D;"># False True结果</span></span>
<span class="line"><span style="color:#24292E;">    X_cluster_dist[in_cluster </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> above_cutoff] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">partially_propagated </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (X_cluster_dist </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">X_train_partially_propagated </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> X_train[partially_propagated]</span></span>
<span class="line"><span style="color:#24292E;">y_train_partially_propagated </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> y_train_propagated[partially_propagated]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">log_reg </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> LogisticRegression(</span><span style="color:#E36209;">random_state</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">42</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">log_reg.fit(X_train_partially_propagated, y_train_partially_propagated)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">log_reg.score(X_test, y_test)</span></span>
<span class="line"><span style="color:#005CC5;">0.9422222222222222</span></span></code></pre></div><h3 id="dbscan" tabindex="-1">DBSCAN <a class="header-anchor" href="#dbscan" aria-label="Permalink to &quot;DBSCAN&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">from</span><span style="color:#ADBAC7;"> sklearn.datasets </span><span style="color:#F47067;">import</span><span style="color:#ADBAC7;"> make_moons</span></span>
<span class="line"><span style="color:#ADBAC7;">X, y </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> make_moons(</span><span style="color:#F69D50;">n_samples</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">1000</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">noise</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">0.05</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">random_state</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">42</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">plt.plot(X[:,</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">],X[:,</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">],</span><span style="color:#96D0FF;">&#39;b.&#39;</span><span style="color:#ADBAC7;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> sklearn.datasets </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> make_moons</span></span>
<span class="line"><span style="color:#24292E;">X, y </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> make_moons(</span><span style="color:#E36209;">n_samples</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">1000</span><span style="color:#24292E;">, </span><span style="color:#E36209;">noise</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0.05</span><span style="color:#24292E;">, </span><span style="color:#E36209;">random_state</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">42</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">plt.plot(X[:,</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">],X[:,</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">],</span><span style="color:#032F62;">&#39;b.&#39;</span><span style="color:#24292E;">)</span></span></code></pre></div><p><img src="https://cdn.jsdelivr.net/gh/clint-sfy/blogcdn@master/python/ML/10.12.png" alt=""></p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">from</span><span style="color:#ADBAC7;"> sklearn.cluster </span><span style="color:#F47067;">import</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">DBSCAN</span></span>
<span class="line"><span style="color:#ADBAC7;">dbscan </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> DBSCAN(</span><span style="color:#F69D50;">eps</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">0.05</span><span style="color:#ADBAC7;">,</span><span style="color:#F69D50;">min_samples</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">5</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">dbscan.fit(X)</span></span>
<span class="line"><span style="color:#ADBAC7;">DBSCAN(</span><span style="color:#F69D50;">algorithm</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&#39;auto&#39;</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">eps</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">0.05</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">leaf_size</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">30</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">metric</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&#39;euclidean&#39;</span><span style="color:#ADBAC7;">,</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F69D50;">metric_params</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">None</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">min_samples</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">5</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">n_jobs</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">None</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">p</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">None</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">dbscan.labels_[:</span><span style="color:#6CB6FF;">10</span><span style="color:#ADBAC7;">]</span></span>
<span class="line"><span style="color:#ADBAC7;">array([ </span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">,  </span><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;">, </span><span style="color:#F47067;">-</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">, </span><span style="color:#F47067;">-</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">,  </span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">,  </span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">,  </span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">,  </span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">,  </span><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;">,  </span><span style="color:#6CB6FF;">5</span><span style="color:#ADBAC7;">], </span><span style="color:#F69D50;">dtype</span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;">int64)</span></span>
<span class="line"><span style="color:#ADBAC7;">dbscan.core_sample_indices_[:</span><span style="color:#6CB6FF;">10</span><span style="color:#ADBAC7;">]</span></span>
<span class="line"><span style="color:#ADBAC7;">array([ </span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">,  </span><span style="color:#6CB6FF;">4</span><span style="color:#ADBAC7;">,  </span><span style="color:#6CB6FF;">5</span><span style="color:#ADBAC7;">,  </span><span style="color:#6CB6FF;">6</span><span style="color:#ADBAC7;">,  </span><span style="color:#6CB6FF;">7</span><span style="color:#ADBAC7;">,  </span><span style="color:#6CB6FF;">8</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">10</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">11</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">12</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">13</span><span style="color:#ADBAC7;">], </span><span style="color:#F69D50;">dtype</span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;">int64)</span></span>
<span class="line"><span style="color:#ADBAC7;">np.unique(dbscan.labels_) </span><span style="color:#768390;">#相当于看集合了</span></span>
<span class="line"><span style="color:#ADBAC7;">array([</span><span style="color:#F47067;">-</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">,  </span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">,  </span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">,  </span><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;">,  </span><span style="color:#6CB6FF;">3</span><span style="color:#ADBAC7;">,  </span><span style="color:#6CB6FF;">4</span><span style="color:#ADBAC7;">,  </span><span style="color:#6CB6FF;">5</span><span style="color:#ADBAC7;">,  </span><span style="color:#6CB6FF;">6</span><span style="color:#ADBAC7;">], </span><span style="color:#F69D50;">dtype</span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;">int64)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">dbscan2 </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> DBSCAN(</span><span style="color:#F69D50;">eps</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">0.2</span><span style="color:#ADBAC7;">,</span><span style="color:#F69D50;">min_samples</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">5</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">dbscan2.fit(X)</span></span>
<span class="line"><span style="color:#ADBAC7;">DBSCAN(</span><span style="color:#F69D50;">algorithm</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&#39;auto&#39;</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">eps</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">0.2</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">leaf_size</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">30</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">metric</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&#39;euclidean&#39;</span><span style="color:#ADBAC7;">,</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F69D50;">metric_params</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">None</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">min_samples</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">5</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">n_jobs</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">None</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">p</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">None</span><span style="color:#ADBAC7;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> sklearn.cluster </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">DBSCAN</span></span>
<span class="line"><span style="color:#24292E;">dbscan </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> DBSCAN(</span><span style="color:#E36209;">eps</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0.05</span><span style="color:#24292E;">,</span><span style="color:#E36209;">min_samples</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">5</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">dbscan.fit(X)</span></span>
<span class="line"><span style="color:#24292E;">DBSCAN(</span><span style="color:#E36209;">algorithm</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;auto&#39;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">eps</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0.05</span><span style="color:#24292E;">, </span><span style="color:#E36209;">leaf_size</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">30</span><span style="color:#24292E;">, </span><span style="color:#E36209;">metric</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;euclidean&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">metric_params</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">None</span><span style="color:#24292E;">, </span><span style="color:#E36209;">min_samples</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">5</span><span style="color:#24292E;">, </span><span style="color:#E36209;">n_jobs</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">None</span><span style="color:#24292E;">, </span><span style="color:#E36209;">p</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">None</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">dbscan.labels_[:</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">array([ </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">,  </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,  </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,  </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">,  </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">,  </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">,  </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,  </span><span style="color:#005CC5;">5</span><span style="color:#24292E;">], </span><span style="color:#E36209;">dtype</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">int64)</span></span>
<span class="line"><span style="color:#24292E;">dbscan.core_sample_indices_[:</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">array([ </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">,  </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">,  </span><span style="color:#005CC5;">5</span><span style="color:#24292E;">,  </span><span style="color:#005CC5;">6</span><span style="color:#24292E;">,  </span><span style="color:#005CC5;">7</span><span style="color:#24292E;">,  </span><span style="color:#005CC5;">8</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">10</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">11</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">12</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">13</span><span style="color:#24292E;">], </span><span style="color:#E36209;">dtype</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">int64)</span></span>
<span class="line"><span style="color:#24292E;">np.unique(dbscan.labels_) </span><span style="color:#6A737D;">#相当于看集合了</span></span>
<span class="line"><span style="color:#24292E;">array([</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,  </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">,  </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,  </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,  </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">,  </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">,  </span><span style="color:#005CC5;">5</span><span style="color:#24292E;">,  </span><span style="color:#005CC5;">6</span><span style="color:#24292E;">], </span><span style="color:#E36209;">dtype</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">int64)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">dbscan2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> DBSCAN(</span><span style="color:#E36209;">eps</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0.2</span><span style="color:#24292E;">,</span><span style="color:#E36209;">min_samples</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">5</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">dbscan2.fit(X)</span></span>
<span class="line"><span style="color:#24292E;">DBSCAN(</span><span style="color:#E36209;">algorithm</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;auto&#39;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">eps</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0.2</span><span style="color:#24292E;">, </span><span style="color:#E36209;">leaf_size</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">30</span><span style="color:#24292E;">, </span><span style="color:#E36209;">metric</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;euclidean&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">metric_params</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">None</span><span style="color:#24292E;">, </span><span style="color:#E36209;">min_samples</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">5</span><span style="color:#24292E;">, </span><span style="color:#E36209;">n_jobs</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">None</span><span style="color:#24292E;">, </span><span style="color:#E36209;">p</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">None</span><span style="color:#24292E;">)</span></span></code></pre></div><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">def</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">plot_dbscan</span><span style="color:#ADBAC7;">(dbscan, X, size, show_xlabels</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">True</span><span style="color:#ADBAC7;">, show_ylabels</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">True</span><span style="color:#ADBAC7;">):</span></span>
<span class="line"><span style="color:#ADBAC7;">    core_mask </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> np.zeros_like(dbscan.labels_, </span><span style="color:#F69D50;">dtype</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">bool</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">    core_mask[dbscan.core_sample_indices_] </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">True</span></span>
<span class="line"><span style="color:#ADBAC7;">    anomalies_mask </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> dbscan.labels_ </span><span style="color:#F47067;">==</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">-</span><span style="color:#6CB6FF;">1</span></span>
<span class="line"><span style="color:#ADBAC7;">    non_core_mask </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">~</span><span style="color:#ADBAC7;">(core_mask </span><span style="color:#F47067;">|</span><span style="color:#ADBAC7;"> anomalies_mask)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">    cores </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> dbscan.components_</span></span>
<span class="line"><span style="color:#ADBAC7;">    anomalies </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> X[anomalies_mask]</span></span>
<span class="line"><span style="color:#ADBAC7;">    non_cores </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> X[non_core_mask]</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span></span>
<span class="line"><span style="color:#ADBAC7;">    plt.scatter(cores[:, </span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">], cores[:, </span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">],</span></span>
<span class="line"><span style="color:#ADBAC7;">                </span><span style="color:#F69D50;">c</span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;">dbscan.labels_[core_mask], </span><span style="color:#F69D50;">marker</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&#39;o&#39;</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">s</span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;">size, </span><span style="color:#F69D50;">cmap</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&quot;Paired&quot;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">    plt.scatter(cores[:, </span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">], cores[:, </span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">], </span><span style="color:#F69D50;">marker</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&#39;*&#39;</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">s</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">20</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">c</span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;">dbscan.labels_[core_mask])</span></span>
<span class="line"><span style="color:#ADBAC7;">    plt.scatter(anomalies[:, </span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">], anomalies[:, </span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">],</span></span>
<span class="line"><span style="color:#ADBAC7;">                </span><span style="color:#F69D50;">c</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&quot;r&quot;</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">marker</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&quot;x&quot;</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">s</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">100</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">    plt.scatter(non_cores[:, </span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">], non_cores[:, </span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">], </span><span style="color:#F69D50;">c</span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;">dbscan.labels_[non_core_mask], </span><span style="color:#F69D50;">marker</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&quot;.&quot;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;"> show_xlabels:</span></span>
<span class="line"><span style="color:#ADBAC7;">        plt.xlabel(</span><span style="color:#96D0FF;">&quot;$x_1$&quot;</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">fontsize</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">14</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">else</span><span style="color:#ADBAC7;">:</span></span>
<span class="line"><span style="color:#ADBAC7;">        plt.tick_params(</span><span style="color:#F69D50;">labelbottom</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&#39;off&#39;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;"> show_ylabels:</span></span>
<span class="line"><span style="color:#ADBAC7;">        plt.ylabel(</span><span style="color:#96D0FF;">&quot;$x_2$&quot;</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">fontsize</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">14</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">rotation</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">else</span><span style="color:#ADBAC7;">:</span></span>
<span class="line"><span style="color:#ADBAC7;">        plt.tick_params(</span><span style="color:#F69D50;">labelleft</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&#39;off&#39;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">    plt.title(</span><span style="color:#96D0FF;">&quot;eps=</span><span style="color:#F47067;">{:.2f}</span><span style="color:#96D0FF;">, min_samples=</span><span style="color:#F47067;">{}</span><span style="color:#96D0FF;">&quot;</span><span style="color:#ADBAC7;">.format(dbscan.eps, dbscan.min_samples), </span><span style="color:#F69D50;">fontsize</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">14</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">plt.figure(</span><span style="color:#F69D50;">figsize</span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">9</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">3.2</span><span style="color:#ADBAC7;">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">plt.subplot(</span><span style="color:#6CB6FF;">121</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">plot_dbscan(dbscan, X, </span><span style="color:#F69D50;">size</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">100</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">plt.subplot(</span><span style="color:#6CB6FF;">122</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">plot_dbscan(dbscan2, X, </span><span style="color:#F69D50;">size</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">600</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">show_ylabels</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">False</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">plt.show()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">plot_dbscan</span><span style="color:#24292E;">(dbscan, X, size, show_xlabels</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">True</span><span style="color:#24292E;">, show_ylabels</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">True</span><span style="color:#24292E;">):</span></span>
<span class="line"><span style="color:#24292E;">    core_mask </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> np.zeros_like(dbscan.labels_, </span><span style="color:#E36209;">dtype</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">bool</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    core_mask[dbscan.core_sample_indices_] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">True</span></span>
<span class="line"><span style="color:#24292E;">    anomalies_mask </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> dbscan.labels_ </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#24292E;">    non_core_mask </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">(core_mask </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> anomalies_mask)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    cores </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> dbscan.components_</span></span>
<span class="line"><span style="color:#24292E;">    anomalies </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> X[anomalies_mask]</span></span>
<span class="line"><span style="color:#24292E;">    non_cores </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> X[non_core_mask]</span></span>
<span class="line"><span style="color:#24292E;">    </span></span>
<span class="line"><span style="color:#24292E;">    plt.scatter(cores[:, </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">], cores[:, </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#E36209;">c</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">dbscan.labels_[core_mask], </span><span style="color:#E36209;">marker</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;o&#39;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">s</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">size, </span><span style="color:#E36209;">cmap</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;Paired&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    plt.scatter(cores[:, </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">], cores[:, </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">], </span><span style="color:#E36209;">marker</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;*&#39;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">s</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">20</span><span style="color:#24292E;">, </span><span style="color:#E36209;">c</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">dbscan.labels_[core_mask])</span></span>
<span class="line"><span style="color:#24292E;">    plt.scatter(anomalies[:, </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">], anomalies[:, </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#E36209;">c</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;r&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">marker</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;x&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">s</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">100</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    plt.scatter(non_cores[:, </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">], non_cores[:, </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">], </span><span style="color:#E36209;">c</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">dbscan.labels_[non_core_mask], </span><span style="color:#E36209;">marker</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;.&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> show_xlabels:</span></span>
<span class="line"><span style="color:#24292E;">        plt.xlabel(</span><span style="color:#032F62;">&quot;$x_1$&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">fontsize</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">14</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">else</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">        plt.tick_params(</span><span style="color:#E36209;">labelbottom</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;off&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> show_ylabels:</span></span>
<span class="line"><span style="color:#24292E;">        plt.ylabel(</span><span style="color:#032F62;">&quot;$x_2$&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">fontsize</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">14</span><span style="color:#24292E;">, </span><span style="color:#E36209;">rotation</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">else</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">        plt.tick_params(</span><span style="color:#E36209;">labelleft</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;off&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    plt.title(</span><span style="color:#032F62;">&quot;eps=</span><span style="color:#005CC5;">{</span><span style="color:#D73A49;">:.2f</span><span style="color:#005CC5;">}</span><span style="color:#032F62;">, min_samples=</span><span style="color:#005CC5;">{}</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">.format(dbscan.eps, dbscan.min_samples), </span><span style="color:#E36209;">fontsize</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">14</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">plt.figure(</span><span style="color:#E36209;">figsize</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">9</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">3.2</span><span style="color:#24292E;">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">plt.subplot(</span><span style="color:#005CC5;">121</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">plot_dbscan(dbscan, X, </span><span style="color:#E36209;">size</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">100</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">plt.subplot(</span><span style="color:#005CC5;">122</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">plot_dbscan(dbscan2, X, </span><span style="color:#E36209;">size</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">600</span><span style="color:#24292E;">, </span><span style="color:#E36209;">show_ylabels</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">False</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">plt.show()</span></span></code></pre></div><p><img src="https://cdn.jsdelivr.net/gh/clint-sfy/blogcdn@master/python/ML/10.13.png" alt=""></p>`,57);function m(s,g,u,h,b,k){const o=t,e=F("ClientOnly");return l(),r("div",null,[_,y(e,null,{default:C(()=>{var n,a;return[(((n=s.$frontmatter)==null?void 0:n.aside)??!0)&&(((a=s.$frontmatter)==null?void 0:a.showArticleMetadata)??!0)?(l(),D(o,{key:0,article:s.$frontmatter},null,8,["article"])):B("",!0)]}),_:1}),d])}const w=c(E,[["render",m]]);export{x as __pageData,w as default};
