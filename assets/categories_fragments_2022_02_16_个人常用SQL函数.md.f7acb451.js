import{_ as y}from"./chunks/ArticleMetadata.e10718d6.js";import{_ as d,v as l,b as A,F as t,L as p,E as o,O as h,R as C,M as e,C as E,B as D}from"./chunks/framework.2aeb816e.js";import"./chunks/md5.772bbdf1.js";const q=JSON.parse('{"title":"个人常用 SQL 函数","description":"","frontmatter":{"title":"个人常用 SQL 函数","author":"查尔斯","date":"2022/02/16 15:43","isTop":true,"isOriginal":false,"categories":["碎片化知识点"],"tags":["SQL","SQL函数"]},"headers":[],"relativePath":"categories/fragments/2022/02/16/个人常用SQL函数.md","filePath":"categories/fragments/2022/02/16/个人常用SQL函数.md","lastUpdated":1691397650000}'),F={name:"categories/fragments/2022/02/16/个人常用SQL函数.md"},m={id:"个人常用-sql-函数",tabindex:"-1"},u=t("a",{class:"header-anchor",href:"#个人常用-sql-函数","aria-label":'Permalink to "个人常用 SQL 函数 <Badge text="持续更新" type="warning" />"'},"​",-1),g=C(`<h2 id="时间函数" tabindex="-1">时间函数 <a class="header-anchor" href="#时间函数" aria-label="Permalink to &quot;时间函数&quot;">​</a></h2><h3 id="获取当前时间-mysql" tabindex="-1">获取当前时间（MySQL） <a class="header-anchor" href="#获取当前时间-mysql" aria-label="Permalink to &quot;获取当前时间（MySQL）&quot;">​</a></h3><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#ADBAC7;"># 输出格式为：yyyy</span><span style="color:#F47067;">-</span><span style="color:#ADBAC7;">MM</span><span style="color:#F47067;">-</span><span style="color:#ADBAC7;">dd HH:mm:ss</span></span>
<span class="line"><span style="color:#F47067;">NOW</span><span style="color:#ADBAC7;">();</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;"># 输出格式为：yyyy</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">MM</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">dd HH:mm:ss</span></span>
<span class="line"><span style="color:#D73A49;">NOW</span><span style="color:#24292E;">();</span></span></code></pre></div><h3 id="获取当前时间秒-mysql" tabindex="-1">获取当前时间秒（MySQL） <a class="header-anchor" href="#获取当前时间秒-mysql" aria-label="Permalink to &quot;获取当前时间秒（MySQL）&quot;">​</a></h3><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#ADBAC7;"># 从 1970年1月1日 开始到现在的秒数</span></span>
<span class="line"><span style="color:#ADBAC7;">UNIX_TIMESTAMP();</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;"># 从 1970年1月1日 开始到现在的秒数</span></span>
<span class="line"><span style="color:#24292E;">UNIX_TIMESTAMP();</span></span></code></pre></div><h3 id="计算两个时间之间的间隔-mysql" tabindex="-1">计算两个时间之间的间隔（MySQL） <a class="header-anchor" href="#计算两个时间之间的间隔-mysql" aria-label="Permalink to &quot;计算两个时间之间的间隔（MySQL）&quot;">​</a></h3><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#ADBAC7;"># unit 可选为FRAC_SECOND 毫秒、</span><span style="color:#F47067;">SECOND</span><span style="color:#ADBAC7;"> 秒、</span><span style="color:#F47067;">MINUTE</span><span style="color:#ADBAC7;"> 分钟、</span><span style="color:#F47067;">HOUR</span><span style="color:#ADBAC7;"> 小时、</span><span style="color:#F47067;">DAY</span><span style="color:#ADBAC7;"> 天、</span><span style="color:#F47067;">WEEK</span><span style="color:#ADBAC7;"> 星期、</span><span style="color:#F47067;">MONTH</span><span style="color:#ADBAC7;"> 月、</span><span style="color:#F47067;">QUARTER</span><span style="color:#ADBAC7;"> 季度、</span><span style="color:#F47067;">YEAR</span><span style="color:#ADBAC7;"> 年</span></span>
<span class="line"><span style="color:#ADBAC7;">TIMESTAMPDIFF(unit, datetime_expr1, datetime_expr2)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;"># unit 可选为FRAC_SECOND 毫秒、</span><span style="color:#D73A49;">SECOND</span><span style="color:#24292E;"> 秒、</span><span style="color:#D73A49;">MINUTE</span><span style="color:#24292E;"> 分钟、</span><span style="color:#D73A49;">HOUR</span><span style="color:#24292E;"> 小时、</span><span style="color:#D73A49;">DAY</span><span style="color:#24292E;"> 天、</span><span style="color:#D73A49;">WEEK</span><span style="color:#24292E;"> 星期、</span><span style="color:#D73A49;">MONTH</span><span style="color:#24292E;"> 月、</span><span style="color:#D73A49;">QUARTER</span><span style="color:#24292E;"> 季度、</span><span style="color:#D73A49;">YEAR</span><span style="color:#24292E;"> 年</span></span>
<span class="line"><span style="color:#24292E;">TIMESTAMPDIFF(unit, datetime_expr1, datetime_expr2)</span></span></code></pre></div><h2 id="字符串函数" tabindex="-1">字符串函数 <a class="header-anchor" href="#字符串函数" aria-label="Permalink to &quot;字符串函数&quot;">​</a></h2><h3 id="拼接字符串-mysql" tabindex="-1">拼接字符串（MySQL） <a class="header-anchor" href="#拼接字符串-mysql" aria-label="Permalink to &quot;拼接字符串（MySQL）&quot;">​</a></h3><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#ADBAC7;"># 将多个字符串拼接在一起</span></span>
<span class="line"><span style="color:#6CB6FF;">CONCAT</span><span style="color:#ADBAC7;">(str1, str2, ...)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;"># 将多个字符串拼接在一起</span></span>
<span class="line"><span style="color:#005CC5;">CONCAT</span><span style="color:#24292E;">(str1, str2, ...)</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">笔者说</p><p>这个函数看起来平平无奇，但实际用起来，可不只是真香。你可能会在 MyBatis 中解决 SQL 注入的时候用到它，还可能在一些 “奇怪” 的场景用到它。</p></div><h4 id="清空数据库中的所有表数据" tabindex="-1">清空数据库中的所有表数据 <a class="header-anchor" href="#清空数据库中的所有表数据" aria-label="Permalink to &quot;清空数据库中的所有表数据&quot;">​</a></h4><p>清空单表数据很简单。</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">TRUNCATE</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">TABLE</span><span style="color:#ADBAC7;"> 表名;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">TRUNCATE</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">TABLE</span><span style="color:#24292E;"> 表名;</span></span></code></pre></div><p>但是，如果现在有 100 + 张表？你当然不会一个一个的去 <code>TRUNCATE</code>，但 MySQL 又没有提供该功能。那你可以用用下面的方法。</p><ol><li><p>查询该数据库下的所有表，利用 <code>CONCAT()</code> 函数将 <code>TRUNCATE</code> 语句拼接起来</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F69D50;">SELECT</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#F69D50;">CONCAT(</span><span style="color:#F69D50;">&#39;TRUNCATE TABLE &#39;</span><span style="color:#F69D50;">,</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">TABLE_NAME,</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">&#39;;&#39;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#F69D50;">FROM</span><span style="color:#ADBAC7;"> </span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#F69D50;">information_schema.TABLES</span></span>
<span class="line"><span style="color:#F69D50;">WHERE</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">TABLE_SCHEMA</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">&#39;数据库名&#39;</span><span style="color:#ADBAC7;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">SELECT</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">CONCAT(</span><span style="color:#6F42C1;">&#39;TRUNCATE TABLE &#39;</span><span style="color:#6F42C1;">,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">TABLE_NAME,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;;&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#6F42C1;">FROM</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">information_schema.TABLES</span></span>
<span class="line"><span style="color:#6F42C1;">WHERE</span><span style="color:#24292E;"> </span><span style="color:#032F62;">TABLE_SCHEMA</span><span style="color:#24292E;"> </span><span style="color:#032F62;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;数据库名&#39;</span><span style="color:#24292E;">;</span></span></code></pre></div></li><li><p>将执行结果复制，直接执行即可</p></li></ol><h4 id="删除数据库中的所有表" tabindex="-1">删除数据库中的所有表 <a class="header-anchor" href="#删除数据库中的所有表" aria-label="Permalink to &quot;删除数据库中的所有表&quot;">​</a></h4><p>删除单表很简单。</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">DROP</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">TABLE</span><span style="color:#ADBAC7;"> 表名;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">DROP</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">TABLE</span><span style="color:#24292E;"> 表名;</span></span></code></pre></div><p>但是，如果现在有 100 + 张表？你当然不会一个一个的去 <code>DROP</code>，但 MySQL 又没有提供该功能。那你可以用用下面的方法。</p><ol><li><p>查询该数据库下的所有表，利用 <code>CONCAT()</code> 函数将 <code>DROP</code> 语句拼接起来</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F69D50;">SELECT</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#F69D50;">CONCAT(</span><span style="color:#F69D50;">&#39;DROP TABLE IF EXISTS &#39;</span><span style="color:#F69D50;">,</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">TABLE_NAME,</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">&#39;;&#39;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#F69D50;">FROM</span><span style="color:#ADBAC7;"> </span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#F69D50;">information_schema.TABLES</span></span>
<span class="line"><span style="color:#F69D50;">WHERE</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">TABLE_SCHEMA</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">&#39;数据库名&#39;</span><span style="color:#ADBAC7;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">SELECT</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">CONCAT(</span><span style="color:#6F42C1;">&#39;DROP TABLE IF EXISTS &#39;</span><span style="color:#6F42C1;">,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">TABLE_NAME,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;;&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#6F42C1;">FROM</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">information_schema.TABLES</span></span>
<span class="line"><span style="color:#6F42C1;">WHERE</span><span style="color:#24292E;"> </span><span style="color:#032F62;">TABLE_SCHEMA</span><span style="color:#24292E;"> </span><span style="color:#032F62;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;数据库名&#39;</span><span style="color:#24292E;">;</span></span></code></pre></div></li><li><p>将执行结果复制，直接执行即可</p></li></ol>`,21);function B(s,T,b,v,_,L){const c=e("Badge"),r=y,i=e("ClientOnly");return l(),A("div",null,[t("h1",m,[p("个人常用 SQL 函数 "),o(c,{text:"持续更新",type:"warning"}),p(),u]),o(i,null,{default:h(()=>{var a,n;return[(((a=s.$frontmatter)==null?void 0:a.aside)??!0)&&(((n=s.$frontmatter)==null?void 0:n.showArticleMetadata)??!0)?(l(),E(r,{key:0,article:s.$frontmatter},null,8,["article"])):D("",!0)]}),_:1}),g])}const O=d(F,[["render",B]]);export{q as __pageData,O as default};
