import{_ as p}from"./chunks/ArticleMetadata.1_--bNMz.js";import{_ as t,D as e,o as n,c as r,I as d,w as A,k as h,a as g,R as D,b as y,e as C}from"./chunks/framework.Dn7lIAzt.js";import"./chunks/md5.vgHT5zCM.js";const _=JSON.parse('{"title":"多线程","description":"","frontmatter":{"title":"多线程","author":"阿源","date":"2023/08/11 12:00","categories":["QT快速入门"],"tags":["C++","QT5"]},"headers":[],"relativePath":"courses/yuanzi/02-QT应用开发和部署/11-多线程.md","filePath":"courses/yuanzi/02-QT应用开发和部署/11-多线程.md","lastUpdated":1713341239000}'),B={name:"courses/yuanzi/02-QT应用开发和部署/11-多线程.md"},F=h("h1",{id:"正点原子qt之多线程",tabindex:"-1"},[g("正点原子QT之多线程 "),h("a",{class:"header-anchor",href:"#正点原子qt之多线程","aria-label":'Permalink to "正点原子QT之多线程"'},"​")],-1),c=D(`<h2 id="_13-多线程" tabindex="-1">13. 多线程 <a class="header-anchor" href="#_13-多线程" aria-label="Permalink to &quot;13. 多线程&quot;">​</a></h2><h3 id="_13-1-继承-qthread-的线程" tabindex="-1">13.1 继承 QThread 的线程 <a class="header-anchor" href="#_13-1-继承-qthread-的线程" aria-label="Permalink to &quot;13.1 继承 QThread 的线程&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span>继承 QThread 是创建线程的一个普通方法。 其中创建的线程只有 run()方法在线程里的。其他类内定义的方法都在主线程内。</span></span>
<span class="line"><span>主线程内有很多方法在主线程内， 但是子线程，只有 run()方法是在子线程里的。 run()方法是继承于 QThread 类的方法，用户需要重写这个方法，一般是把耗时的操作写在这个 run()方法里面。</span></span></code></pre></div><h3 id="案例" tabindex="-1">案例： <a class="header-anchor" href="#案例" aria-label="Permalink to &quot;案例：&quot;">​</a></h3><p>例 05_qthread_example1 ， 继 承 QThread 类 的 线 程 （ 难 度 ： 一 般 ）。 项 目 路 径 为Qt/2/05_qthread_example1。 本例通过 QThread 类继承线程，然后在 MainWindow 类里使用。通过点击一个按钮开启线程。 当线程执行完成时，会发送 resultReady(const QString &amp;s)信号给主线程。</p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">#ifndef</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> MAINWINDOW_H</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> MAINWINDOW_H</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &lt;QMainWindow&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &lt;QThread&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &lt;QDebug&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &lt;QPushButton&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">/* 使用下面声明的WorkerThread线程类 */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> WorkerThread</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> MainWindow</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> QMainWindow</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    Q_OBJECT</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">public:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">    MainWindow</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">QWidget</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> *</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">parent</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> nullptr</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">    ~MainWindow</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">private:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    /* 在MainWindow类里声明对象 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    WorkerThread </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">workerThread;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    /* 声明一个按钮，使用此按钮点击后开启线程 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    QPushButton </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">pushButton;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">private slots:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    /* 槽函数，用于接收线程发送的信号 */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> handleResults</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> QString</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> &amp;</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">result</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    /* 点击按钮开启线程 */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> pushButtonClicked</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">/* 新建一个WorkerThread类继承于QThread */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> WorkerThread</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> QThread</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    /* 用到信号槽即需要此宏定义 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    Q_OBJECT</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">public:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">    WorkerThread</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">QWidget</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> *</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">parent</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> nullptr</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">        Q_UNUSED</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(parent);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    /* 重写run方法，继承QThread的类，只有run方法是在新的线程里 */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> run</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">override</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        QString result </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;线程开启成功&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">        /* 这里写上比较耗时的操作 */</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">        // ...</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">        // 延时2s，把延时2s当作耗时操作</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">        sleep</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">        /* 发送结果准备好的信号 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        emit </span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">resultReady</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(result);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">signals:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    /* 声明一个信号，译结果准确好的信号 */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> resultReady</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> QString</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> &amp;</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">s</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">#endif</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> // MAINWINDOW_H</span></span></code></pre></div><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;mainwindow.h&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">MainWindow</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">MainWindow</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(QWidget </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">parent)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    : </span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">QMainWindow</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(parent)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    /* 设置位置与大小 */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">setGeometry</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">800</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">480</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    /* 对象实例化 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    pushButton </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> QPushButton</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    workerThread </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> WorkerThread</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    /* 按钮设置大小与文本 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    pushButton-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">resize</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">40</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    pushButton-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">setText</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;开启线程&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    /* 信号槽连接 */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">    connect</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(workerThread, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">SIGNAL</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">resultReady</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(QString)),</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">            this</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">SLOT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">handleResults</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(QString)));</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">    connect</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(pushButton, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">SIGNAL</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">clicked</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">()),</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">            this</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">SLOT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">pushButtonClicked</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">()));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">MainWindow</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">::</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">~</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">MainWindow</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    /* 进程退出，注意本例run()方法没写循环，此方法需要有循环才生效 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    workerThread-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">quit</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    /* 阻塞等待2000ms检查一次进程是否已经退出 */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (workerThread-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">wait</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">50</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">        qDebug</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&lt;&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;线程已经结束！&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&lt;&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">endl;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> MainWindow</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">handleResults</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> QString</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> &amp;</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">result</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    /* 打印出线程发送过来的结果 */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">    qDebug</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&lt;&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">result</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&lt;&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">endl;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> MainWindow</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">pushButtonClicked</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    /* 检查线程是否在运行，如果没有则开始运行 */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">workerThread-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">isRunning</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">())</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        workerThread-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">start</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><h3 id="_13-2-继承-qobject-的线程" tabindex="-1">13.2 继承 QObject 的线程 <a class="header-anchor" href="#_13-2-继承-qobject-的线程" aria-label="Permalink to &quot;13.2 继承 QObject 的线程&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span>继承 QThread 类是创建线程的一种方法，另一种就是继承QObject 类。继承 QObject 类更加灵活。 它通过 QObject::moveToThread()方法，将一个 QObeject的类转移到一个线程里执行。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>首先我们写一个类继承 QObject，通过 QObject::moveToThread()方法将它移到一个 QThread 线程里执行。那么可以通过主线程发送信号去调用 QThread 线程的方法如上图的 fun4()， fun5()等等。这些方法都是在 QThread 线程里执行的。</span></span></code></pre></div><h3 id="案例-1" tabindex="-1">案例： <a class="header-anchor" href="#案例-1" aria-label="Permalink to &quot;案例：&quot;">​</a></h3><p>例 06_qthread_example2 ， 继 承 QObject 类 的 线 程 （ 难 度 ： 一 般 ） 。本例通过 QObject 类继承线程，然后在 MainWindow 类里使用。通过点击一个按钮开启线程。 另一个按钮点击关闭线程。 另外通过加锁的操作来安全的终止一个线程。（我们可以通过 QMutexLocker 可以安全的使用 QMutex 以免忘记解锁。）</p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">#ifndef</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> MAINWINDOW_H</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> MAINWINDOW_H</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &lt;QMainWindow&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &lt;QThread&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &lt;QDebug&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &lt;QPushButton&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &lt;QMutexLocker&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &lt;QMutex&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">/* 工人类 */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Worker</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> MainWindow</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> QMainWindow</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    Q_OBJECT</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">public:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">    MainWindow</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">QWidget</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> *</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">parent</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> nullptr</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">    ~MainWindow</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">private:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    /* 开始线程按钮 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    QPushButton </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">pushButton1;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    /* 打断线程按钮 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    QPushButton </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">pushButton2;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    /* 全局线程 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    QThread workerThread;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    /* 工人类 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    Worker </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">worker;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">private slots:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    /* 按钮1点击开启线程 */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> pushButton1Clicked</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    /* 按钮2点击打断线程 */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> pushButton2Clicked</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    /* 用于接收工人是否在工作的信号 */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> handleResults</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> QString</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> &amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">signals:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    /* 工人开始工作（做些耗时的操作 ） */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> startWork</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> QString</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> &amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">/* Worker类，这个类声明了doWork1函数，将整个Worker类移至线程workerThread */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Worker</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> QObject</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    Q_OBJECT</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">private:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    /* 互斥锁 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    QMutex lock;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    /* 标志位 */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    bool</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> isCanRun;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">public slots:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    /* 耗时的工作都放在槽函数下，工人可以有多份不同的工作，但是每次只能去做一份 */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> doWork1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> QString</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> &amp;</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">parameter</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">        /* 标志位为真 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        isCanRun </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">        /* 死循环 */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">        while</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">            /* 此{}作用是QMutexLocker与lock的作用范围，获取锁后，</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">             * 运行完成后即解锁 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">            {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                QMutexLocker </span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">locker</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">lock);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">                /* 如果标志位不为真 */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">                if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">isCanRun) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">                    /* 跳出循环 */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">                    break</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">                }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">            }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">            /* 使用QThread里的延时函数，当作一个普通延时 */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">            QThread</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">sleep</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">            emit </span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">resultReady</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(parameter </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;doWork1函数&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">        /* doWork1运行完成，发送信号 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        emit </span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">resultReady</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;打断doWork1函数&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    // void doWork2();...</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">public:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    /* 打断线程（注意此方法不能放在槽函数下） */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> stopWork</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">() {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">        qDebug</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&lt;&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;打断线程&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&lt;&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">endl;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">        /* 获取锁后，运行完成后即解锁 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        QMutexLocker </span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">locker</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">lock);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        isCanRun </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">signals:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    /* 工人工作函数状态的信号 */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> resultReady</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> QString</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> &amp;</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">result</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">};</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">#endif</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> // MAINWINDOW_H</span></span></code></pre></div><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;mainwindow.h&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">MainWindow</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">MainWindow</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(QWidget </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">parent)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    : </span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">QMainWindow</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(parent)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    /* 设置显示位置与大小 */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">setGeometry</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">800</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">480</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    pushButton1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> QPushButton</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    pushButton2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> QPushButton</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    /* 设置按钮的位置大小 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    pushButton1-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">setGeometry</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">300</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">200</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">80</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">40</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    pushButton2-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">setGeometry</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">400</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">200</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">80</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">40</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    /* 设置两个按钮的文本 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    pushButton1-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">setText</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;开启线程&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    pushButton2-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">setText</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;打断线程&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    /* 工人类实例化 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    worker </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> new</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> Worker;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    /* 将worker类移至线程workerThread */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    worker-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">moveToThread</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">workerThread);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    /* 信号槽连接 */</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    /* 线程完成销毁对象 */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">    connect</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">workerThread, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">SIGNAL</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">finished</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">()),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">            worker, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">SLOT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">deleteLater</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">()));</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">    connect</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">workerThread, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">SIGNAL</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">finished</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">()),</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">            &amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">workerThread, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">SLOT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">deleteLater</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">()));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    /* 发送开始工作的信号，开始工作 */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">    connect</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">SIGNAL</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">startWork</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(QString)),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">            worker, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">SLOT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">doWork1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(QString)));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    /* 接收到worker发送过来的信号 */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">    connect</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(worker, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">SIGNAL</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">resultReady</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(QString)),</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">            this</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">SLOT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">handleResults</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(QString)));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    /* 点击按钮开始线程 */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">    connect</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(pushButton1, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">SIGNAL</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">clicked</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">()),</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">            this</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">SLOT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">pushButton1Clicked</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">()));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    /* 点击按钮打断线程 */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">    connect</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(pushButton2, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">SIGNAL</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">clicked</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">()),</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">            this</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">SLOT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">pushButton2Clicked</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">()));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">MainWindow</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">::</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">~</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">MainWindow</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    /* 打断线程再退出 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    worker-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">stopWork</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    workerThread.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">quit</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    /* 阻塞线程2000ms，判断线程是否结束 */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (workerThread.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">wait</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">2000</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">        qDebug</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&lt;&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;线程结束&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&lt;&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">endl;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> MainWindow</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">pushButton1Clicked</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    /* 字符串常量 */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    const</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> QString str </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;正在运行&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    /* 判断线程是否在运行 */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">workerThread.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">isRunning</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">()) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">        /* 开启线程 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        workerThread.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">start</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    /* 发送正在运行的信号，线程收到信号后执行后返回线程耗时函数 + 此字符串 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    emit </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">startWork</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(str);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> MainWindow</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">pushButton2Clicked</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    /* 如果线程在运行 */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(workerThread.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">isRunning</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">()) {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">        /* 停止耗时工作，跳出耗时工作的循环 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        worker-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">stopWork</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> MainWindow</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">handleResults</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> QString</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> &amp;</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;"> results</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    /* 打印线程的状态 */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">    qDebug</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&lt;&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;线程的状态：&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&lt;&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">results</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&lt;&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">endl;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div>`,13);function o(s,E,u,Q,m,T){const l=p,k=e("ClientOnly");return n(),r("div",null,[F,d(k,null,{default:A(()=>{var i,a;return[(((i=s.$frontmatter)==null?void 0:i.aside)??!0)&&(((a=s.$frontmatter)==null?void 0:a.showArticleMetadata)??!0)?(n(),y(l,{key:0,article:s.$frontmatter},null,8,["article"])):C("",!0)]}),_:1}),c])}const v=t(B,[["render",o]]);export{_ as __pageData,v as default};
