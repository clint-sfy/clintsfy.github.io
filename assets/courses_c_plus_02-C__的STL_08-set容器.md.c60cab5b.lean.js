import{_ as t}from"./chunks/ArticleMetadata.e10718d6.js";import{_ as c,v as l,b as r,E as y,O as C,F as p,L as A,R as i,M as F,C as D,B}from"./chunks/framework.2aeb816e.js";import"./chunks/md5.772bbdf1.js";const P=JSON.parse('{"title":"C++的set容器","description":"","frontmatter":{"title":"C++的set容器","author":"阿源","date":"2023/02/13 21:29","categories":["C++基础快速入门"],"tags":["C++","C++基础","STL"]},"headers":[],"relativePath":"courses/c_plus/02-C++的STL/08-set容器.md","filePath":"courses/c_plus/02-C++的STL/08-set容器.md","lastUpdated":1691397650000}'),E={name:"courses/c_plus/02-C++的STL/08-set容器.md"},d=p("h1",{id:"c-的set容器",tabindex:"-1"},[A("C++的set容器 "),p("a",{class:"header-anchor",href:"#c-的set容器","aria-label":'Permalink to "C++的set容器"'},"​")],-1),u=i(`<h2 id="set容器" tabindex="-1">set容器 <a class="header-anchor" href="#set容器" aria-label="Permalink to &quot;set容器&quot;">​</a></h2><h3 id="_1、set容器概述" tabindex="-1">1、set容器概述 <a class="header-anchor" href="#_1、set容器概述" aria-label="Permalink to &quot;1、set容器概述&quot;">​</a></h3><p><img src="https://cdn.staticaly.com/gh/clint-sfy/blogcdn@master/img/c_plus/STL7.png" alt=""></p><p>​ 但是set容器 只有键值，在插入数据的时候 自动根据 键值 排序。不允许有相同的键值。不能修改set容器的元素值，会破坏set的数据结构。set容器的迭代器是只读迭代器（const_iterator）。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#adbac7;">1 3.7.2.1 set构造函数</span></span>
<span class="line"><span style="color:#adbac7;">2 set&lt;T&gt; st;//set默认构造函数：</span></span>
<span class="line"><span style="color:#adbac7;">3 mulitset&lt;T&gt; mst; //multiset默认构造函数:</span></span>
<span class="line"><span style="color:#adbac7;">4 set(const set &amp;st);//拷贝构造函数</span></span>
<span class="line"><span style="color:#adbac7;"></span></span>
<span class="line"><span style="color:#adbac7;">5 3.7.2.2 set赋值操作</span></span>
<span class="line"><span style="color:#adbac7;">6 set&amp; operator=(const set &amp;st);//重载等号操作符</span></span>
<span class="line"><span style="color:#adbac7;">7 swap(st);//交换两个集合容器</span></span>
<span class="line"><span style="color:#adbac7;"></span></span>
<span class="line"><span style="color:#adbac7;">8 3.7.2.3 set大小操作</span></span>
<span class="line"><span style="color:#adbac7;">9 size();//返回容器中元素的数目</span></span>
<span class="line"><span style="color:#adbac7;">10 empty();//判断容器是否为空</span></span>
<span class="line"><span style="color:#adbac7;"></span></span>
<span class="line"><span style="color:#adbac7;">11 3.7.2.4 set插入和删除操作</span></span>
<span class="line"><span style="color:#adbac7;">12 insert(elem);//在容器中插入元素。</span></span>
<span class="line"><span style="color:#adbac7;">13 clear();//清除所有元素</span></span>
<span class="line"><span style="color:#adbac7;">14 erase(pos);//删除pos迭代器所指的元素，返回下一个元素的迭代器。</span></span>
<span class="line"><span style="color:#adbac7;">15 erase(beg, end);//删除区间[beg,end)的所有元素 ，返回下一个元素的迭代器。</span></span>
<span class="line"><span style="color:#adbac7;">16 erase(elem);//删除容器中值为elem的元素。</span></span>
<span class="line"><span style="color:#adbac7;"></span></span>
<span class="line"><span style="color:#adbac7;">17 3.7.2.5 set查找操作</span></span>
<span class="line"><span style="color:#adbac7;">18 find(key);//查找键key是否存在,若存在，返回该键的元素的迭代器；若不存在，返回set.end();</span></span>
<span class="line"><span style="color:#adbac7;">19 count(key);//查找键key的元素个数</span></span>
<span class="line"><span style="color:#adbac7;">20 lower_bound(keyElem);//返回第一个key&gt;=keyElem元素的迭代器。</span></span>
<span class="line"><span style="color:#adbac7;">21 upper_bound(keyElem);//返回第一个key&gt;keyElem元素的迭代器。</span></span>
<span class="line"><span style="color:#adbac7;">22 equal_range(keyElem);//返回容器中key与keyElem相等的上下限的两个迭代器</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">1 3.7.2.1 set构造函数</span></span>
<span class="line"><span style="color:#24292e;">2 set&lt;T&gt; st;//set默认构造函数：</span></span>
<span class="line"><span style="color:#24292e;">3 mulitset&lt;T&gt; mst; //multiset默认构造函数:</span></span>
<span class="line"><span style="color:#24292e;">4 set(const set &amp;st);//拷贝构造函数</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">5 3.7.2.2 set赋值操作</span></span>
<span class="line"><span style="color:#24292e;">6 set&amp; operator=(const set &amp;st);//重载等号操作符</span></span>
<span class="line"><span style="color:#24292e;">7 swap(st);//交换两个集合容器</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">8 3.7.2.3 set大小操作</span></span>
<span class="line"><span style="color:#24292e;">9 size();//返回容器中元素的数目</span></span>
<span class="line"><span style="color:#24292e;">10 empty();//判断容器是否为空</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">11 3.7.2.4 set插入和删除操作</span></span>
<span class="line"><span style="color:#24292e;">12 insert(elem);//在容器中插入元素。</span></span>
<span class="line"><span style="color:#24292e;">13 clear();//清除所有元素</span></span>
<span class="line"><span style="color:#24292e;">14 erase(pos);//删除pos迭代器所指的元素，返回下一个元素的迭代器。</span></span>
<span class="line"><span style="color:#24292e;">15 erase(beg, end);//删除区间[beg,end)的所有元素 ，返回下一个元素的迭代器。</span></span>
<span class="line"><span style="color:#24292e;">16 erase(elem);//删除容器中值为elem的元素。</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">17 3.7.2.5 set查找操作</span></span>
<span class="line"><span style="color:#24292e;">18 find(key);//查找键key是否存在,若存在，返回该键的元素的迭代器；若不存在，返回set.end();</span></span>
<span class="line"><span style="color:#24292e;">19 count(key);//查找键key的元素个数</span></span>
<span class="line"><span style="color:#24292e;">20 lower_bound(keyElem);//返回第一个key&gt;=keyElem元素的迭代器。</span></span>
<span class="line"><span style="color:#24292e;">21 upper_bound(keyElem);//返回第一个key&gt;keyElem元素的迭代器。</span></span>
<span class="line"><span style="color:#24292e;">22 equal_range(keyElem);//返回容器中key与keyElem相等的上下限的两个迭代器</span></span></code></pre></div><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;"> #include </span><span style="color:#F47067;">&lt;</span><span style="color:#ADBAC7;">iostream</span><span style="color:#F47067;">&gt;</span></span>
<span class="line"><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;"> #include</span><span style="color:#F47067;">&lt;</span><span style="color:#ADBAC7;">set</span><span style="color:#F47067;">&gt;</span></span>
<span class="line"><span style="color:#6CB6FF;">3</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">using</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">namespace</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">std</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#6CB6FF;">4</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">void</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">printSetInt</span><span style="color:#ADBAC7;">(set</span><span style="color:#F47067;">&lt;int&gt;</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">&amp;</span><span style="color:#ADBAC7;">s)</span></span>
<span class="line"><span style="color:#6CB6FF;">5</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#6CB6FF;">6</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">set</span><span style="color:#ADBAC7;">&lt;</span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;">&gt;::iterator it;</span></span>
<span class="line"><span style="color:#6CB6FF;">7</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">for</span><span style="color:#ADBAC7;">(it</span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;">s.</span><span style="color:#DCBDFB;">begin</span><span style="color:#ADBAC7;">(); it</span><span style="color:#F47067;">!=</span><span style="color:#ADBAC7;">s.</span><span style="color:#DCBDFB;">end</span><span style="color:#ADBAC7;">();it</span><span style="color:#F47067;">++</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#6CB6FF;">8</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#6CB6FF;">9</span><span style="color:#ADBAC7;"> cout</span><span style="color:#F47067;">&lt;&lt;*</span><span style="color:#ADBAC7;">it</span><span style="color:#F47067;">&lt;&lt;</span><span style="color:#96D0FF;">&quot; &quot;</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#6CB6FF;">10</span><span style="color:#ADBAC7;"> }</span></span>
<span class="line"><span style="color:#6CB6FF;">11</span><span style="color:#ADBAC7;"> cout</span><span style="color:#F47067;">&lt;&lt;</span><span style="color:#ADBAC7;">endl;</span></span>
<span class="line"><span style="color:#6CB6FF;">12</span><span style="color:#ADBAC7;"> }</span></span>
<span class="line"><span style="color:#6CB6FF;">13</span></span>
<span class="line"><span style="color:#6CB6FF;">14</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">void</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">test01</span><span style="color:#ADBAC7;">()</span></span>
<span class="line"><span style="color:#6CB6FF;">15</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#6CB6FF;">16</span><span style="color:#ADBAC7;"> set</span><span style="color:#F47067;">&lt;int&gt;</span><span style="color:#ADBAC7;"> s1;</span></span>
<span class="line"><span style="color:#6CB6FF;">17</span><span style="color:#ADBAC7;"> s1.</span><span style="color:#DCBDFB;">insert</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">30</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#6CB6FF;">18</span><span style="color:#ADBAC7;"> s1.</span><span style="color:#DCBDFB;">insert</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">10</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#6CB6FF;">19</span><span style="color:#ADBAC7;"> s1.</span><span style="color:#DCBDFB;">insert</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">20</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#6CB6FF;">20</span><span style="color:#ADBAC7;"> s1.</span><span style="color:#DCBDFB;">insert</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">20</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#6CB6FF;">21</span><span style="color:#ADBAC7;"> s1.</span><span style="color:#DCBDFB;">insert</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">40</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#6CB6FF;">22</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">printSetInt</span><span style="color:#ADBAC7;">(s1);</span></span>
<span class="line"><span style="color:#6CB6FF;">23</span><span style="color:#ADBAC7;"> }</span></span>
<span class="line"><span style="color:#6CB6FF;">24</span></span>
<span class="line"><span style="color:#6CB6FF;">25</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">main</span><span style="color:#ADBAC7;">(</span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;"> argc, </span><span style="color:#F47067;">char</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">*</span><span style="color:#ADBAC7;">argv[])</span></span>
<span class="line"><span style="color:#6CB6FF;">26</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#6CB6FF;">27</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">test01</span><span style="color:#ADBAC7;">();</span></span>
<span class="line"><span style="color:#6CB6FF;">28</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#6CB6FF;">29</span><span style="color:#ADBAC7;"> }</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">1</span><span style="color:#24292E;"> #include </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">iostream</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#005CC5;">2</span><span style="color:#24292E;"> #include</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">set</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#005CC5;">3</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">using</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">namespace</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#005CC5;">4</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">printSetInt</span><span style="color:#24292E;">(set</span><span style="color:#D73A49;">&lt;int&gt;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;">s)</span></span>
<span class="line"><span style="color:#005CC5;">5</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#005CC5;">6</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">set</span><span style="color:#24292E;">&lt;</span><span style="color:#D73A49;">int</span><span style="color:#24292E;">&gt;::iterator it;</span></span>
<span class="line"><span style="color:#005CC5;">7</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">for</span><span style="color:#24292E;">(it</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">s.</span><span style="color:#6F42C1;">begin</span><span style="color:#24292E;">(); it</span><span style="color:#D73A49;">!=</span><span style="color:#24292E;">s.</span><span style="color:#6F42C1;">end</span><span style="color:#24292E;">();it</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#005CC5;">8</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#005CC5;">9</span><span style="color:#24292E;"> cout</span><span style="color:#D73A49;">&lt;&lt;*</span><span style="color:#24292E;">it</span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#032F62;">&quot; &quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#005CC5;">10</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#005CC5;">11</span><span style="color:#24292E;"> cout</span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;">endl;</span></span>
<span class="line"><span style="color:#005CC5;">12</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#005CC5;">13</span></span>
<span class="line"><span style="color:#005CC5;">14</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">test01</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#005CC5;">15</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#005CC5;">16</span><span style="color:#24292E;"> set</span><span style="color:#D73A49;">&lt;int&gt;</span><span style="color:#24292E;"> s1;</span></span>
<span class="line"><span style="color:#005CC5;">17</span><span style="color:#24292E;"> s1.</span><span style="color:#6F42C1;">insert</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">30</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#005CC5;">18</span><span style="color:#24292E;"> s1.</span><span style="color:#6F42C1;">insert</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#005CC5;">19</span><span style="color:#24292E;"> s1.</span><span style="color:#6F42C1;">insert</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">20</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#005CC5;">20</span><span style="color:#24292E;"> s1.</span><span style="color:#6F42C1;">insert</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">20</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#005CC5;">21</span><span style="color:#24292E;"> s1.</span><span style="color:#6F42C1;">insert</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">40</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#005CC5;">22</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">printSetInt</span><span style="color:#24292E;">(s1);</span></span>
<span class="line"><span style="color:#005CC5;">23</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#005CC5;">24</span></span>
<span class="line"><span style="color:#005CC5;">25</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> argc, </span><span style="color:#D73A49;">char</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">argv[])</span></span>
<span class="line"><span style="color:#005CC5;">26</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#005CC5;">27</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">test01</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#005CC5;">28</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#005CC5;">29</span><span style="color:#24292E;"> }</span></span></code></pre></div><h3 id="_2、更改set容器的排序规则-定义set容器时-修改" tabindex="-1">2、更改set容器的排序规则（定义set容器时 修改) <a class="header-anchor" href="#_2、更改set容器的排序规则-定义set容器时-修改" aria-label="Permalink to &quot;2、更改set容器的排序规则（定义set容器时 修改)&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#adbac7;">1 set&lt;int,排序规则类&gt; s1;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">1 set&lt;int,排序规则类&gt; s1;</span></span></code></pre></div><p>一般都是通过 “仿函数” 修改set容器的排序规则。</p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;"> #include </span><span style="color:#F47067;">&lt;</span><span style="color:#ADBAC7;">iostream</span><span style="color:#F47067;">&gt;</span></span>
<span class="line"><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;"> #include</span><span style="color:#F47067;">&lt;</span><span style="color:#ADBAC7;">set</span><span style="color:#F47067;">&gt;</span></span>
<span class="line"><span style="color:#6CB6FF;">3</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">using</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">namespace</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">std</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6CB6FF;">4</span><span style="color:#768390;"> //仿函数</span></span>
<span class="line"><span style="color:#6CB6FF;">5</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">class</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">MyCompare</span></span>
<span class="line"><span style="color:#ADBAC7;">6 {</span></span>
<span class="line"><span style="color:#6CB6FF;">7</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">public:</span></span>
<span class="line"><span style="color:#6CB6FF;">8</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">bool</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">operator</span><span style="color:#F69D50;">()</span><span style="color:#ADBAC7;">(</span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">v1</span><span style="color:#ADBAC7;">, </span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">v2</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#6CB6FF;">9</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#6CB6FF;">10</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> v1</span><span style="color:#F47067;">&gt;</span><span style="color:#ADBAC7;">v2;</span></span>
<span class="line"><span style="color:#6CB6FF;">11</span><span style="color:#ADBAC7;"> }</span></span>
<span class="line"><span style="color:#6CB6FF;">12</span><span style="color:#ADBAC7;"> };</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6CB6FF;">13</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">void</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">printSetInt</span><span style="color:#ADBAC7;">(set</span><span style="color:#F47067;">&lt;int&gt;</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">&amp;</span><span style="color:#ADBAC7;">s)</span></span>
<span class="line"><span style="color:#6CB6FF;">14</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#6CB6FF;">15</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">set</span><span style="color:#ADBAC7;">&lt;</span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;">&gt;::iterator it;</span></span>
<span class="line"><span style="color:#6CB6FF;">16</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">for</span><span style="color:#ADBAC7;">(it</span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;">s.</span><span style="color:#DCBDFB;">begin</span><span style="color:#ADBAC7;">(); it</span><span style="color:#F47067;">!=</span><span style="color:#ADBAC7;">s.</span><span style="color:#DCBDFB;">end</span><span style="color:#ADBAC7;">();it</span><span style="color:#F47067;">++</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#6CB6FF;">17</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#6CB6FF;">18</span><span style="color:#ADBAC7;"> cout</span><span style="color:#F47067;">&lt;&lt;*</span><span style="color:#ADBAC7;">it</span><span style="color:#F47067;">&lt;&lt;</span><span style="color:#96D0FF;">&quot; &quot;</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#6CB6FF;">19</span><span style="color:#ADBAC7;"> }</span></span>
<span class="line"><span style="color:#6CB6FF;">20</span><span style="color:#ADBAC7;"> cout</span><span style="color:#F47067;">&lt;&lt;</span><span style="color:#ADBAC7;">endl;</span></span>
<span class="line"><span style="color:#6CB6FF;">21</span><span style="color:#ADBAC7;"> }</span></span>
<span class="line"><span style="color:#6CB6FF;">22</span></span>
<span class="line"><span style="color:#6CB6FF;">23</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">void</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">printSetInt</span><span style="color:#ADBAC7;">(set</span><span style="color:#F47067;">&lt;int</span><span style="color:#ADBAC7;">,MyCompare</span><span style="color:#F47067;">&gt;</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">&amp;</span><span style="color:#ADBAC7;">s)</span></span>
<span class="line"><span style="color:#6CB6FF;">24</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#6CB6FF;">25</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">set</span><span style="color:#ADBAC7;">&lt;</span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;">,</span><span style="color:#F69D50;">MyCompare</span><span style="color:#ADBAC7;">&gt;::iterator it;</span></span>
<span class="line"><span style="color:#6CB6FF;">26</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">for</span><span style="color:#ADBAC7;">(it</span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;">s.</span><span style="color:#DCBDFB;">begin</span><span style="color:#ADBAC7;">(); it</span><span style="color:#F47067;">!=</span><span style="color:#ADBAC7;">s.</span><span style="color:#DCBDFB;">end</span><span style="color:#ADBAC7;">();it</span><span style="color:#F47067;">++</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#6CB6FF;">27</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#6CB6FF;">28</span><span style="color:#ADBAC7;"> cout</span><span style="color:#F47067;">&lt;&lt;*</span><span style="color:#ADBAC7;">it</span><span style="color:#F47067;">&lt;&lt;</span><span style="color:#96D0FF;">&quot; &quot;</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#6CB6FF;">29</span><span style="color:#ADBAC7;"> }</span></span>
<span class="line"><span style="color:#6CB6FF;">30</span><span style="color:#ADBAC7;"> cout</span><span style="color:#F47067;">&lt;&lt;</span><span style="color:#ADBAC7;">endl;</span></span>
<span class="line"><span style="color:#6CB6FF;">31</span><span style="color:#ADBAC7;"> }</span></span>
<span class="line"><span style="color:#6CB6FF;">32</span></span>
<span class="line"><span style="color:#6CB6FF;">33</span></span>
<span class="line"><span style="color:#6CB6FF;">34</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">void</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">test01</span><span style="color:#ADBAC7;">()</span></span>
<span class="line"><span style="color:#6CB6FF;">35</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#6CB6FF;">36</span><span style="color:#ADBAC7;"> set</span><span style="color:#F47067;">&lt;int</span><span style="color:#ADBAC7;">,MyCompare</span><span style="color:#F47067;">&gt;</span><span style="color:#ADBAC7;"> s1;</span></span>
<span class="line"><span style="color:#6CB6FF;">37</span><span style="color:#ADBAC7;"> s1.</span><span style="color:#DCBDFB;">insert</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">30</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#6CB6FF;">38</span><span style="color:#ADBAC7;"> s1.</span><span style="color:#DCBDFB;">insert</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">10</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#6CB6FF;">39</span><span style="color:#ADBAC7;"> s1.</span><span style="color:#DCBDFB;">insert</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">20</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#6CB6FF;">40</span><span style="color:#ADBAC7;"> s1.</span><span style="color:#DCBDFB;">insert</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">20</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#6CB6FF;">41</span><span style="color:#ADBAC7;"> s1.</span><span style="color:#DCBDFB;">insert</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">40</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#6CB6FF;">42</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">printSetInt</span><span style="color:#ADBAC7;">(s1);</span><span style="color:#768390;">  // 40 30 20 10</span></span>
<span class="line"><span style="color:#6CB6FF;">43</span><span style="color:#ADBAC7;"> }</span></span>
<span class="line"><span style="color:#6CB6FF;">44</span></span>
<span class="line"><span style="color:#6CB6FF;">45</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">main</span><span style="color:#ADBAC7;">(</span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;"> argc, </span><span style="color:#F47067;">char</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">*</span><span style="color:#ADBAC7;">argv[])</span></span>
<span class="line"><span style="color:#6CB6FF;">46</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#6CB6FF;">47</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">test01</span><span style="color:#ADBAC7;">();</span></span>
<span class="line"><span style="color:#6CB6FF;">48</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#6CB6FF;">49</span><span style="color:#ADBAC7;"> }</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">1</span><span style="color:#24292E;"> #include </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">iostream</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#005CC5;">2</span><span style="color:#24292E;"> #include</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">set</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#005CC5;">3</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">using</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">namespace</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#005CC5;">4</span><span style="color:#6A737D;"> //仿函数</span></span>
<span class="line"><span style="color:#005CC5;">5</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">MyCompare</span></span>
<span class="line"><span style="color:#24292E;">6 {</span></span>
<span class="line"><span style="color:#005CC5;">7</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">public:</span></span>
<span class="line"><span style="color:#005CC5;">8</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">operator</span><span style="color:#6F42C1;">()</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">v1</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">v2</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#005CC5;">9</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#005CC5;">10</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> v1</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">v2;</span></span>
<span class="line"><span style="color:#005CC5;">11</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#005CC5;">12</span><span style="color:#24292E;"> };</span></span>
<span class="line"></span>
<span class="line"><span style="color:#005CC5;">13</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">printSetInt</span><span style="color:#24292E;">(set</span><span style="color:#D73A49;">&lt;int&gt;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;">s)</span></span>
<span class="line"><span style="color:#005CC5;">14</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#005CC5;">15</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">set</span><span style="color:#24292E;">&lt;</span><span style="color:#D73A49;">int</span><span style="color:#24292E;">&gt;::iterator it;</span></span>
<span class="line"><span style="color:#005CC5;">16</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">for</span><span style="color:#24292E;">(it</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">s.</span><span style="color:#6F42C1;">begin</span><span style="color:#24292E;">(); it</span><span style="color:#D73A49;">!=</span><span style="color:#24292E;">s.</span><span style="color:#6F42C1;">end</span><span style="color:#24292E;">();it</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#005CC5;">17</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#005CC5;">18</span><span style="color:#24292E;"> cout</span><span style="color:#D73A49;">&lt;&lt;*</span><span style="color:#24292E;">it</span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#032F62;">&quot; &quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#005CC5;">19</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#005CC5;">20</span><span style="color:#24292E;"> cout</span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;">endl;</span></span>
<span class="line"><span style="color:#005CC5;">21</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#005CC5;">22</span></span>
<span class="line"><span style="color:#005CC5;">23</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">printSetInt</span><span style="color:#24292E;">(set</span><span style="color:#D73A49;">&lt;int</span><span style="color:#24292E;">,MyCompare</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;">s)</span></span>
<span class="line"><span style="color:#005CC5;">24</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#005CC5;">25</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">set</span><span style="color:#24292E;">&lt;</span><span style="color:#D73A49;">int</span><span style="color:#24292E;">,</span><span style="color:#6F42C1;">MyCompare</span><span style="color:#24292E;">&gt;::iterator it;</span></span>
<span class="line"><span style="color:#005CC5;">26</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">for</span><span style="color:#24292E;">(it</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">s.</span><span style="color:#6F42C1;">begin</span><span style="color:#24292E;">(); it</span><span style="color:#D73A49;">!=</span><span style="color:#24292E;">s.</span><span style="color:#6F42C1;">end</span><span style="color:#24292E;">();it</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#005CC5;">27</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#005CC5;">28</span><span style="color:#24292E;"> cout</span><span style="color:#D73A49;">&lt;&lt;*</span><span style="color:#24292E;">it</span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#032F62;">&quot; &quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#005CC5;">29</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#005CC5;">30</span><span style="color:#24292E;"> cout</span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;">endl;</span></span>
<span class="line"><span style="color:#005CC5;">31</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#005CC5;">32</span></span>
<span class="line"><span style="color:#005CC5;">33</span></span>
<span class="line"><span style="color:#005CC5;">34</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">test01</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#005CC5;">35</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#005CC5;">36</span><span style="color:#24292E;"> set</span><span style="color:#D73A49;">&lt;int</span><span style="color:#24292E;">,MyCompare</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> s1;</span></span>
<span class="line"><span style="color:#005CC5;">37</span><span style="color:#24292E;"> s1.</span><span style="color:#6F42C1;">insert</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">30</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#005CC5;">38</span><span style="color:#24292E;"> s1.</span><span style="color:#6F42C1;">insert</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#005CC5;">39</span><span style="color:#24292E;"> s1.</span><span style="color:#6F42C1;">insert</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">20</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#005CC5;">40</span><span style="color:#24292E;"> s1.</span><span style="color:#6F42C1;">insert</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">20</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#005CC5;">41</span><span style="color:#24292E;"> s1.</span><span style="color:#6F42C1;">insert</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">40</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#005CC5;">42</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">printSetInt</span><span style="color:#24292E;">(s1);</span><span style="color:#6A737D;">  // 40 30 20 10</span></span>
<span class="line"><span style="color:#005CC5;">43</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#005CC5;">44</span></span>
<span class="line"><span style="color:#005CC5;">45</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> argc, </span><span style="color:#D73A49;">char</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">argv[])</span></span>
<span class="line"><span style="color:#005CC5;">46</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#005CC5;">47</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">test01</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#005CC5;">48</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#005CC5;">49</span><span style="color:#24292E;"> }</span></span></code></pre></div><h3 id="_3、如果set容器存放自定义数据-必须更改排序规则" tabindex="-1">3、如果set容器存放自定义数据 必须更改排序规则 <a class="header-anchor" href="#_3、如果set容器存放自定义数据-必须更改排序规则" aria-label="Permalink to &quot;3、如果set容器存放自定义数据 必须更改排序规则&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">class</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">Person</span></span>
<span class="line"><span style="color:#ADBAC7;">2 {</span></span>
<span class="line"><span style="color:#6CB6FF;">3</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">friend</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">class</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">MyComparePerson</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#6CB6FF;">4</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">friend</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">ostream</span><span style="color:#F47067;">&amp;</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">operator</span><span style="color:#F69D50;">&lt;&lt;</span><span style="color:#ADBAC7;">(</span><span style="color:#F69D50;">ostream</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">&amp;</span><span style="color:#F69D50;">out</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">Person</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">ob</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#6CB6FF;">5</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">private:</span></span>
<span class="line"><span style="color:#6CB6FF;">6</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;"> num;</span></span>
<span class="line"><span style="color:#6CB6FF;">7</span><span style="color:#ADBAC7;"> string name;</span></span>
<span class="line"><span style="color:#6CB6FF;">8</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">float</span><span style="color:#ADBAC7;"> score;</span></span>
<span class="line"><span style="color:#6CB6FF;">9</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">public:</span></span>
<span class="line"><span style="color:#6CB6FF;">10</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">Person</span><span style="color:#ADBAC7;">(){}</span></span>
<span class="line"><span style="color:#6CB6FF;">11</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">Person</span><span style="color:#ADBAC7;">(</span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;"> num,string name, </span><span style="color:#F47067;">float</span><span style="color:#ADBAC7;"> score)</span></span>
<span class="line"><span style="color:#6CB6FF;">12</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#6CB6FF;">13</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">this</span><span style="color:#ADBAC7;">‐</span><span style="color:#F47067;">&gt;</span><span style="color:#ADBAC7;">num </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> num;</span></span>
<span class="line"><span style="color:#6CB6FF;">14</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">this</span><span style="color:#ADBAC7;">‐</span><span style="color:#F47067;">&gt;</span><span style="color:#ADBAC7;">name </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> name;</span></span>
<span class="line"><span style="color:#6CB6FF;">15</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">this</span><span style="color:#ADBAC7;">‐</span><span style="color:#F47067;">&gt;</span><span style="color:#ADBAC7;">score </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> score;</span></span>
<span class="line"><span style="color:#6CB6FF;">16</span><span style="color:#ADBAC7;"> }</span></span>
<span class="line"><span style="color:#6CB6FF;">17</span><span style="color:#ADBAC7;"> };</span></span>
<span class="line"><span style="color:#6CB6FF;">18</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">ostream</span><span style="color:#F47067;">&amp;</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">operator</span><span style="color:#F69D50;">&lt;&lt;</span><span style="color:#ADBAC7;">(</span><span style="color:#F69D50;">ostream</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">&amp;</span><span style="color:#F69D50;">out</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">Person</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">ob</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#6CB6FF;">19</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#6CB6FF;">20</span><span style="color:#ADBAC7;"> out</span><span style="color:#F47067;">&lt;&lt;</span><span style="color:#ADBAC7;">ob.num</span><span style="color:#F47067;">&lt;&lt;</span><span style="color:#96D0FF;">&quot; &quot;</span><span style="color:#F47067;">&lt;&lt;</span><span style="color:#ADBAC7;">ob.name</span><span style="color:#F47067;">&lt;&lt;</span><span style="color:#96D0FF;">&quot; &quot;</span><span style="color:#F47067;">&lt;&lt;</span><span style="color:#ADBAC7;">ob.score</span><span style="color:#F47067;">&lt;&lt;</span><span style="color:#ADBAC7;">endl;</span></span>
<span class="line"><span style="color:#6CB6FF;">21</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> out;</span></span>
<span class="line"><span style="color:#6CB6FF;">22</span><span style="color:#ADBAC7;"> }</span></span>
<span class="line"><span style="color:#6CB6FF;">23</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span></span>
<span class="line"><span style="color:#6CB6FF;">24</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">class</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">MyComparePerson</span></span>
<span class="line"><span style="color:#ADBAC7;">25 {</span></span>
<span class="line"><span style="color:#6CB6FF;">26</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">public:</span></span>
<span class="line"><span style="color:#6CB6FF;">27</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">bool</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">operator</span><span style="color:#F69D50;">()</span><span style="color:#ADBAC7;">(</span><span style="color:#F69D50;">Person</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">ob1</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">Person</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">ob2</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#6CB6FF;">28</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#6CB6FF;">29</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> ob1.num </span><span style="color:#F47067;">&lt;</span><span style="color:#ADBAC7;"> ob2.num;</span></span>
<span class="line"><span style="color:#6CB6FF;">30</span><span style="color:#ADBAC7;"> }</span></span>
<span class="line"><span style="color:#6CB6FF;">31</span><span style="color:#ADBAC7;"> };</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6CB6FF;">32</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">void</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">printSetInt</span><span style="color:#ADBAC7;">(set</span><span style="color:#F47067;">&lt;</span><span style="color:#ADBAC7;">Person,MyComparePerson</span><span style="color:#F47067;">&gt;</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">&amp;</span><span style="color:#ADBAC7;">s)</span></span>
<span class="line"><span style="color:#6CB6FF;">33</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#6CB6FF;">34</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">set</span><span style="color:#ADBAC7;">&lt;</span><span style="color:#F69D50;">Person</span><span style="color:#ADBAC7;">,</span><span style="color:#F69D50;">MyComparePerson</span><span style="color:#ADBAC7;">&gt; ::iterator it;</span></span>
<span class="line"><span style="color:#6CB6FF;">35</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">for</span><span style="color:#ADBAC7;">(it</span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;">s.</span><span style="color:#DCBDFB;">begin</span><span style="color:#ADBAC7;">(); it</span><span style="color:#F47067;">!=</span><span style="color:#ADBAC7;">s.</span><span style="color:#DCBDFB;">end</span><span style="color:#ADBAC7;">();it</span><span style="color:#F47067;">++</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#6CB6FF;">36</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#6CB6FF;">37</span><span style="color:#ADBAC7;"> cout</span><span style="color:#F47067;">&lt;&lt;</span><span style="color:#ADBAC7;">(</span><span style="color:#F47067;">*</span><span style="color:#ADBAC7;">it);</span></span>
<span class="line"><span style="color:#6CB6FF;">38</span><span style="color:#ADBAC7;"> }</span></span>
<span class="line"><span style="color:#6CB6FF;">39</span><span style="color:#ADBAC7;"> cout</span><span style="color:#F47067;">&lt;&lt;</span><span style="color:#ADBAC7;">endl;</span></span>
<span class="line"><span style="color:#6CB6FF;">40</span><span style="color:#ADBAC7;"> }</span></span>
<span class="line"><span style="color:#6CB6FF;">41</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">void</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">test02</span><span style="color:#ADBAC7;">()</span></span>
<span class="line"><span style="color:#6CB6FF;">42</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#6CB6FF;">43</span><span style="color:#ADBAC7;"> set</span><span style="color:#F47067;">&lt;</span><span style="color:#ADBAC7;">Person,MyComparePerson</span><span style="color:#F47067;">&gt;</span><span style="color:#ADBAC7;"> s1;</span></span>
<span class="line"><span style="color:#6CB6FF;">44</span><span style="color:#ADBAC7;"> s1.</span><span style="color:#DCBDFB;">insert</span><span style="color:#ADBAC7;">(</span><span style="color:#DCBDFB;">Person</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">100</span><span style="color:#ADBAC7;">,</span><span style="color:#96D0FF;">&quot;lucy&quot;</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">88.8</span><span style="color:#F47067;">f</span><span style="color:#ADBAC7;">));</span></span>
<span class="line"><span style="color:#6CB6FF;">45</span><span style="color:#ADBAC7;"> s1.</span><span style="color:#DCBDFB;">insert</span><span style="color:#ADBAC7;">(</span><span style="color:#DCBDFB;">Person</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">104</span><span style="color:#ADBAC7;">,</span><span style="color:#96D0FF;">&quot;bob&quot;</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">99.8</span><span style="color:#F47067;">f</span><span style="color:#ADBAC7;">));</span></span>
<span class="line"><span style="color:#6CB6FF;">46</span><span style="color:#ADBAC7;"> s1.</span><span style="color:#DCBDFB;">insert</span><span style="color:#ADBAC7;">(</span><span style="color:#DCBDFB;">Person</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">103</span><span style="color:#ADBAC7;">,</span><span style="color:#96D0FF;">&quot;tom&quot;</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">77.8</span><span style="color:#F47067;">f</span><span style="color:#ADBAC7;">));</span></span>
<span class="line"><span style="color:#6CB6FF;">47</span><span style="color:#ADBAC7;"> s1.</span><span style="color:#DCBDFB;">insert</span><span style="color:#ADBAC7;">(</span><span style="color:#DCBDFB;">Person</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">101</span><span style="color:#ADBAC7;">,</span><span style="color:#96D0FF;">&quot;德玛&quot;</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">66.8</span><span style="color:#F47067;">f</span><span style="color:#ADBAC7;">));</span></span>
<span class="line"><span style="color:#6CB6FF;">48</span><span style="color:#ADBAC7;"> s1.</span><span style="color:#DCBDFB;">insert</span><span style="color:#ADBAC7;">(</span><span style="color:#DCBDFB;">Person</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">105</span><span style="color:#ADBAC7;">,</span><span style="color:#96D0FF;">&quot;寒冰&quot;</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">55.8</span><span style="color:#F47067;">f</span><span style="color:#ADBAC7;">));</span></span>
<span class="line"><span style="color:#6CB6FF;">49</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">printSetInt</span><span style="color:#ADBAC7;">(s1);</span></span>
<span class="line"><span style="color:#6CB6FF;">50</span><span style="color:#ADBAC7;"> }</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">1</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Person</span></span>
<span class="line"><span style="color:#24292E;">2 {</span></span>
<span class="line"><span style="color:#005CC5;">3</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">friend</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">MyComparePerson</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#005CC5;">4</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">friend</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ostream</span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">operator</span><span style="color:#6F42C1;">&lt;&lt;</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">ostream</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#E36209;">out</span><span style="color:#24292E;">, </span><span style="color:#6F42C1;">Person</span><span style="color:#24292E;"> </span><span style="color:#E36209;">ob</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#005CC5;">5</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">private:</span></span>
<span class="line"><span style="color:#005CC5;">6</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> num;</span></span>
<span class="line"><span style="color:#005CC5;">7</span><span style="color:#24292E;"> string name;</span></span>
<span class="line"><span style="color:#005CC5;">8</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">float</span><span style="color:#24292E;"> score;</span></span>
<span class="line"><span style="color:#005CC5;">9</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">public:</span></span>
<span class="line"><span style="color:#005CC5;">10</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Person</span><span style="color:#24292E;">(){}</span></span>
<span class="line"><span style="color:#005CC5;">11</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Person</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> num,string name, </span><span style="color:#D73A49;">float</span><span style="color:#24292E;"> score)</span></span>
<span class="line"><span style="color:#005CC5;">12</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#005CC5;">13</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">‐</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">num </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> num;</span></span>
<span class="line"><span style="color:#005CC5;">14</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">‐</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">name </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> name;</span></span>
<span class="line"><span style="color:#005CC5;">15</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">‐</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">score </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> score;</span></span>
<span class="line"><span style="color:#005CC5;">16</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#005CC5;">17</span><span style="color:#24292E;"> };</span></span>
<span class="line"><span style="color:#005CC5;">18</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ostream</span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">operator</span><span style="color:#6F42C1;">&lt;&lt;</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">ostream</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#E36209;">out</span><span style="color:#24292E;">, </span><span style="color:#6F42C1;">Person</span><span style="color:#24292E;"> </span><span style="color:#E36209;">ob</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#005CC5;">19</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#005CC5;">20</span><span style="color:#24292E;"> out</span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;">ob.num</span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#032F62;">&quot; &quot;</span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;">ob.name</span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#032F62;">&quot; &quot;</span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;">ob.score</span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;">endl;</span></span>
<span class="line"><span style="color:#005CC5;">21</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> out;</span></span>
<span class="line"><span style="color:#005CC5;">22</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#005CC5;">23</span></span>
<span class="line"><span style="color:#24292E;">    </span></span>
<span class="line"><span style="color:#005CC5;">24</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">MyComparePerson</span></span>
<span class="line"><span style="color:#24292E;">25 {</span></span>
<span class="line"><span style="color:#005CC5;">26</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">public:</span></span>
<span class="line"><span style="color:#005CC5;">27</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">operator</span><span style="color:#6F42C1;">()</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">Person</span><span style="color:#24292E;"> </span><span style="color:#E36209;">ob1</span><span style="color:#24292E;">, </span><span style="color:#6F42C1;">Person</span><span style="color:#24292E;"> </span><span style="color:#E36209;">ob2</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#005CC5;">28</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#005CC5;">29</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> ob1.num </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> ob2.num;</span></span>
<span class="line"><span style="color:#005CC5;">30</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#005CC5;">31</span><span style="color:#24292E;"> };</span></span>
<span class="line"></span>
<span class="line"><span style="color:#005CC5;">32</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">printSetInt</span><span style="color:#24292E;">(set</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">Person,MyComparePerson</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;">s)</span></span>
<span class="line"><span style="color:#005CC5;">33</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#005CC5;">34</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">set</span><span style="color:#24292E;">&lt;</span><span style="color:#6F42C1;">Person</span><span style="color:#24292E;">,</span><span style="color:#6F42C1;">MyComparePerson</span><span style="color:#24292E;">&gt; ::iterator it;</span></span>
<span class="line"><span style="color:#005CC5;">35</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">for</span><span style="color:#24292E;">(it</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">s.</span><span style="color:#6F42C1;">begin</span><span style="color:#24292E;">(); it</span><span style="color:#D73A49;">!=</span><span style="color:#24292E;">s.</span><span style="color:#6F42C1;">end</span><span style="color:#24292E;">();it</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#005CC5;">36</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#005CC5;">37</span><span style="color:#24292E;"> cout</span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">*</span><span style="color:#24292E;">it);</span></span>
<span class="line"><span style="color:#005CC5;">38</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#005CC5;">39</span><span style="color:#24292E;"> cout</span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;">endl;</span></span>
<span class="line"><span style="color:#005CC5;">40</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#005CC5;">41</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">test02</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#005CC5;">42</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#005CC5;">43</span><span style="color:#24292E;"> set</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">Person,MyComparePerson</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> s1;</span></span>
<span class="line"><span style="color:#005CC5;">44</span><span style="color:#24292E;"> s1.</span><span style="color:#6F42C1;">insert</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">Person</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">100</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;lucy&quot;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">88.8</span><span style="color:#D73A49;">f</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#005CC5;">45</span><span style="color:#24292E;"> s1.</span><span style="color:#6F42C1;">insert</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">Person</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">104</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;bob&quot;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">99.8</span><span style="color:#D73A49;">f</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#005CC5;">46</span><span style="color:#24292E;"> s1.</span><span style="color:#6F42C1;">insert</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">Person</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">103</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;tom&quot;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">77.8</span><span style="color:#D73A49;">f</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#005CC5;">47</span><span style="color:#24292E;"> s1.</span><span style="color:#6F42C1;">insert</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">Person</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">101</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;德玛&quot;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">66.8</span><span style="color:#D73A49;">f</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#005CC5;">48</span><span style="color:#24292E;"> s1.</span><span style="color:#6F42C1;">insert</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">Person</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">105</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;寒冰&quot;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">55.8</span><span style="color:#D73A49;">f</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#005CC5;">49</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">printSetInt</span><span style="color:#24292E;">(s1);</span></span>
<span class="line"><span style="color:#005CC5;">50</span><span style="color:#24292E;"> }</span></span></code></pre></div><h3 id="_4、set的api" tabindex="-1">4、set的API <a class="header-anchor" href="#_4、set的api" aria-label="Permalink to &quot;4、set的API&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">void</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">test03</span><span style="color:#ADBAC7;">()</span></span>
<span class="line"><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#6CB6FF;">3</span><span style="color:#ADBAC7;"> set</span><span style="color:#F47067;">&lt;int&gt;</span><span style="color:#ADBAC7;"> s1;</span></span>
<span class="line"><span style="color:#6CB6FF;">4</span><span style="color:#ADBAC7;"> s1.</span><span style="color:#DCBDFB;">insert</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">10</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#6CB6FF;">5</span><span style="color:#ADBAC7;"> s1.</span><span style="color:#DCBDFB;">insert</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">30</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#6CB6FF;">6</span><span style="color:#ADBAC7;"> s1.</span><span style="color:#DCBDFB;">insert</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">50</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#6CB6FF;">7</span><span style="color:#ADBAC7;"> s1.</span><span style="color:#DCBDFB;">insert</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">70</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#6CB6FF;">8</span><span style="color:#ADBAC7;"> s1.</span><span style="color:#DCBDFB;">insert</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">90</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#6CB6FF;">9</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">printSetInt</span><span style="color:#ADBAC7;">(s1);</span></span>
<span class="line"><span style="color:#6CB6FF;">10</span></span>
<span class="line"><span style="color:#6CB6FF;">11</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">set</span><span style="color:#ADBAC7;">&lt;</span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;">&gt;::const_iterator ret;</span></span>
<span class="line"><span style="color:#6CB6FF;">12</span><span style="color:#ADBAC7;"> ret </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> s1.</span><span style="color:#DCBDFB;">find</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">50</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#6CB6FF;">13</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;">(ret </span><span style="color:#F47067;">!=</span><span style="color:#ADBAC7;"> s1.</span><span style="color:#DCBDFB;">end</span><span style="color:#ADBAC7;">())</span></span>
<span class="line"><span style="color:#6CB6FF;">14</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#6CB6FF;">15</span><span style="color:#ADBAC7;"> cout</span><span style="color:#F47067;">&lt;&lt;</span><span style="color:#96D0FF;">&quot;找到的结果:&quot;</span><span style="color:#F47067;">&lt;&lt;*</span><span style="color:#ADBAC7;">ret</span><span style="color:#F47067;">&lt;&lt;</span><span style="color:#ADBAC7;">endl;</span></span>
<span class="line"><span style="color:#6CB6FF;">16</span><span style="color:#ADBAC7;"> }</span></span>
<span class="line"><span style="color:#6CB6FF;">17</span></span>
<span class="line"><span style="color:#6CB6FF;">18</span><span style="color:#768390;"> //count(key);//查找键key的元素个数 set容器的结果只能是0或1</span></span>
<span class="line"><span style="color:#6CB6FF;">19</span><span style="color:#ADBAC7;"> cout</span><span style="color:#F47067;">&lt;&lt;</span><span style="color:#ADBAC7;">s1.</span><span style="color:#DCBDFB;">count</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">50</span><span style="color:#ADBAC7;">)</span><span style="color:#F47067;">&lt;&lt;</span><span style="color:#ADBAC7;">endl;</span></span>
<span class="line"><span style="color:#6CB6FF;">20</span><span style="color:#ADBAC7;"> }</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">1</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">test03</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#005CC5;">2</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#005CC5;">3</span><span style="color:#24292E;"> set</span><span style="color:#D73A49;">&lt;int&gt;</span><span style="color:#24292E;"> s1;</span></span>
<span class="line"><span style="color:#005CC5;">4</span><span style="color:#24292E;"> s1.</span><span style="color:#6F42C1;">insert</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#005CC5;">5</span><span style="color:#24292E;"> s1.</span><span style="color:#6F42C1;">insert</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">30</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#005CC5;">6</span><span style="color:#24292E;"> s1.</span><span style="color:#6F42C1;">insert</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">50</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#005CC5;">7</span><span style="color:#24292E;"> s1.</span><span style="color:#6F42C1;">insert</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">70</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#005CC5;">8</span><span style="color:#24292E;"> s1.</span><span style="color:#6F42C1;">insert</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">90</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#005CC5;">9</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">printSetInt</span><span style="color:#24292E;">(s1);</span></span>
<span class="line"><span style="color:#005CC5;">10</span></span>
<span class="line"><span style="color:#005CC5;">11</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">set</span><span style="color:#24292E;">&lt;</span><span style="color:#D73A49;">int</span><span style="color:#24292E;">&gt;::const_iterator ret;</span></span>
<span class="line"><span style="color:#005CC5;">12</span><span style="color:#24292E;"> ret </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> s1.</span><span style="color:#6F42C1;">find</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">50</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#005CC5;">13</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(ret </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> s1.</span><span style="color:#6F42C1;">end</span><span style="color:#24292E;">())</span></span>
<span class="line"><span style="color:#005CC5;">14</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#005CC5;">15</span><span style="color:#24292E;"> cout</span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#032F62;">&quot;找到的结果:&quot;</span><span style="color:#D73A49;">&lt;&lt;*</span><span style="color:#24292E;">ret</span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;">endl;</span></span>
<span class="line"><span style="color:#005CC5;">16</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#005CC5;">17</span></span>
<span class="line"><span style="color:#005CC5;">18</span><span style="color:#6A737D;"> //count(key);//查找键key的元素个数 set容器的结果只能是0或1</span></span>
<span class="line"><span style="color:#005CC5;">19</span><span style="color:#24292E;"> cout</span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;">s1.</span><span style="color:#6F42C1;">count</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">50</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;">endl;</span></span>
<span class="line"><span style="color:#005CC5;">20</span><span style="color:#24292E;"> }</span></span></code></pre></div><h3 id="_5、查找元素的上下限" tabindex="-1">5、查找元素的上下限 <a class="header-anchor" href="#_5、查找元素的上下限" aria-label="Permalink to &quot;5、查找元素的上下限&quot;">​</a></h3><p><img src="https://cdn.staticaly.com/gh/clint-sfy/blogcdn@master/img/c_plus/STL8.png" alt=""></p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">void</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">test04</span><span style="color:#ADBAC7;">()</span></span>
<span class="line"><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#6CB6FF;">3</span><span style="color:#ADBAC7;"> set</span><span style="color:#F47067;">&lt;int&gt;</span><span style="color:#ADBAC7;"> s1;</span></span>
<span class="line"><span style="color:#6CB6FF;">4</span><span style="color:#ADBAC7;"> s1.</span><span style="color:#DCBDFB;">insert</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">10</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#6CB6FF;">5</span><span style="color:#ADBAC7;"> s1.</span><span style="color:#DCBDFB;">insert</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">30</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#6CB6FF;">6</span><span style="color:#ADBAC7;"> s1.</span><span style="color:#DCBDFB;">insert</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">50</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#6CB6FF;">7</span><span style="color:#ADBAC7;"> s1.</span><span style="color:#DCBDFB;">insert</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">70</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#6CB6FF;">8</span><span style="color:#ADBAC7;"> s1.</span><span style="color:#DCBDFB;">insert</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">90</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#6CB6FF;">9</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">printSetInt</span><span style="color:#ADBAC7;">(s1);</span></span>
<span class="line"><span style="color:#6CB6FF;">10</span></span>
<span class="line"><span style="color:#6CB6FF;">11</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">set</span><span style="color:#ADBAC7;">&lt;</span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;">&gt;::const_iterator ret;</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span></span>
<span class="line"><span style="color:#6CB6FF;">12</span><span style="color:#768390;"> //lower_bound(keyElem);//返回第一个key&gt;=keyElem元素的迭代器。(下限)</span></span>
<span class="line"><span style="color:#6CB6FF;">13</span><span style="color:#ADBAC7;"> ret </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> s1.</span><span style="color:#DCBDFB;">lower_bound</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">50</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#6CB6FF;">14</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;">(ret </span><span style="color:#F47067;">!=</span><span style="color:#ADBAC7;">s1.</span><span style="color:#DCBDFB;">end</span><span style="color:#ADBAC7;">())</span></span>
<span class="line"><span style="color:#6CB6FF;">15</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#6CB6FF;">16</span><span style="color:#ADBAC7;"> cout</span><span style="color:#F47067;">&lt;&lt;</span><span style="color:#96D0FF;">&quot;下限为:&quot;</span><span style="color:#F47067;">&lt;&lt;*</span><span style="color:#ADBAC7;">ret</span><span style="color:#F47067;">&lt;&lt;</span><span style="color:#ADBAC7;">endl;</span></span>
<span class="line"><span style="color:#6CB6FF;">17</span><span style="color:#ADBAC7;"> }</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span></span>
<span class="line"><span style="color:#6CB6FF;">18</span><span style="color:#768390;"> //upper_bound(keyElem);//返回第一个key&gt;keyElem元素的迭代器（上限）</span></span>
<span class="line"><span style="color:#6CB6FF;">19</span><span style="color:#ADBAC7;"> ret </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> s1.</span><span style="color:#DCBDFB;">upper_bound</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">50</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#6CB6FF;">20</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;">(ret </span><span style="color:#F47067;">!=</span><span style="color:#ADBAC7;">s1.</span><span style="color:#DCBDFB;">end</span><span style="color:#ADBAC7;">())</span></span>
<span class="line"><span style="color:#6CB6FF;">21</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#6CB6FF;">22</span><span style="color:#ADBAC7;"> cout</span><span style="color:#F47067;">&lt;&lt;</span><span style="color:#96D0FF;">&quot;上限为:&quot;</span><span style="color:#F47067;">&lt;&lt;*</span><span style="color:#ADBAC7;">ret</span><span style="color:#F47067;">&lt;&lt;</span><span style="color:#ADBAC7;">endl;</span></span>
<span class="line"><span style="color:#6CB6FF;">23</span><span style="color:#ADBAC7;"> }</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span></span>
<span class="line"><span style="color:#6CB6FF;">24</span><span style="color:#768390;"> //equal_range(keyElem);//返回容器中key与keyElem相等的上下限的两个迭代器</span></span>
<span class="line"><span style="color:#6CB6FF;">25</span><span style="color:#768390;"> //返回值类型为pair 对组</span></span>
<span class="line"><span style="color:#6CB6FF;">26</span><span style="color:#ADBAC7;"> pair</span><span style="color:#F47067;">&lt;</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">set</span><span style="color:#ADBAC7;">&lt;</span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;">&gt;::const_iterator, </span><span style="color:#F69D50;">set</span><span style="color:#ADBAC7;">&lt;</span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;">&gt;::const_iterator</span><span style="color:#F47067;">&gt;</span><span style="color:#ADBAC7;"> p;</span></span>
<span class="line"><span style="color:#6CB6FF;">27</span><span style="color:#ADBAC7;"> p </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> s1.</span><span style="color:#DCBDFB;">equal_range</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">50</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#6CB6FF;">28</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;">(p.first </span><span style="color:#F47067;">!=</span><span style="color:#ADBAC7;"> s1.</span><span style="color:#DCBDFB;">end</span><span style="color:#ADBAC7;">())</span></span>
<span class="line"><span style="color:#6CB6FF;">29</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#6CB6FF;">30</span><span style="color:#ADBAC7;"> cout</span><span style="color:#F47067;">&lt;&lt;</span><span style="color:#96D0FF;">&quot;下限为:&quot;</span><span style="color:#F47067;">&lt;&lt;*</span><span style="color:#ADBAC7;">(p.first)</span><span style="color:#F47067;">&lt;&lt;</span><span style="color:#ADBAC7;">endl;</span></span>
<span class="line"><span style="color:#6CB6FF;">31</span><span style="color:#ADBAC7;"> }</span></span>
<span class="line"><span style="color:#6CB6FF;">32</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;">(p.second </span><span style="color:#F47067;">!=</span><span style="color:#ADBAC7;"> s1.</span><span style="color:#DCBDFB;">end</span><span style="color:#ADBAC7;">())</span></span>
<span class="line"><span style="color:#6CB6FF;">33</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#6CB6FF;">34</span><span style="color:#ADBAC7;"> cout</span><span style="color:#F47067;">&lt;&lt;</span><span style="color:#96D0FF;">&quot;上限为:&quot;</span><span style="color:#F47067;">&lt;&lt;*</span><span style="color:#ADBAC7;">(p.second)</span><span style="color:#F47067;">&lt;&lt;</span><span style="color:#ADBAC7;">endl;</span></span>
<span class="line"><span style="color:#6CB6FF;">35</span><span style="color:#ADBAC7;"> }</span></span>
<span class="line"><span style="color:#6CB6FF;">36</span><span style="color:#ADBAC7;"> }</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">1</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">test04</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#005CC5;">2</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#005CC5;">3</span><span style="color:#24292E;"> set</span><span style="color:#D73A49;">&lt;int&gt;</span><span style="color:#24292E;"> s1;</span></span>
<span class="line"><span style="color:#005CC5;">4</span><span style="color:#24292E;"> s1.</span><span style="color:#6F42C1;">insert</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#005CC5;">5</span><span style="color:#24292E;"> s1.</span><span style="color:#6F42C1;">insert</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">30</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#005CC5;">6</span><span style="color:#24292E;"> s1.</span><span style="color:#6F42C1;">insert</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">50</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#005CC5;">7</span><span style="color:#24292E;"> s1.</span><span style="color:#6F42C1;">insert</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">70</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#005CC5;">8</span><span style="color:#24292E;"> s1.</span><span style="color:#6F42C1;">insert</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">90</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#005CC5;">9</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">printSetInt</span><span style="color:#24292E;">(s1);</span></span>
<span class="line"><span style="color:#005CC5;">10</span></span>
<span class="line"><span style="color:#005CC5;">11</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">set</span><span style="color:#24292E;">&lt;</span><span style="color:#D73A49;">int</span><span style="color:#24292E;">&gt;::const_iterator ret;</span></span>
<span class="line"><span style="color:#24292E;">    </span></span>
<span class="line"><span style="color:#005CC5;">12</span><span style="color:#6A737D;"> //lower_bound(keyElem);//返回第一个key&gt;=keyElem元素的迭代器。(下限)</span></span>
<span class="line"><span style="color:#005CC5;">13</span><span style="color:#24292E;"> ret </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> s1.</span><span style="color:#6F42C1;">lower_bound</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">50</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#005CC5;">14</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(ret </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;">s1.</span><span style="color:#6F42C1;">end</span><span style="color:#24292E;">())</span></span>
<span class="line"><span style="color:#005CC5;">15</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#005CC5;">16</span><span style="color:#24292E;"> cout</span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#032F62;">&quot;下限为:&quot;</span><span style="color:#D73A49;">&lt;&lt;*</span><span style="color:#24292E;">ret</span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;">endl;</span></span>
<span class="line"><span style="color:#005CC5;">17</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#24292E;">    </span></span>
<span class="line"><span style="color:#005CC5;">18</span><span style="color:#6A737D;"> //upper_bound(keyElem);//返回第一个key&gt;keyElem元素的迭代器（上限）</span></span>
<span class="line"><span style="color:#005CC5;">19</span><span style="color:#24292E;"> ret </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> s1.</span><span style="color:#6F42C1;">upper_bound</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">50</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#005CC5;">20</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(ret </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;">s1.</span><span style="color:#6F42C1;">end</span><span style="color:#24292E;">())</span></span>
<span class="line"><span style="color:#005CC5;">21</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#005CC5;">22</span><span style="color:#24292E;"> cout</span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#032F62;">&quot;上限为:&quot;</span><span style="color:#D73A49;">&lt;&lt;*</span><span style="color:#24292E;">ret</span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;">endl;</span></span>
<span class="line"><span style="color:#005CC5;">23</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#24292E;">    </span></span>
<span class="line"><span style="color:#005CC5;">24</span><span style="color:#6A737D;"> //equal_range(keyElem);//返回容器中key与keyElem相等的上下限的两个迭代器</span></span>
<span class="line"><span style="color:#005CC5;">25</span><span style="color:#6A737D;"> //返回值类型为pair 对组</span></span>
<span class="line"><span style="color:#005CC5;">26</span><span style="color:#24292E;"> pair</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">set</span><span style="color:#24292E;">&lt;</span><span style="color:#D73A49;">int</span><span style="color:#24292E;">&gt;::const_iterator, </span><span style="color:#6F42C1;">set</span><span style="color:#24292E;">&lt;</span><span style="color:#D73A49;">int</span><span style="color:#24292E;">&gt;::const_iterator</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> p;</span></span>
<span class="line"><span style="color:#005CC5;">27</span><span style="color:#24292E;"> p </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> s1.</span><span style="color:#6F42C1;">equal_range</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">50</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#005CC5;">28</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(p.first </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> s1.</span><span style="color:#6F42C1;">end</span><span style="color:#24292E;">())</span></span>
<span class="line"><span style="color:#005CC5;">29</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#005CC5;">30</span><span style="color:#24292E;"> cout</span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#032F62;">&quot;下限为:&quot;</span><span style="color:#D73A49;">&lt;&lt;*</span><span style="color:#24292E;">(p.first)</span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;">endl;</span></span>
<span class="line"><span style="color:#005CC5;">31</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#005CC5;">32</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(p.second </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> s1.</span><span style="color:#6F42C1;">end</span><span style="color:#24292E;">())</span></span>
<span class="line"><span style="color:#005CC5;">33</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#005CC5;">34</span><span style="color:#24292E;"> cout</span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#032F62;">&quot;上限为:&quot;</span><span style="color:#D73A49;">&lt;&lt;*</span><span style="color:#24292E;">(p.second)</span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;">endl;</span></span>
<span class="line"><span style="color:#005CC5;">35</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#005CC5;">36</span><span style="color:#24292E;"> }</span></span></code></pre></div><h2 id="multiset容器" tabindex="-1">multiset容器 <a class="header-anchor" href="#multiset容器" aria-label="Permalink to &quot;multiset容器&quot;">​</a></h2><p>set容器：键值不允许重复</p><p>multiset容器：键值可以重复</p><p><img src="https://cdn.staticaly.com/gh/clint-sfy/blogcdn@master/img/c_plus/STL9.png" alt=""></p>`,21);function m(s,g,b,h,k,q){const o=t,e=F("ClientOnly");return l(),r("div",null,[d,y(e,null,{default:C(()=>{var n,a;return[(((n=s.$frontmatter)==null?void 0:n.aside)??!0)&&(((a=s.$frontmatter)==null?void 0:a.showArticleMetadata)??!0)?(l(),D(o,{key:0,article:s.$frontmatter},null,8,["article"])):B("",!0)]}),_:1}),u])}const S=c(E,[["render",m]]);export{P as __pageData,S as default};
