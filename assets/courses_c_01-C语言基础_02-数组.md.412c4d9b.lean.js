import{_ as e}from"./chunks/ArticleMetadata.59a467b2.js";import{_ as r,v as p,b as c,t as y,O as C,F as l,L as A,R as i,M as F,C as B,B as D}from"./chunks/framework.5cbdba25.js";import"./chunks/md5.02486a14.js";const x=JSON.parse('{"title":"C语言数组","description":"","frontmatter":{"title":"C语言数组","author":"阿源","date":"2023/01/02 11:15","categories":["C基础快速入门"],"tags":["C","C基础"]},"headers":[],"relativePath":"courses/c/01-C语言基础/02-数组.md","filePath":"courses/c/01-C语言基础/02-数组.md","lastUpdated":1691327334000}'),d={name:"courses/c/01-C语言基础/02-数组.md"},E=l("h1",{id:"数组",tabindex:"-1"},[A("数组 "),l("a",{class:"header-anchor",href:"#数组","aria-label":'Permalink to "数组"'},"​")],-1),h=i(`<p>用一段连续空间 存放相同类型的变量 这样的容器（结构）叫数组。</p><p>数组的下标是从0开始。</p><p>加入数组有n个元素：</p><p>下标范围：0~n-1</p><p>元素范围：arr[0]~arr[n-1]</p><h2 id="一维数值数组的定义" tabindex="-1"><strong>一维数值数组的定义</strong> <a class="header-anchor" href="#一维数值数组的定义" aria-label="Permalink to &quot;**一维数值数组的定义**&quot;">​</a></h2><p><strong>案例1：定义一个数组 有5个元素 每个元素为int</strong></p><p>int arr[5];</p><p><strong>案例2：定义一个数组 有5个元素 每个元素为int *</strong></p><p>int *arr[5];</p><p><strong>案例3：定义一个数组 有5个元素 每个元素为数组，该数组有10个元素每个元素为int</strong></p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">int</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">arr</span><span style="color:#ADBAC7;">[</span><span style="color:#6CB6FF;">5</span><span style="color:#ADBAC7;">][</span><span style="color:#6CB6FF;">10</span><span style="color:#ADBAC7;">];</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">arr</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">5</span><span style="color:#24292E;">][</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">];</span></span></code></pre></div><p><strong>案例4：定义一个数组 有5个元素 每个元素为函数的入口地址，该函数有两个int型形参，</strong></p><p><strong>int返回值类型</strong></p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">int</span><span style="color:#ADBAC7;"> (</span><span style="color:#F47067;">*</span><span style="color:#F69D50;">arr</span><span style="color:#ADBAC7;">[</span><span style="color:#6CB6FF;">5</span><span style="color:#ADBAC7;">])(</span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;">, </span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">int</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">*</span><span style="color:#E36209;">arr</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">5</span><span style="color:#24292E;">])(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">int</span><span style="color:#24292E;">);</span></span></code></pre></div><h2 id="一维数值数组的初始化" tabindex="-1"><strong>一维数值数组的初始化</strong> <a class="header-anchor" href="#一维数值数组的初始化" aria-label="Permalink to &quot;**一维数值数组的初始化**&quot;">​</a></h2><p><strong>1、全部元素初始化</strong></p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">int</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">arr</span><span style="color:#ADBAC7;">[</span><span style="color:#6CB6FF;">5</span><span style="color:#ADBAC7;">]</span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;">{</span><span style="color:#6CB6FF;">10</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">20</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">30</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">40</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">50</span><span style="color:#ADBAC7;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">arr</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">5</span><span style="color:#24292E;">]</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">{</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">20</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">30</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">40</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">50</span><span style="color:#24292E;">};</span></span></code></pre></div><p>注意：如果数组的全部元素 都初始化 可以省略[]的数值</p><p>如果省略了[]里面数值 数组的元素个数 就由初始化的元素个数确定</p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">int</span><span style="color:#ADBAC7;"> arr</span><span style="color:#F47067;">[]=</span><span style="color:#ADBAC7;">{</span><span style="color:#6CB6FF;">10</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">20</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">30</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">40</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">50</span><span style="color:#ADBAC7;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">int</span><span style="color:#24292E;"> arr</span><span style="color:#D73A49;">[]=</span><span style="color:#24292E;">{</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">20</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">30</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">40</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">50</span><span style="color:#24292E;">};</span></span></code></pre></div><p><strong>2、部分元素 初始化</strong></p><p><strong>1、未被初始化的部分 自动补0</strong></p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">int</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">arr</span><span style="color:#ADBAC7;">[</span><span style="color:#6CB6FF;">5</span><span style="color:#ADBAC7;">]</span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;">{</span><span style="color:#6CB6FF;">10</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">20</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">30</span><span style="color:#ADBAC7;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">arr</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">5</span><span style="color:#24292E;">]</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">{</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">20</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">30</span><span style="color:#24292E;">};</span></span></code></pre></div><p><strong>2、建议将数组的所有元素初始化为0</strong></p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">int</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">arr</span><span style="color:#ADBAC7;">[</span><span style="color:#6CB6FF;">5</span><span style="color:#ADBAC7;">]</span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;">{</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">};</span><span style="color:#768390;">//将第0个元素初始化为0 其他未被初始化自动补0 推荐</span></span>
<span class="line"><span style="color:#F47067;">int</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">arr</span><span style="color:#ADBAC7;">[</span><span style="color:#6CB6FF;">5</span><span style="color:#ADBAC7;">]</span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;">{</span><span style="color:#6CB6FF;">10</span><span style="color:#ADBAC7;">};</span><span style="color:#768390;">//10 0 0 0 0</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">arr</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">5</span><span style="color:#24292E;">]</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">{</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">};</span><span style="color:#6A737D;">//将第0个元素初始化为0 其他未被初始化自动补0 推荐</span></span>
<span class="line"><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">arr</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">5</span><span style="color:#24292E;">]</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">{</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">};</span><span style="color:#6A737D;">//10 0 0 0 0</span></span></code></pre></div><p><strong>3、指定下标初始化(了解)</strong></p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">int</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">arr</span><span style="color:#ADBAC7;">[</span><span style="color:#6CB6FF;">5</span><span style="color:#ADBAC7;">]</span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;">{[</span><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;">]</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">10</span><span style="color:#ADBAC7;">, [</span><span style="color:#6CB6FF;">4</span><span style="color:#ADBAC7;">]</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">30</span><span style="color:#ADBAC7;">};</span><span style="color:#768390;">//0 0 10 0 30</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">arr</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">5</span><span style="color:#24292E;">]</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">{[</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">]</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">, [</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">]</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">30</span><span style="color:#24292E;">};</span><span style="color:#6A737D;">//0 0 10 0 30</span></span></code></pre></div><h2 id="一维数值数组的元素操作" tabindex="-1">一维数值数组的元素操作 <a class="header-anchor" href="#一维数值数组的元素操作" aria-label="Permalink to &quot;一维数值数组的元素操作&quot;">​</a></h2><p><strong>元素的操作 对元素的读或写</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#adbac7;">scanf(&quot;%d&quot; , &amp;arr[i])</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">scanf(&quot;%d&quot; , &amp;arr[i])</span></span></code></pre></div><h2 id="二维数值数组的初始化" tabindex="-1">二维数值数组的初始化 <a class="header-anchor" href="#二维数值数组的初始化" aria-label="Permalink to &quot;二维数值数组的初始化&quot;">​</a></h2><p>分段初始化</p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#6CB6FF;">1</span><span style="color:#768390;"> //完全初始化</span></span>
<span class="line"><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">arr</span><span style="color:#ADBAC7;">[</span><span style="color:#6CB6FF;">3</span><span style="color:#ADBAC7;">][</span><span style="color:#6CB6FF;">4</span><span style="color:#ADBAC7;">]</span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;">{ {</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">3</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">4</span><span style="color:#ADBAC7;">}, {</span><span style="color:#6CB6FF;">5</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">6</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">7</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">8</span><span style="color:#ADBAC7;">}, {</span><span style="color:#6CB6FF;">9</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">10</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">11</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">12</span><span style="color:#ADBAC7;">} };</span></span>
<span class="line"><span style="color:#6CB6FF;">3</span><span style="color:#768390;"> //如果完全初始化 只能省略行数</span></span>
<span class="line"><span style="color:#6CB6FF;">4</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;"> arr</span><span style="color:#F47067;">[]</span><span style="color:#ADBAC7;">[</span><span style="color:#6CB6FF;">4</span><span style="color:#ADBAC7;">]</span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;">{ {</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">3</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">4</span><span style="color:#ADBAC7;">}, {</span><span style="color:#6CB6FF;">5</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">6</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">7</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">8</span><span style="color:#ADBAC7;">}, {</span><span style="color:#6CB6FF;">9</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">10</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">11</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">12</span><span style="color:#ADBAC7;">} };</span></span>
<span class="line"><span style="color:#6CB6FF;">5</span></span>
<span class="line"><span style="color:#6CB6FF;">6</span><span style="color:#768390;"> //部分初始化</span></span>
<span class="line"><span style="color:#6CB6FF;">7</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">arr</span><span style="color:#ADBAC7;">[</span><span style="color:#6CB6FF;">3</span><span style="color:#ADBAC7;">][</span><span style="color:#6CB6FF;">4</span><span style="color:#ADBAC7;">]</span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;">{ {</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;">}, {</span><span style="color:#6CB6FF;">5</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">6</span><span style="color:#ADBAC7;">}, {</span><span style="color:#6CB6FF;">9</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">10</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">11</span><span style="color:#ADBAC7;">} };</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">1</span><span style="color:#6A737D;"> //完全初始化</span></span>
<span class="line"><span style="color:#005CC5;">2</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">arr</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">][</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">]</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">{ {</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">}, {</span><span style="color:#005CC5;">5</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">6</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">7</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">8</span><span style="color:#24292E;">}, {</span><span style="color:#005CC5;">9</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">11</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">12</span><span style="color:#24292E;">} };</span></span>
<span class="line"><span style="color:#005CC5;">3</span><span style="color:#6A737D;"> //如果完全初始化 只能省略行数</span></span>
<span class="line"><span style="color:#005CC5;">4</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> arr</span><span style="color:#D73A49;">[]</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">]</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">{ {</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">}, {</span><span style="color:#005CC5;">5</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">6</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">7</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">8</span><span style="color:#24292E;">}, {</span><span style="color:#005CC5;">9</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">11</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">12</span><span style="color:#24292E;">} };</span></span>
<span class="line"><span style="color:#005CC5;">5</span></span>
<span class="line"><span style="color:#005CC5;">6</span><span style="color:#6A737D;"> //部分初始化</span></span>
<span class="line"><span style="color:#005CC5;">7</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">arr</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">][</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">]</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">{ {</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">}, {</span><span style="color:#005CC5;">5</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">6</span><span style="color:#24292E;">}, {</span><span style="color:#005CC5;">9</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">11</span><span style="color:#24292E;">} };</span></span></code></pre></div><p>完全初始化</p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">/</span><span style="color:#ADBAC7;">完全初始化</span></span>
<span class="line"><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">arr</span><span style="color:#ADBAC7;">[</span><span style="color:#6CB6FF;">3</span><span style="color:#ADBAC7;">][</span><span style="color:#6CB6FF;">4</span><span style="color:#ADBAC7;">]</span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;">{ </span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">3</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">4</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">5</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">6</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">7</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">8</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">9</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">10</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">11</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">12</span><span style="color:#ADBAC7;">};</span></span>
<span class="line"><span style="color:#6CB6FF;">3</span><span style="color:#768390;"> //如果完全初始化 只能省略行数</span></span>
<span class="line"><span style="color:#6CB6FF;">4</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;"> arr</span><span style="color:#F47067;">[]</span><span style="color:#ADBAC7;">[</span><span style="color:#6CB6FF;">4</span><span style="color:#ADBAC7;">]</span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;">{</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">3</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">4</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">5</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">6</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">7</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">8</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">9</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">10</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">11</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">12</span><span style="color:#ADBAC7;">};</span></span>
<span class="line"><span style="color:#6CB6FF;">5</span></span>
<span class="line"><span style="color:#6CB6FF;">6</span><span style="color:#768390;"> //部分初始化</span></span>
<span class="line"><span style="color:#6CB6FF;">7</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">arr</span><span style="color:#ADBAC7;">[</span><span style="color:#6CB6FF;">3</span><span style="color:#ADBAC7;">][</span><span style="color:#6CB6FF;">4</span><span style="color:#ADBAC7;">]</span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;">{ </span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">5</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">6</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">9</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">10</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">11</span><span style="color:#ADBAC7;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">1</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">/</span><span style="color:#24292E;">完全初始化</span></span>
<span class="line"><span style="color:#005CC5;">2</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">arr</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">][</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">]</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">{ </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">5</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">6</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">7</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">8</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">9</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">11</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">12</span><span style="color:#24292E;">};</span></span>
<span class="line"><span style="color:#005CC5;">3</span><span style="color:#6A737D;"> //如果完全初始化 只能省略行数</span></span>
<span class="line"><span style="color:#005CC5;">4</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> arr</span><span style="color:#D73A49;">[]</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">]</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">{</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">5</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">6</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">7</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">8</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">9</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">11</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">12</span><span style="color:#24292E;">};</span></span>
<span class="line"><span style="color:#005CC5;">5</span></span>
<span class="line"><span style="color:#005CC5;">6</span><span style="color:#6A737D;"> //部分初始化</span></span>
<span class="line"><span style="color:#005CC5;">7</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">arr</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">][</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">]</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">{ </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">5</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">6</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">9</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">11</span><span style="color:#24292E;">};</span></span></code></pre></div><h2 id="一维字符数组" tabindex="-1">一维字符数组 <a class="header-anchor" href="#一维字符数组" aria-label="Permalink to &quot;一维字符数组&quot;">​</a></h2><p>字符串的方式 初始化 一维字符数组（推荐） 描述的是字符串， 比如字符串&quot;hello&quot;, 编译器会自动在字符串的末尾 添加&#39;\\0&#39;字符 作为字符串的结束标记</p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">char</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">arr</span><span style="color:#ADBAC7;">[</span><span style="color:#6CB6FF;">6</span><span style="color:#ADBAC7;">]</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&quot;hello&quot;</span><span style="color:#ADBAC7;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">char</span><span style="color:#24292E;"> </span><span style="color:#E36209;">arr</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">6</span><span style="color:#24292E;">]</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;hello&quot;</span><span style="color:#24292E;">;</span></span></code></pre></div><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">char</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">arr</span><span style="color:#ADBAC7;">[</span><span style="color:#6CB6FF;">6</span><span style="color:#ADBAC7;">]</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&quot;hello&quot;</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">printf</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;</span><span style="color:#F47067;">%s</span><span style="color:#96D0FF;">&quot;</span><span style="color:#ADBAC7;">, arr);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">1</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">char</span><span style="color:#24292E;"> </span><span style="color:#E36209;">arr</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">6</span><span style="color:#24292E;">]</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;hello&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#005CC5;">2</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">%s</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, arr);</span></span></code></pre></div><h3 id="键盘获取字符数组" tabindex="-1"><strong>键盘获取字符数组</strong> <a class="header-anchor" href="#键盘获取字符数组" aria-label="Permalink to &quot;**键盘获取字符数组**&quot;">​</a></h3><p><strong>1.scanf 和 %s获取字符串 遇到空格或回车 结束输入</strong></p><p><strong>2.获取带空格的 字符串 gets （建议别用 可能会溢出）</strong></p><p><strong>3、fgets函数 可以获取带空格的字符串 安全</strong></p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">char</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">*</span><span style="color:#DCBDFB;">fgets</span><span style="color:#ADBAC7;">(</span><span style="color:#F47067;">char</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">*</span><span style="color:#F69D50;">s</span><span style="color:#ADBAC7;">, </span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">size</span><span style="color:#ADBAC7;">, FILE </span><span style="color:#F47067;">*</span><span style="color:#F69D50;">stream</span><span style="color:#ADBAC7;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">char</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#6F42C1;">fgets</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">char</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#E36209;">s</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">size</span><span style="color:#24292E;">, FILE </span><span style="color:#D73A49;">*</span><span style="color:#E36209;">stream</span><span style="color:#24292E;">)</span></span></code></pre></div><p>s:表示空间的起始位置</p><p>size：表示的能获取的最大字节数size-1</p><p>stream:表示设备（</p><p>stdin 标准输入设备（终端））</p><p><img src="https://cdn.staticaly.com/gh/clint-sfy/blogcdn@master/img/c/%E6%95%B0%E7%BB%841.png" alt=""></p><p>fgets 能获取带空格的字符串 遇到回车（达到最空间大值）会结束获取，注意fgets会提取回车</p><p><img src="https://cdn.staticaly.com/gh/clint-sfy/blogcdn@master/img/c/%E6%95%B0%E7%BB%842.png" alt=""></p><h2 id="一些案例" tabindex="-1">一些案例 <a class="header-anchor" href="#一些案例" aria-label="Permalink to &quot;一些案例&quot;">​</a></h2><h3 id="_1-获取一个字符串-求该字符串的长度-不适用strlen" tabindex="-1">1. 获取一个字符串 求该字符串的长度（不适用strlen） <a class="header-anchor" href="#_1-获取一个字符串-求该字符串的长度-不适用strlen" aria-label="Permalink to &quot;1. 获取一个字符串 求该字符串的长度（不适用strlen）&quot;">​</a></h3><p><img src="https://cdn.staticaly.com/gh/clint-sfy/blogcdn@master/img/c/%E6%95%B0%E7%BB%843.png" alt=""></p><h3 id="_2、有两个字符数组str1-str2。str1获取键盘输入-输入后将str1的字符串-拷贝到-str2中-不允许使用strcpy" tabindex="-1">2、有两个字符数组str1 str2。str1获取键盘输入，输入后将str1的字符串，拷贝到 str2中（不允许使用strcpy） <a class="header-anchor" href="#_2、有两个字符数组str1-str2。str1获取键盘输入-输入后将str1的字符串-拷贝到-str2中-不允许使用strcpy" aria-label="Permalink to &quot;2、有两个字符数组str1 str2。str1获取键盘输入，输入后将str1的字符串，拷贝到 str2中（不允许使用strcpy）&quot;">​</a></h3><p><img src="https://cdn.staticaly.com/gh/clint-sfy/blogcdn@master/img/c/%E6%95%B0%E7%BB%844.png" alt=""></p><h3 id="_3、有以下两个数组str1-str2-将str2的字符串-追加到-str1的尾部" tabindex="-1">3、有以下两个数组str1,str2 将str2的字符串 追加到 str1的尾部 <a class="header-anchor" href="#_3、有以下两个数组str1-str2-将str2的字符串-追加到-str1的尾部" aria-label="Permalink to &quot;3、有以下两个数组str1,str2 将str2的字符串 追加到 str1的尾部&quot;">​</a></h3><p><img src="https://cdn.staticaly.com/gh/clint-sfy/blogcdn@master/img/c/%E6%95%B0%E7%BB%845.png" alt=""></p><h3 id="_4、从字符串中查找某个元素-第一次出现的下标" tabindex="-1">4、从字符串中查找某个元素（第一次出现的下标） <a class="header-anchor" href="#_4、从字符串中查找某个元素-第一次出现的下标" aria-label="Permalink to &quot;4、从字符串中查找某个元素（第一次出现的下标）&quot;">​</a></h3><p><img src="https://cdn.staticaly.com/gh/clint-sfy/blogcdn@master/img/c/%E6%95%B0%E7%BB%846.png" alt=""></p><h2 id="二维字符数组" tabindex="-1">二维字符数组 <a class="header-anchor" href="#二维字符数组" aria-label="Permalink to &quot;二维字符数组&quot;">​</a></h2><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">char</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">str</span><span style="color:#ADBAC7;">[</span><span style="color:#6CB6FF;">128</span><span style="color:#ADBAC7;">]</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&quot;hello&quot;</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#6CB6FF;">2</span></span>
<span class="line"><span style="color:#6CB6FF;">3</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">char</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">arr</span><span style="color:#ADBAC7;">[</span><span style="color:#6CB6FF;">5</span><span style="color:#ADBAC7;">][</span><span style="color:#6CB6FF;">128</span><span style="color:#ADBAC7;">]</span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;">{</span><span style="color:#96D0FF;">&quot;hello&quot;</span><span style="color:#ADBAC7;">,</span><span style="color:#96D0FF;">&quot;world&quot;</span><span style="color:#ADBAC7;">, </span><span style="color:#96D0FF;">&quot;hehehe&quot;</span><span style="color:#ADBAC7;">, </span><span style="color:#96D0FF;">&quot;xixixi&quot;</span><span style="color:#ADBAC7;">, </span><span style="color:#96D0FF;">&quot;lalala&quot;</span><span style="color:#ADBAC7;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">1</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">char</span><span style="color:#24292E;"> </span><span style="color:#E36209;">str</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">128</span><span style="color:#24292E;">]</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;hello&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#005CC5;">2</span></span>
<span class="line"><span style="color:#005CC5;">3</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">char</span><span style="color:#24292E;"> </span><span style="color:#E36209;">arr</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">5</span><span style="color:#24292E;">][</span><span style="color:#005CC5;">128</span><span style="color:#24292E;">]</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">{</span><span style="color:#032F62;">&quot;hello&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;world&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;hehehe&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;xixixi&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;lalala&quot;</span><span style="color:#24292E;">};</span></span></code></pre></div><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">void</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">test01</span><span style="color:#ADBAC7;">()</span></span>
<span class="line"><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#6CB6FF;">3</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">char</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">arr</span><span style="color:#ADBAC7;">[</span><span style="color:#6CB6FF;">5</span><span style="color:#ADBAC7;">][</span><span style="color:#6CB6FF;">128</span><span style="color:#ADBAC7;">] </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> {</span><span style="color:#96D0FF;">&quot;&quot;</span><span style="color:#ADBAC7;">};</span></span>
<span class="line"><span style="color:#6CB6FF;">4</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;"> row </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">sizeof</span><span style="color:#ADBAC7;">(arr) </span><span style="color:#F47067;">/</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">sizeof</span><span style="color:#ADBAC7;">(</span><span style="color:#F69D50;">arr</span><span style="color:#ADBAC7;">[</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">]);</span></span>
<span class="line"><span style="color:#6CB6FF;">5</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;"> col </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">sizeof</span><span style="color:#ADBAC7;">(</span><span style="color:#F69D50;">arr</span><span style="color:#ADBAC7;">[</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">]) </span><span style="color:#F47067;">/</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">sizeof</span><span style="color:#ADBAC7;">(</span><span style="color:#F69D50;">arr</span><span style="color:#ADBAC7;">[</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">][</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">]);</span></span>
<span class="line"><span style="color:#6CB6FF;">6</span></span>
<span class="line"><span style="color:#6CB6FF;">7</span><span style="color:#768390;"> //获取字符数</span></span>
<span class="line"><span style="color:#6CB6FF;">8</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">printf</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;请输入</span><span style="color:#F47067;">%d</span><span style="color:#96D0FF;">个字符串</span><span style="color:#F47067;">\\n</span><span style="color:#96D0FF;">&quot;</span><span style="color:#ADBAC7;">, row);</span></span>
<span class="line"><span style="color:#6CB6FF;">9</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;"> i </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#6CB6FF;">10</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">for</span><span style="color:#ADBAC7;"> (i </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">; i </span><span style="color:#F47067;">&lt;</span><span style="color:#ADBAC7;"> row; i</span><span style="color:#F47067;">++</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#6CB6FF;">11</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#6CB6FF;">12</span><span style="color:#768390;"> // scanf(&quot;%s&quot;, &amp;arr[i][0]);</span></span>
<span class="line"><span style="color:#6CB6FF;">13</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">scanf</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;</span><span style="color:#F47067;">%s</span><span style="color:#96D0FF;">&quot;</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">arr</span><span style="color:#ADBAC7;">[i]);</span></span>
<span class="line"><span style="color:#6CB6FF;">14</span><span style="color:#ADBAC7;"> }</span></span>
<span class="line"><span style="color:#6CB6FF;">15</span></span>
<span class="line"><span style="color:#6CB6FF;">16</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">printf</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐</span><span style="color:#F47067;">\\n</span><span style="color:#96D0FF;">&quot;</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#6CB6FF;">17</span><span style="color:#768390;"> //遍历二维字符数组</span></span>
<span class="line"><span style="color:#6CB6FF;">18</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">for</span><span style="color:#ADBAC7;"> (i </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">; i </span><span style="color:#F47067;">&lt;</span><span style="color:#ADBAC7;"> row; i</span><span style="color:#F47067;">++</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#6CB6FF;">19</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#6CB6FF;">20</span><span style="color:#768390;"> //arr[i] 代表的是 每一行的第0列的列地址</span></span>
<span class="line"><span style="color:#6CB6FF;">21</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">printf</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;</span><span style="color:#F47067;">%s\\n</span><span style="color:#96D0FF;">&quot;</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">arr</span><span style="color:#ADBAC7;">[i]);</span></span>
<span class="line"><span style="color:#6CB6FF;">22</span><span style="color:#ADBAC7;"> }</span></span>
<span class="line"><span style="color:#6CB6FF;">23</span><span style="color:#ADBAC7;"> }</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">1</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">test01</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#005CC5;">2</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#005CC5;">3</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">char</span><span style="color:#24292E;"> </span><span style="color:#E36209;">arr</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">5</span><span style="color:#24292E;">][</span><span style="color:#005CC5;">128</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;">};</span></span>
<span class="line"><span style="color:#005CC5;">4</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> row </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">sizeof</span><span style="color:#24292E;">(arr) </span><span style="color:#D73A49;">/</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">sizeof</span><span style="color:#24292E;">(</span><span style="color:#E36209;">arr</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">]);</span></span>
<span class="line"><span style="color:#005CC5;">5</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> col </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">sizeof</span><span style="color:#24292E;">(</span><span style="color:#E36209;">arr</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">]) </span><span style="color:#D73A49;">/</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">sizeof</span><span style="color:#24292E;">(</span><span style="color:#E36209;">arr</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">][</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">]);</span></span>
<span class="line"><span style="color:#005CC5;">6</span></span>
<span class="line"><span style="color:#005CC5;">7</span><span style="color:#6A737D;"> //获取字符数</span></span>
<span class="line"><span style="color:#005CC5;">8</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;请输入</span><span style="color:#005CC5;">%d</span><span style="color:#032F62;">个字符串</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, row);</span></span>
<span class="line"><span style="color:#005CC5;">9</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#005CC5;">10</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> row; i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#005CC5;">11</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#005CC5;">12</span><span style="color:#6A737D;"> // scanf(&quot;%s&quot;, &amp;arr[i][0]);</span></span>
<span class="line"><span style="color:#005CC5;">13</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">scanf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">%s</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">arr</span><span style="color:#24292E;">[i]);</span></span>
<span class="line"><span style="color:#005CC5;">14</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#005CC5;">15</span></span>
<span class="line"><span style="color:#005CC5;">16</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#005CC5;">17</span><span style="color:#6A737D;"> //遍历二维字符数组</span></span>
<span class="line"><span style="color:#005CC5;">18</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> row; i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#005CC5;">19</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#005CC5;">20</span><span style="color:#6A737D;"> //arr[i] 代表的是 每一行的第0列的列地址</span></span>
<span class="line"><span style="color:#005CC5;">21</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">%s\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">arr</span><span style="color:#24292E;">[i]);</span></span>
<span class="line"><span style="color:#005CC5;">22</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#005CC5;">23</span><span style="color:#24292E;"> }</span></span></code></pre></div>`,64);function u(s,g,m,v,b,q){const o=e,t=F("ClientOnly");return p(),c("div",null,[E,y(t,null,{default:C(()=>{var a,n;return[(((a=s.$frontmatter)==null?void 0:a.aside)??!0)&&(((n=s.$frontmatter)==null?void 0:n.showArticleMetadata)??!0)?(p(),B(o,{key:0,article:s.$frontmatter},null,8,["article"])):D("",!0)]}),_:1}),h])}const P=r(d,[["render",u]]);export{x as __pageData,P as default};
