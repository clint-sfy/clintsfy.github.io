import{_ as e}from"./chunks/ArticleMetadata.efdb5e9a.js";import{_ as r,v as l,b as c,t as y,O as A,F as p,L as D,R as i,M as C,C as B,B as F}from"./chunks/framework.5cbdba25.js";import"./chunks/md5.02486a14.js";const q=JSON.parse('{"title":"Manacher","description":"","frontmatter":{"title":"Manacher","author":"阿源","date":"2023/03/22 12:00","categories":["数据结构与算法"],"tags":["数据结构与算法","Manacher"]},"headers":[],"relativePath":"courses/algorithm/01-左程云算法基础/22-Manacher.md","filePath":"courses/algorithm/01-左程云算法基础/22-Manacher.md","lastUpdated":1691397650000}'),E={name:"courses/algorithm/01-左程云算法基础/22-Manacher.md"},h=p("h1",{id:"manacher",tabindex:"-1"},[D("Manacher "),p("a",{class:"header-anchor",href:"#manacher","aria-label":'Permalink to "Manacher"'},"​")],-1),m=i(`<h2 id="简介" tabindex="-1">简介 <a class="header-anchor" href="#简介" aria-label="Permalink to &quot;简介&quot;">​</a></h2><p>找到一个字符串中最长回文子串（一定要连续）</p><p>奇数和偶数不一样 所以要做预处理</p><p>121aaaa23</p><p>#1#2#1#a#a#a#a#2#3#</p><p>如果用原始串中出现的字符做预处理字符，是否会干扰？不会</p><h2 id="代码-o-n" tabindex="-1">代码 O(n) <a class="header-anchor" href="#代码-o-n" aria-label="Permalink to &quot;代码 O(n)&quot;">​</a></h2><ol><li>回文半径 （12321 半径3）</li><li>回文半径数组 （每个位置i 向左右扩的回文半径）</li><li>最右回文变量 int （每个位置右扩 刷新最右的位置）</li></ol><p>第一种情况 i在R外 暴力扩 不优化 O(R)</p><p>第二种情况 i在R内</p><p>i撇在LR内</p><p>i撇不在LR内</p><p>第三种情况 i撇压线 O(R)</p><p>[ L i撇 c i R]</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">static</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">manacher</span><span style="color:#ADBAC7;">(String s) {</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;"> (s </span><span style="color:#F47067;">==</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">null</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">||</span><span style="color:#ADBAC7;"> s.</span><span style="color:#DCBDFB;">length</span><span style="color:#ADBAC7;">() </span><span style="color:#F47067;">==</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">			</span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">		}</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#768390;">// &quot;12132&quot; -&gt; &quot;#1#2#1#3#2#&quot;</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">char</span><span style="color:#F69D50;">[] </span><span style="color:#ADBAC7;">str</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">manacherString</span><span style="color:#ADBAC7;">(s);</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#768390;">// 回文半径的大小</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">int</span><span style="color:#F69D50;">[] </span><span style="color:#ADBAC7;">pArr</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">new</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;">[str.length];</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#768390;">// R对应的中心点</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">int</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">C</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">-</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#768390;">// 讲述中：R代表最右的扩成功的位置</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#768390;">// coding：最右的扩成功位置的，再下一个位置</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">int</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">R</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">-</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">int</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">max</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> Integer.MIN_VALUE;</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">for</span><span style="color:#ADBAC7;"> (</span><span style="color:#F47067;">int</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">i</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">; i </span><span style="color:#F47067;">&lt;</span><span style="color:#ADBAC7;"> str.length; i</span><span style="color:#F47067;">++</span><span style="color:#ADBAC7;">) { </span><span style="color:#768390;">// 0 1 2</span></span>
<span class="line"><span style="color:#ADBAC7;">			</span><span style="color:#768390;">// R第一个违规的位置，i&gt;= R</span></span>
<span class="line"><span style="color:#ADBAC7;">			</span><span style="color:#768390;">// i位置扩出来的答案，i位置扩的区域，至少是多大。</span></span>
<span class="line"><span style="color:#ADBAC7;">            </span><span style="color:#768390;">// i在R内 ， 两种情况  i撇回文半径长度</span></span>
<span class="line"><span style="color:#ADBAC7;">			pArr[i] </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> R </span><span style="color:#F47067;">&gt;</span><span style="color:#ADBAC7;"> i </span><span style="color:#F47067;">?</span><span style="color:#ADBAC7;"> Math.</span><span style="color:#DCBDFB;">min</span><span style="color:#ADBAC7;">(pArr[</span><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">*</span><span style="color:#ADBAC7;"> C </span><span style="color:#F47067;">-</span><span style="color:#ADBAC7;"> i], R </span><span style="color:#F47067;">-</span><span style="color:#ADBAC7;"> i) </span><span style="color:#F47067;">:</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">			</span><span style="color:#F47067;">while</span><span style="color:#ADBAC7;"> (i </span><span style="color:#F47067;">+</span><span style="color:#ADBAC7;"> pArr[i] </span><span style="color:#F47067;">&lt;</span><span style="color:#ADBAC7;"> str.length </span><span style="color:#F47067;">&amp;&amp;</span><span style="color:#ADBAC7;"> i </span><span style="color:#F47067;">-</span><span style="color:#ADBAC7;"> pArr[i] </span><span style="color:#F47067;">&gt;</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">-</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">				</span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;"> (str[i </span><span style="color:#F47067;">+</span><span style="color:#ADBAC7;"> pArr[i]] </span><span style="color:#F47067;">==</span><span style="color:#ADBAC7;"> str[i </span><span style="color:#F47067;">-</span><span style="color:#ADBAC7;"> pArr[i]])</span></span>
<span class="line"><span style="color:#ADBAC7;">					pArr[i]</span><span style="color:#F47067;">++</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">				</span><span style="color:#F47067;">else</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">					</span><span style="color:#F47067;">break</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">				}</span></span>
<span class="line"><span style="color:#ADBAC7;">			}</span></span>
<span class="line"><span style="color:#ADBAC7;">			</span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;"> (i </span><span style="color:#F47067;">+</span><span style="color:#ADBAC7;"> pArr[i] </span><span style="color:#F47067;">&gt;</span><span style="color:#ADBAC7;"> R) {</span></span>
<span class="line"><span style="color:#ADBAC7;">				R </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> i </span><span style="color:#F47067;">+</span><span style="color:#ADBAC7;"> pArr[i];</span></span>
<span class="line"><span style="color:#ADBAC7;">				C </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> i;</span></span>
<span class="line"><span style="color:#ADBAC7;">			}</span></span>
<span class="line"><span style="color:#ADBAC7;">			max </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> Math.</span><span style="color:#DCBDFB;">max</span><span style="color:#ADBAC7;">(max, pArr[i]);</span></span>
<span class="line"><span style="color:#ADBAC7;">		}</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> max </span><span style="color:#F47067;">-</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">	</span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">static</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">char</span><span style="color:#ADBAC7;">[] </span><span style="color:#DCBDFB;">manacherString</span><span style="color:#ADBAC7;">(String str) {</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">char</span><span style="color:#F69D50;">[] </span><span style="color:#ADBAC7;">charArr</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> str.</span><span style="color:#DCBDFB;">toCharArray</span><span style="color:#ADBAC7;">();</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">char</span><span style="color:#F69D50;">[] </span><span style="color:#ADBAC7;">res</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">new</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">char</span><span style="color:#ADBAC7;">[str.</span><span style="color:#DCBDFB;">length</span><span style="color:#ADBAC7;">() </span><span style="color:#F47067;">*</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">+</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">];</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">int</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">index</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">for</span><span style="color:#ADBAC7;"> (</span><span style="color:#F47067;">int</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">i</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">; i </span><span style="color:#F47067;">!=</span><span style="color:#ADBAC7;"> res.length; i</span><span style="color:#F47067;">++</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">			res[i] </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> (i </span><span style="color:#F47067;">&amp;</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">) </span><span style="color:#F47067;">==</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">?</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">&#39;#&#39;</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">:</span><span style="color:#ADBAC7;"> charArr[index</span><span style="color:#F47067;">++</span><span style="color:#ADBAC7;">];</span></span>
<span class="line"><span style="color:#ADBAC7;">		}</span></span>
<span class="line"><span style="color:#ADBAC7;">		</span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> res;</span></span>
<span class="line"><span style="color:#ADBAC7;">	}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">manacher</span><span style="color:#24292E;">(String s) {</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (s </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">||</span><span style="color:#24292E;"> s.</span><span style="color:#6F42C1;">length</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">			</span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">		}</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#6A737D;">// &quot;12132&quot; -&gt; &quot;#1#2#1#3#2#&quot;</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">char</span><span style="color:#24292E;">[] str </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">manacherString</span><span style="color:#24292E;">(s);</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#6A737D;">// 回文半径的大小</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">int</span><span style="color:#24292E;">[] pArr </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;">[str.length];</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// R对应的中心点</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> C </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#6A737D;">// 讲述中：R代表最右的扩成功的位置</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#6A737D;">// coding：最右的扩成功位置的，再下一个位置</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> R </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> max </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Integer.MIN_VALUE;</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> str.length; i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">) { </span><span style="color:#6A737D;">// 0 1 2</span></span>
<span class="line"><span style="color:#24292E;">			</span><span style="color:#6A737D;">// R第一个违规的位置，i&gt;= R</span></span>
<span class="line"><span style="color:#24292E;">			</span><span style="color:#6A737D;">// i位置扩出来的答案，i位置扩的区域，至少是多大。</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// i在R内 ， 两种情况  i撇回文半径长度</span></span>
<span class="line"><span style="color:#24292E;">			pArr[i] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> R </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> Math.</span><span style="color:#6F42C1;">min</span><span style="color:#24292E;">(pArr[</span><span style="color:#005CC5;">2</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> C </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> i], R </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> i) </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">			</span><span style="color:#D73A49;">while</span><span style="color:#24292E;"> (i </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> pArr[i] </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> str.length </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> pArr[i] </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">				</span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (str[i </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> pArr[i]] </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> str[i </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> pArr[i]])</span></span>
<span class="line"><span style="color:#24292E;">					pArr[i]</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">				</span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">					</span><span style="color:#D73A49;">break</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">				}</span></span>
<span class="line"><span style="color:#24292E;">			}</span></span>
<span class="line"><span style="color:#24292E;">			</span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (i </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> pArr[i] </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> R) {</span></span>
<span class="line"><span style="color:#24292E;">				R </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> pArr[i];</span></span>
<span class="line"><span style="color:#24292E;">				C </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> i;</span></span>
<span class="line"><span style="color:#24292E;">			}</span></span>
<span class="line"><span style="color:#24292E;">			max </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Math.</span><span style="color:#6F42C1;">max</span><span style="color:#24292E;">(max, pArr[i]);</span></span>
<span class="line"><span style="color:#24292E;">		}</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> max </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">char</span><span style="color:#24292E;">[] </span><span style="color:#6F42C1;">manacherString</span><span style="color:#24292E;">(String str) {</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">char</span><span style="color:#24292E;">[] charArr </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> str.</span><span style="color:#6F42C1;">toCharArray</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">char</span><span style="color:#24292E;">[] res </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">char</span><span style="color:#24292E;">[str.</span><span style="color:#6F42C1;">length</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> index </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> res.length; i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">			res[i] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (i </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;#&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> charArr[index</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#24292E;">		}</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> res;</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span></code></pre></div><h2 id="其他题目" tabindex="-1">其他题目 <a class="header-anchor" href="#其他题目" aria-label="Permalink to &quot;其他题目&quot;">​</a></h2>`,16);function d(s,g,u,R,f,_){const o=e,t=C("ClientOnly");return l(),c("div",null,[h,y(t,null,{default:A(()=>{var n,a;return[(((n=s.$frontmatter)==null?void 0:n.aside)??!0)&&(((a=s.$frontmatter)==null?void 0:a.showArticleMetadata)??!0)?(l(),B(o,{key:0,article:s.$frontmatter},null,8,["article"])):F("",!0)]}),_:1}),m])}const v=r(E,[["render",d]]);export{q as __pageData,v as default};
