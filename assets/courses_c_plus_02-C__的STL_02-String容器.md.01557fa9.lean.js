import{_ as e}from"./chunks/ArticleMetadata.e10718d6.js";import{_ as c,v as l,b as r,E as y,O as i,F as p,L as C,R as A,M as d,C as D,B as F}from"./chunks/framework.2aeb816e.js";import"./chunks/md5.772bbdf1.js";const w=JSON.parse('{"title":"C++的string容器","description":"","frontmatter":{"title":"C++的string容器","author":"阿源","date":"2023/02/07 21:29","categories":["C++基础快速入门"],"tags":["C++","C++基础","STL","string"]},"headers":[],"relativePath":"courses/c_plus/02-C++的STL/02-String容器.md","filePath":"courses/c_plus/02-C++的STL/02-String容器.md","lastUpdated":1691327334000}'),B={name:"courses/c_plus/02-C++的STL/02-String容器.md"},g=p("h1",{id:"c-的string容器",tabindex:"-1"},[C("C++的string容器 "),p("a",{class:"header-anchor",href:"#c-的string容器","aria-label":'Permalink to "C++的string容器"'},"​")],-1),h=A(`<h2 id="c-的string容器-1" tabindex="-1">C++的string容器 <a class="header-anchor" href="#c-的string容器-1" aria-label="Permalink to &quot;C++的string容器&quot;">​</a></h2><h3 id="_1、构造函数以及赋值" tabindex="-1">1、构造函数以及赋值 <a class="header-anchor" href="#_1、构造函数以及赋值" aria-label="Permalink to &quot;1、构造函数以及赋值&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#adbac7;">1 3.1.2.1 string 构造函数</span></span>
<span class="line"><span style="color:#adbac7;">2 string();//创建一个空的字符串 例如: string str;</span></span>
<span class="line"><span style="color:#adbac7;">3 string(const string&amp; str);//使用一个string对象初始化另一个string对象</span></span>
<span class="line"><span style="color:#adbac7;">4 string(const char* s);//使用字符串s初始化</span></span>
<span class="line"><span style="color:#adbac7;">5 string(int n, char c);//使用n个字符c初始化 v</span></span>
<span class="line"><span style="color:#adbac7;"></span></span>
<span class="line"><span style="color:#adbac7;">6 3.1.2.2 string基本赋值操作</span></span>
<span class="line"><span style="color:#adbac7;">7 string&amp; operator=(const char* s);//char*类型字符串 赋值给当前的字符串</span></span>
<span class="line"><span style="color:#adbac7;">8 string&amp; operator=(const string &amp;s);//把字符串s赋给当前的字符串</span></span>
<span class="line"><span style="color:#adbac7;">9 string&amp; operator=(char c);//字符赋值给当前的字符串</span></span>
<span class="line"><span style="color:#adbac7;">10 string&amp; assign(const char *s);//把字符串s赋给当前的字符串</span></span>
<span class="line"><span style="color:#adbac7;">11 string&amp; assign(const char *s, int n);//把字符串s的前n个字符赋给当前的字符串</span></span>
<span class="line"><span style="color:#adbac7;">12 string&amp; assign(const string &amp;s);//把字符串s赋给当前字符串</span></span>
<span class="line"><span style="color:#adbac7;">13 string&amp; assign(int n, char c);//用n个字符c赋给当前字符串</span></span>
<span class="line"><span style="color:#adbac7;">14 string&amp; assign(const string &amp;s, int start, int n);//将s从start开始n个字符赋值给字符串</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">1 3.1.2.1 string 构造函数</span></span>
<span class="line"><span style="color:#24292e;">2 string();//创建一个空的字符串 例如: string str;</span></span>
<span class="line"><span style="color:#24292e;">3 string(const string&amp; str);//使用一个string对象初始化另一个string对象</span></span>
<span class="line"><span style="color:#24292e;">4 string(const char* s);//使用字符串s初始化</span></span>
<span class="line"><span style="color:#24292e;">5 string(int n, char c);//使用n个字符c初始化 v</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">6 3.1.2.2 string基本赋值操作</span></span>
<span class="line"><span style="color:#24292e;">7 string&amp; operator=(const char* s);//char*类型字符串 赋值给当前的字符串</span></span>
<span class="line"><span style="color:#24292e;">8 string&amp; operator=(const string &amp;s);//把字符串s赋给当前的字符串</span></span>
<span class="line"><span style="color:#24292e;">9 string&amp; operator=(char c);//字符赋值给当前的字符串</span></span>
<span class="line"><span style="color:#24292e;">10 string&amp; assign(const char *s);//把字符串s赋给当前的字符串</span></span>
<span class="line"><span style="color:#24292e;">11 string&amp; assign(const char *s, int n);//把字符串s的前n个字符赋给当前的字符串</span></span>
<span class="line"><span style="color:#24292e;">12 string&amp; assign(const string &amp;s);//把字符串s赋给当前字符串</span></span>
<span class="line"><span style="color:#24292e;">13 string&amp; assign(int n, char c);//用n个字符c赋给当前字符串</span></span>
<span class="line"><span style="color:#24292e;">14 string&amp; assign(const string &amp;s, int start, int n);//将s从start开始n个字符赋值给字符串</span></span></code></pre></div><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">void</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">test01</span><span style="color:#ADBAC7;">()</span></span>
<span class="line"><span style="color:#ADBAC7;">{</span></span>
<span class="line"><span style="color:#ADBAC7;">   string </span><span style="color:#DCBDFB;">str1</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;hello world&quot;</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#ADBAC7;">   cout</span><span style="color:#F47067;">&lt;&lt;</span><span style="color:#ADBAC7;">str1</span><span style="color:#F47067;">&lt;&lt;</span><span style="color:#ADBAC7;">endl;</span><span style="color:#768390;">   // hello world</span></span>
<span class="line"><span style="color:#ADBAC7;">   string </span><span style="color:#DCBDFB;">str2</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">5</span><span style="color:#ADBAC7;">,</span><span style="color:#96D0FF;">&#39;A&#39;</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#ADBAC7;">   cout</span><span style="color:#F47067;">&lt;&lt;</span><span style="color:#ADBAC7;">str2</span><span style="color:#F47067;">&lt;&lt;</span><span style="color:#ADBAC7;">endl;</span><span style="color:#768390;">   // AAAAA</span></span>
<span class="line"><span style="color:#ADBAC7;">   string str3 </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> str2;</span></span>
<span class="line"><span style="color:#ADBAC7;">   cout</span><span style="color:#F47067;">&lt;&lt;</span><span style="color:#ADBAC7;">str3</span><span style="color:#F47067;">&lt;&lt;</span><span style="color:#ADBAC7;">endl;</span><span style="color:#768390;">   // AAAAA</span></span>
<span class="line"><span style="color:#ADBAC7;">   </span></span>
<span class="line"><span style="color:#ADBAC7;">   string str4;</span></span>
<span class="line"><span style="color:#ADBAC7;">   str4 </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">&quot;hello world&quot;</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">   cout</span><span style="color:#F47067;">&lt;&lt;</span><span style="color:#ADBAC7;">str4</span><span style="color:#F47067;">&lt;&lt;</span><span style="color:#ADBAC7;">endl;</span><span style="color:#768390;"> // hello world</span></span>
<span class="line"><span style="color:#ADBAC7;">   str4 </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">&#39;W&#39;</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">   cout</span><span style="color:#F47067;">&lt;&lt;</span><span style="color:#ADBAC7;">str4</span><span style="color:#F47067;">&lt;&lt;</span><span style="color:#ADBAC7;">endl;</span><span style="color:#768390;">// 	W</span></span>
<span class="line"><span style="color:#ADBAC7;">   </span></span>
<span class="line"><span style="color:#ADBAC7;">   str4.</span><span style="color:#DCBDFB;">assign</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;hello world&quot;</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">5</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#ADBAC7;">   cout</span><span style="color:#F47067;">&lt;&lt;</span><span style="color:#ADBAC7;">str4</span><span style="color:#F47067;">&lt;&lt;</span><span style="color:#ADBAC7;">endl;</span><span style="color:#768390;"> //hello </span></span>
<span class="line"><span style="color:#ADBAC7;">   str4.</span><span style="color:#DCBDFB;">assign</span><span style="color:#ADBAC7;">(str1, </span><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">3</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#ADBAC7;">   cout</span><span style="color:#F47067;">&lt;&lt;</span><span style="color:#ADBAC7;">str4</span><span style="color:#F47067;">&lt;&lt;</span><span style="color:#ADBAC7;">endl;</span><span style="color:#768390;"> // llo</span></span>
<span class="line"><span style="color:#ADBAC7;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">test01</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">   string </span><span style="color:#6F42C1;">str1</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;hello world&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">   cout</span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;">str1</span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;">endl;</span><span style="color:#6A737D;">   // hello world</span></span>
<span class="line"><span style="color:#24292E;">   string </span><span style="color:#6F42C1;">str2</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">5</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&#39;A&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">   cout</span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;">str2</span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;">endl;</span><span style="color:#6A737D;">   // AAAAA</span></span>
<span class="line"><span style="color:#24292E;">   string str3 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> str2;</span></span>
<span class="line"><span style="color:#24292E;">   cout</span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;">str3</span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;">endl;</span><span style="color:#6A737D;">   // AAAAA</span></span>
<span class="line"><span style="color:#24292E;">   </span></span>
<span class="line"><span style="color:#24292E;">   string str4;</span></span>
<span class="line"><span style="color:#24292E;">   str4 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;hello world&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">   cout</span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;">str4</span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;">endl;</span><span style="color:#6A737D;"> // hello world</span></span>
<span class="line"><span style="color:#24292E;">   str4 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;W&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">   cout</span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;">str4</span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;">endl;</span><span style="color:#6A737D;">// 	W</span></span>
<span class="line"><span style="color:#24292E;">   </span></span>
<span class="line"><span style="color:#24292E;">   str4.</span><span style="color:#6F42C1;">assign</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;hello world&quot;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">5</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">   cout</span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;">str4</span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;">endl;</span><span style="color:#6A737D;"> //hello </span></span>
<span class="line"><span style="color:#24292E;">   str4.</span><span style="color:#6F42C1;">assign</span><span style="color:#24292E;">(str1, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">   cout</span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;">str4</span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;">endl;</span><span style="color:#6A737D;"> // llo</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>注意：以上代码是使用C++编写的。</p><h3 id="_2、string存取字符操作" tabindex="-1">2、string存取字符操作 <a class="header-anchor" href="#_2、string存取字符操作" aria-label="Permalink to &quot;2、string存取字符操作&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#adbac7;">1 char&amp; operator[](int n);//通过[]方式取字符</span></span>
<span class="line"><span style="color:#adbac7;">2 char&amp; at(int n);//通过at方法获取字符</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">1 char&amp; operator[](int n);//通过[]方式取字符</span></span>
<span class="line"><span style="color:#24292e;">2 char&amp; at(int n);//通过at方法获取字符</span></span></code></pre></div><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">void</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">test02</span><span style="color:#ADBAC7;">()</span></span>
<span class="line"><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#6CB6FF;">3</span><span style="color:#ADBAC7;"> string str1</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&quot;hello world&quot;</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#6CB6FF;">4</span><span style="color:#ADBAC7;"> cout</span><span style="color:#F47067;">&lt;&lt;</span><span style="color:#ADBAC7;">str1[</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">]</span><span style="color:#F47067;">&lt;&lt;</span><span style="color:#96D0FF;">&quot; &quot;</span><span style="color:#F47067;">&lt;&lt;</span><span style="color:#ADBAC7;">str1.</span><span style="color:#DCBDFB;">at</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">)</span><span style="color:#F47067;">&lt;&lt;</span><span style="color:#ADBAC7;">endl;</span><span style="color:#768390;"> //e  e</span></span>
<span class="line"><span style="color:#6CB6FF;">5</span><span style="color:#ADBAC7;"> str1[</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">]</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&#39;E&#39;</span><span style="color:#ADBAC7;">;</span><span style="color:#768390;">   // 取了之后赋值</span></span>
<span class="line"><span style="color:#6CB6FF;">6</span><span style="color:#ADBAC7;"> str1.</span><span style="color:#DCBDFB;">at</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">6</span><span style="color:#ADBAC7;">)</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&#39;H&#39;</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#6CB6FF;">7</span><span style="color:#ADBAC7;"> cout</span><span style="color:#F47067;">&lt;&lt;</span><span style="color:#ADBAC7;">str1</span><span style="color:#F47067;">&lt;&lt;</span><span style="color:#ADBAC7;">endl;</span><span style="color:#768390;"> // hEllo Horld</span></span>
<span class="line"><span style="color:#6CB6FF;">8</span></span>
<span class="line"><span style="color:#6CB6FF;">9</span><span style="color:#768390;"> //[] 越界不会抛出异常 at越界会抛出异常</span></span>
<span class="line"><span style="color:#6CB6FF;">10</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">try</span></span>
<span class="line"><span style="color:#6CB6FF;">11</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#6CB6FF;">12</span><span style="color:#768390;"> //str1[1000]=&#39;A&#39;;</span></span>
<span class="line"><span style="color:#6CB6FF;">13</span><span style="color:#ADBAC7;"> str1.</span><span style="color:#DCBDFB;">at</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">1000</span><span style="color:#ADBAC7;">)</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&#39;A&#39;</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#6CB6FF;">14</span><span style="color:#ADBAC7;"> }</span></span>
<span class="line"><span style="color:#6CB6FF;">15</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">catch</span><span style="color:#ADBAC7;">(exception </span><span style="color:#F47067;">&amp;</span><span style="color:#ADBAC7;">e)</span></span>
<span class="line"><span style="color:#6CB6FF;">16</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#6CB6FF;">17</span><span style="color:#ADBAC7;"> cout</span><span style="color:#F47067;">&lt;&lt;</span><span style="color:#96D0FF;">&quot;捕获到异常:&quot;</span><span style="color:#F47067;">&lt;&lt;</span><span style="color:#ADBAC7;">e.</span><span style="color:#DCBDFB;">what</span><span style="color:#ADBAC7;">()</span><span style="color:#F47067;">&lt;&lt;</span><span style="color:#ADBAC7;">endl;</span></span>
<span class="line"><span style="color:#6CB6FF;">18</span><span style="color:#ADBAC7;"> }</span></span>
<span class="line"><span style="color:#6CB6FF;">19</span><span style="color:#ADBAC7;"> }</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">1</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">test02</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#005CC5;">2</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#005CC5;">3</span><span style="color:#24292E;"> string str1</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;hello world&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#005CC5;">4</span><span style="color:#24292E;"> cout</span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;">str1[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">]</span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#032F62;">&quot; &quot;</span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;">str1.</span><span style="color:#6F42C1;">at</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;">endl;</span><span style="color:#6A737D;"> //e  e</span></span>
<span class="line"><span style="color:#005CC5;">5</span><span style="color:#24292E;"> str1[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">]</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;E&#39;</span><span style="color:#24292E;">;</span><span style="color:#6A737D;">   // 取了之后赋值</span></span>
<span class="line"><span style="color:#005CC5;">6</span><span style="color:#24292E;"> str1.</span><span style="color:#6F42C1;">at</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">6</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;H&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#005CC5;">7</span><span style="color:#24292E;"> cout</span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;">str1</span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;">endl;</span><span style="color:#6A737D;"> // hEllo Horld</span></span>
<span class="line"><span style="color:#005CC5;">8</span></span>
<span class="line"><span style="color:#005CC5;">9</span><span style="color:#6A737D;"> //[] 越界不会抛出异常 at越界会抛出异常</span></span>
<span class="line"><span style="color:#005CC5;">10</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">try</span></span>
<span class="line"><span style="color:#005CC5;">11</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#005CC5;">12</span><span style="color:#6A737D;"> //str1[1000]=&#39;A&#39;;</span></span>
<span class="line"><span style="color:#005CC5;">13</span><span style="color:#24292E;"> str1.</span><span style="color:#6F42C1;">at</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1000</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;A&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#005CC5;">14</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#005CC5;">15</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">catch</span><span style="color:#24292E;">(exception </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;">e)</span></span>
<span class="line"><span style="color:#005CC5;">16</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#005CC5;">17</span><span style="color:#24292E;"> cout</span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#032F62;">&quot;捕获到异常:&quot;</span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;">e.</span><span style="color:#6F42C1;">what</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;">endl;</span></span>
<span class="line"><span style="color:#005CC5;">18</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#005CC5;">19</span><span style="color:#24292E;"> }</span></span></code></pre></div><h3 id="_3、string拼接操作" tabindex="-1">3、string拼接操作 <a class="header-anchor" href="#_3、string拼接操作" aria-label="Permalink to &quot;3、string拼接操作&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#adbac7;">1 3.1.2.4</span></span>
<span class="line"><span style="color:#adbac7;">2 string&amp; operator+=(const string&amp; str);//重载+=操作符</span></span>
<span class="line"><span style="color:#adbac7;">3 string&amp; operator+=(const char* str);//重载+=操作符</span></span>
<span class="line"><span style="color:#adbac7;">4 string&amp; operator+=(const char c);//重载+=操作符</span></span>
<span class="line"><span style="color:#adbac7;">5 string&amp; append(const char *s);//把字符串s连接到当前字符串结尾</span></span>
<span class="line"><span style="color:#adbac7;">6 string&amp; append(const char *s, int n);//把字符串s的前n个字符连接到当前字符串结尾</span></span>
<span class="line"><span style="color:#adbac7;">7 string&amp; append(const string &amp;s);//同operator+=()</span></span>
<span class="line"><span style="color:#adbac7;">8 string&amp; append(const string &amp;s, int pos, int n);//把字符串s中从pos开始的n个字符连接到当前字符串结尾</span></span>
<span class="line"><span style="color:#adbac7;">9 string&amp; append(int n, char c);//在当前字符串结尾添加n个字符c</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">1 3.1.2.4</span></span>
<span class="line"><span style="color:#24292e;">2 string&amp; operator+=(const string&amp; str);//重载+=操作符</span></span>
<span class="line"><span style="color:#24292e;">3 string&amp; operator+=(const char* str);//重载+=操作符</span></span>
<span class="line"><span style="color:#24292e;">4 string&amp; operator+=(const char c);//重载+=操作符</span></span>
<span class="line"><span style="color:#24292e;">5 string&amp; append(const char *s);//把字符串s连接到当前字符串结尾</span></span>
<span class="line"><span style="color:#24292e;">6 string&amp; append(const char *s, int n);//把字符串s的前n个字符连接到当前字符串结尾</span></span>
<span class="line"><span style="color:#24292e;">7 string&amp; append(const string &amp;s);//同operator+=()</span></span>
<span class="line"><span style="color:#24292e;">8 string&amp; append(const string &amp;s, int pos, int n);//把字符串s中从pos开始的n个字符连接到当前字符串结尾</span></span>
<span class="line"><span style="color:#24292e;">9 string&amp; append(int n, char c);//在当前字符串结尾添加n个字符c</span></span></code></pre></div><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">void</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">test03</span><span style="color:#ADBAC7;">()</span></span>
<span class="line"><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#6CB6FF;">3</span><span style="color:#ADBAC7;"> string str1</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&quot;hello&quot;</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#6CB6FF;">4</span><span style="color:#ADBAC7;"> str1 </span><span style="color:#F47067;">+=</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">&quot;world&quot;</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#6CB6FF;">5</span><span style="color:#ADBAC7;"> cout</span><span style="color:#F47067;">&lt;&lt;</span><span style="color:#ADBAC7;">str1</span><span style="color:#F47067;">&lt;&lt;</span><span style="color:#ADBAC7;">endl;</span></span>
<span class="line"><span style="color:#6CB6FF;">6</span></span>
<span class="line"><span style="color:#6CB6FF;">7</span><span style="color:#ADBAC7;"> string str2</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&quot;hehe&quot;</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#6CB6FF;">8</span><span style="color:#ADBAC7;"> str1 </span><span style="color:#F47067;">+=</span><span style="color:#ADBAC7;"> str2;</span></span>
<span class="line"><span style="color:#6CB6FF;">9</span><span style="color:#ADBAC7;"> cout</span><span style="color:#F47067;">&lt;&lt;</span><span style="color:#ADBAC7;">str1</span><span style="color:#F47067;">&lt;&lt;</span><span style="color:#ADBAC7;">endl;</span></span>
<span class="line"><span style="color:#6CB6FF;">10</span></span>
<span class="line"><span style="color:#6CB6FF;">11</span><span style="color:#ADBAC7;"> string str3</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&quot;hello&quot;</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#6CB6FF;">12</span><span style="color:#ADBAC7;"> string str4</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&quot;world&quot;</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#6CB6FF;">13</span><span style="color:#ADBAC7;"> cout</span><span style="color:#F47067;">&lt;&lt;</span><span style="color:#ADBAC7;">str3</span><span style="color:#F47067;">+</span><span style="color:#ADBAC7;">str4</span><span style="color:#F47067;">&lt;&lt;</span><span style="color:#ADBAC7;">endl;</span></span>
<span class="line"><span style="color:#6CB6FF;">14</span></span>
<span class="line"><span style="color:#6CB6FF;">15</span><span style="color:#ADBAC7;"> string str5</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&quot;hello&quot;</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#6CB6FF;">16</span><span style="color:#ADBAC7;"> string str6</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&quot;world&quot;</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#6CB6FF;">17</span><span style="color:#ADBAC7;"> str5.</span><span style="color:#DCBDFB;">append</span><span style="color:#ADBAC7;">(str6, </span><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">3</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#6CB6FF;">18</span><span style="color:#ADBAC7;"> cout</span><span style="color:#F47067;">&lt;&lt;</span><span style="color:#ADBAC7;">str5</span><span style="color:#F47067;">&lt;&lt;</span><span style="color:#ADBAC7;">endl;</span></span>
<span class="line"><span style="color:#6CB6FF;">19</span><span style="color:#ADBAC7;"> str5.</span><span style="color:#DCBDFB;">append</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;world&quot;</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">3</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#6CB6FF;">20</span><span style="color:#ADBAC7;"> cout</span><span style="color:#F47067;">&lt;&lt;</span><span style="color:#ADBAC7;">str5</span><span style="color:#F47067;">&lt;&lt;</span><span style="color:#ADBAC7;">endl;</span></span>
<span class="line"><span style="color:#6CB6FF;">21</span><span style="color:#ADBAC7;"> }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">helloworld</span></span>
<span class="line"><span style="color:#ADBAC7;">helloworldhehe</span></span>
<span class="line"><span style="color:#ADBAC7;">helloworld</span></span>
<span class="line"><span style="color:#ADBAC7;">hellorld</span></span>
<span class="line"><span style="color:#ADBAC7;">hellorldwor</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">1</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">test03</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#005CC5;">2</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#005CC5;">3</span><span style="color:#24292E;"> string str1</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;hello&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#005CC5;">4</span><span style="color:#24292E;"> str1 </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;world&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#005CC5;">5</span><span style="color:#24292E;"> cout</span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;">str1</span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;">endl;</span></span>
<span class="line"><span style="color:#005CC5;">6</span></span>
<span class="line"><span style="color:#005CC5;">7</span><span style="color:#24292E;"> string str2</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;hehe&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#005CC5;">8</span><span style="color:#24292E;"> str1 </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> str2;</span></span>
<span class="line"><span style="color:#005CC5;">9</span><span style="color:#24292E;"> cout</span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;">str1</span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;">endl;</span></span>
<span class="line"><span style="color:#005CC5;">10</span></span>
<span class="line"><span style="color:#005CC5;">11</span><span style="color:#24292E;"> string str3</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;hello&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#005CC5;">12</span><span style="color:#24292E;"> string str4</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;world&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#005CC5;">13</span><span style="color:#24292E;"> cout</span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;">str3</span><span style="color:#D73A49;">+</span><span style="color:#24292E;">str4</span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;">endl;</span></span>
<span class="line"><span style="color:#005CC5;">14</span></span>
<span class="line"><span style="color:#005CC5;">15</span><span style="color:#24292E;"> string str5</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;hello&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#005CC5;">16</span><span style="color:#24292E;"> string str6</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;world&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#005CC5;">17</span><span style="color:#24292E;"> str5.</span><span style="color:#6F42C1;">append</span><span style="color:#24292E;">(str6, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#005CC5;">18</span><span style="color:#24292E;"> cout</span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;">str5</span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;">endl;</span></span>
<span class="line"><span style="color:#005CC5;">19</span><span style="color:#24292E;"> str5.</span><span style="color:#6F42C1;">append</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;world&quot;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#005CC5;">20</span><span style="color:#24292E;"> cout</span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;">str5</span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;">endl;</span></span>
<span class="line"><span style="color:#005CC5;">21</span><span style="color:#24292E;"> }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">helloworld</span></span>
<span class="line"><span style="color:#24292E;">helloworldhehe</span></span>
<span class="line"><span style="color:#24292E;">helloworld</span></span>
<span class="line"><span style="color:#24292E;">hellorld</span></span>
<span class="line"><span style="color:#24292E;">hellorldwor</span></span></code></pre></div><h3 id="_4、string查找和替换" tabindex="-1">4、string查找和替换 <a class="header-anchor" href="#_4、string查找和替换" aria-label="Permalink to &quot;4、string查找和替换&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#adbac7;">1 int find(const string&amp; str, int pos = 0) const; //查找str第一次出现位置,pos开始查找</span></span>
<span class="line"><span style="color:#adbac7;">2 int find(const char* s, int pos = 0) const; //查找s第一次出现位置,从pos开始查找</span></span>
<span class="line"><span style="color:#adbac7;">3 int find(const char* s, int pos, int n) const; //从pos位置查找s的前n个字第一次位置</span></span>
<span class="line"><span style="color:#adbac7;">4 int find(const char c, int pos = 0) const; //查找字符c第一次出现位置</span></span>
<span class="line"><span style="color:#adbac7;">5 int rfind(const string&amp; str, int pos = npos) const;//查找str最后一次位置,从pos开始查找</span></span>
<span class="line"><span style="color:#adbac7;">6 int rfind(const char* s, int pos = npos) const;//查找s最后一次出现位置,从pos开始查找</span></span>
<span class="line"><span style="color:#adbac7;">7 int rfind(const char* s, int pos, int n) const;//从pos查找s的前n个字符最后一次位置</span></span>
<span class="line"><span style="color:#adbac7;">8 int rfind(const char c, int pos = 0) const; //查找字符c最后一次出现位置</span></span>
<span class="line"><span style="color:#adbac7;">9 string&amp; replace(int pos, int n, const string&amp; str); //替换从pos开始n个字符为字符串str</span></span>
<span class="line"><span style="color:#adbac7;">10 string&amp; replace(int pos, int n, const char* s); //替换从pos开始的n个字符为字符串s</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">1 int find(const string&amp; str, int pos = 0) const; //查找str第一次出现位置,pos开始查找</span></span>
<span class="line"><span style="color:#24292e;">2 int find(const char* s, int pos = 0) const; //查找s第一次出现位置,从pos开始查找</span></span>
<span class="line"><span style="color:#24292e;">3 int find(const char* s, int pos, int n) const; //从pos位置查找s的前n个字第一次位置</span></span>
<span class="line"><span style="color:#24292e;">4 int find(const char c, int pos = 0) const; //查找字符c第一次出现位置</span></span>
<span class="line"><span style="color:#24292e;">5 int rfind(const string&amp; str, int pos = npos) const;//查找str最后一次位置,从pos开始查找</span></span>
<span class="line"><span style="color:#24292e;">6 int rfind(const char* s, int pos = npos) const;//查找s最后一次出现位置,从pos开始查找</span></span>
<span class="line"><span style="color:#24292e;">7 int rfind(const char* s, int pos, int n) const;//从pos查找s的前n个字符最后一次位置</span></span>
<span class="line"><span style="color:#24292e;">8 int rfind(const char c, int pos = 0) const; //查找字符c最后一次出现位置</span></span>
<span class="line"><span style="color:#24292e;">9 string&amp; replace(int pos, int n, const string&amp; str); //替换从pos开始n个字符为字符串str</span></span>
<span class="line"><span style="color:#24292e;">10 string&amp; replace(int pos, int n, const char* s); //替换从pos开始的n个字符为字符串s</span></span></code></pre></div><h3 id="_5、string比较操作" tabindex="-1">5、string比较操作 <a class="header-anchor" href="#_5、string比较操作" aria-label="Permalink to &quot;5、string比较操作&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#adbac7;">1 &gt; &lt; == != 运算符 可用</span></span>
<span class="line"><span style="color:#adbac7;">2 /*</span></span>
<span class="line"><span style="color:#adbac7;">3 compare函数在&gt;时返回 1，&lt;时返回 ‐1，==时返回 0。</span></span>
<span class="line"><span style="color:#adbac7;">4 比较区分大小写，比较时参考字典顺序，排越前面的越小。</span></span>
<span class="line"><span style="color:#adbac7;">5 大写的A比小写的a小。</span></span>
<span class="line"><span style="color:#adbac7;">6 */</span></span>
<span class="line"><span style="color:#adbac7;">7 int compare(const string &amp;s) const;//与字符串s比较</span></span>
<span class="line"><span style="color:#adbac7;">8 int compare(const char *s) const;//与字符串s比较</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">1 &gt; &lt; == != 运算符 可用</span></span>
<span class="line"><span style="color:#24292e;">2 /*</span></span>
<span class="line"><span style="color:#24292e;">3 compare函数在&gt;时返回 1，&lt;时返回 ‐1，==时返回 0。</span></span>
<span class="line"><span style="color:#24292e;">4 比较区分大小写，比较时参考字典顺序，排越前面的越小。</span></span>
<span class="line"><span style="color:#24292e;">5 大写的A比小写的a小。</span></span>
<span class="line"><span style="color:#24292e;">6 */</span></span>
<span class="line"><span style="color:#24292e;">7 int compare(const string &amp;s) const;//与字符串s比较</span></span>
<span class="line"><span style="color:#24292e;">8 int compare(const char *s) const;//与字符串s比较</span></span></code></pre></div><h3 id="_6、提取string子串" tabindex="-1">6、提取string子串 <a class="header-anchor" href="#_6、提取string子串" aria-label="Permalink to &quot;6、提取string子串&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#adbac7;">1 string substr(int pos = 0, int n = npos) const;//返回由pos开始的n个字符组成的字符串</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">1 string substr(int pos = 0, int n = npos) const;//返回由pos开始的n个字符组成的字符串</span></span></code></pre></div><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">void</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">test06</span><span style="color:#ADBAC7;">()</span></span>
<span class="line"><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#6CB6FF;">3</span><span style="color:#ADBAC7;"> string str1</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&quot;hehehe:hahaha:xixixi:lalala&quot;</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#6CB6FF;">4</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;"> pos </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#6CB6FF;">5</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">while</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#6CB6FF;">6</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#6CB6FF;">7</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;"> ret </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> str1.</span><span style="color:#DCBDFB;">find</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;:&quot;</span><span style="color:#ADBAC7;">, pos);</span></span>
<span class="line"><span style="color:#6CB6FF;">8</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;">(ret </span><span style="color:#F47067;">&lt;</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#6CB6FF;">9</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#6CB6FF;">10</span><span style="color:#ADBAC7;"> string tmp </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> str1.</span><span style="color:#DCBDFB;">substr</span><span style="color:#ADBAC7;">(pos, str1.</span><span style="color:#DCBDFB;">size</span><span style="color:#ADBAC7;">()‐pos);</span></span>
<span class="line"><span style="color:#6CB6FF;">11</span><span style="color:#ADBAC7;"> cout</span><span style="color:#F47067;">&lt;&lt;</span><span style="color:#ADBAC7;">tmp</span><span style="color:#F47067;">&lt;&lt;</span><span style="color:#ADBAC7;">endl;</span></span>
<span class="line"><span style="color:#6CB6FF;">12</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">break</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#6CB6FF;">13</span><span style="color:#ADBAC7;"> }</span></span>
<span class="line"><span style="color:#6CB6FF;">14</span></span>
<span class="line"><span style="color:#6CB6FF;">15</span><span style="color:#ADBAC7;"> string tmp </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> str1.</span><span style="color:#DCBDFB;">substr</span><span style="color:#ADBAC7;">(pos, ret‐pos);</span></span>
<span class="line"><span style="color:#6CB6FF;">16</span><span style="color:#ADBAC7;"> cout</span><span style="color:#F47067;">&lt;&lt;</span><span style="color:#ADBAC7;">tmp</span><span style="color:#F47067;">&lt;&lt;</span><span style="color:#ADBAC7;">endl;</span></span>
<span class="line"><span style="color:#6CB6FF;">17</span></span>
<span class="line"><span style="color:#6CB6FF;">18</span><span style="color:#ADBAC7;"> pos </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> ret</span><span style="color:#F47067;">+</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#6CB6FF;">19</span><span style="color:#ADBAC7;"> }</span></span>
<span class="line"><span style="color:#6CB6FF;">20</span><span style="color:#ADBAC7;"> }</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">1</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">test06</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#005CC5;">2</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#005CC5;">3</span><span style="color:#24292E;"> string str1</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;hehehe:hahaha:xixixi:lalala&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#005CC5;">4</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> pos </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#005CC5;">5</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">while</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#005CC5;">6</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#005CC5;">7</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> ret </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> str1.</span><span style="color:#6F42C1;">find</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;:&quot;</span><span style="color:#24292E;">, pos);</span></span>
<span class="line"><span style="color:#005CC5;">8</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(ret </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#005CC5;">9</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#005CC5;">10</span><span style="color:#24292E;"> string tmp </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> str1.</span><span style="color:#6F42C1;">substr</span><span style="color:#24292E;">(pos, str1.</span><span style="color:#6F42C1;">size</span><span style="color:#24292E;">()‐pos);</span></span>
<span class="line"><span style="color:#005CC5;">11</span><span style="color:#24292E;"> cout</span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;">tmp</span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;">endl;</span></span>
<span class="line"><span style="color:#005CC5;">12</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">break</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#005CC5;">13</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#005CC5;">14</span></span>
<span class="line"><span style="color:#005CC5;">15</span><span style="color:#24292E;"> string tmp </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> str1.</span><span style="color:#6F42C1;">substr</span><span style="color:#24292E;">(pos, ret‐pos);</span></span>
<span class="line"><span style="color:#005CC5;">16</span><span style="color:#24292E;"> cout</span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;">tmp</span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;">endl;</span></span>
<span class="line"><span style="color:#005CC5;">17</span></span>
<span class="line"><span style="color:#005CC5;">18</span><span style="color:#24292E;"> pos </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ret</span><span style="color:#D73A49;">+</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#005CC5;">19</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#005CC5;">20</span><span style="color:#24292E;"> }</span></span></code></pre></div><h3 id="_7、string插入和删除操作" tabindex="-1">7、string插入和删除操作 <a class="header-anchor" href="#_7、string插入和删除操作" aria-label="Permalink to &quot;7、string插入和删除操作&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#adbac7;">1 string&amp; insert(int pos, const char* s); //插入字符串</span></span>
<span class="line"><span style="color:#adbac7;">2 string&amp; insert(int pos, const string&amp; str); //插入字符串</span></span>
<span class="line"><span style="color:#adbac7;">3 string&amp; insert(int pos, int n, char c);//在指定位置插入n个字符c</span></span>
<span class="line"><span style="color:#adbac7;">4 string&amp; erase(int pos, int n = npos);//删除从Pos开始的n个字符</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">1 string&amp; insert(int pos, const char* s); //插入字符串</span></span>
<span class="line"><span style="color:#24292e;">2 string&amp; insert(int pos, const string&amp; str); //插入字符串</span></span>
<span class="line"><span style="color:#24292e;">3 string&amp; insert(int pos, int n, char c);//在指定位置插入n个字符c</span></span>
<span class="line"><span style="color:#24292e;">4 string&amp; erase(int pos, int n = npos);//删除从Pos开始的n个字符</span></span></code></pre></div><h3 id="_8、-string和c-style字符串转换" tabindex="-1">8、 string和c-style字符串转换 <a class="header-anchor" href="#_8、-string和c-style字符串转换" aria-label="Permalink to &quot;8、 string和c-style字符串转换&quot;">​</a></h3><p><img src="https://cdn.staticaly.com/gh/clint-sfy/blogcdn@master/img/c_plus/STL2.png" alt=""></p><h2 id="" tabindex="-1"><a class="header-anchor" href="#" aria-label="Permalink to &quot;&quot;">​</a></h2>`,23);function u(s,E,m,b,q,v){const o=e,t=d("ClientOnly");return l(),r("div",null,[g,y(t,null,{default:i(()=>{var n,a;return[(((n=s.$frontmatter)==null?void 0:n.aside)??!0)&&(((a=s.$frontmatter)==null?void 0:a.showArticleMetadata)??!0)?(l(),D(o,{key:0,article:s.$frontmatter},null,8,["article"])):F("",!0)]}),_:1}),h])}const x=c(B,[["render",u]]);export{w as __pageData,x as default};
