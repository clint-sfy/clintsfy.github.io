import{_ as c}from"./chunks/ArticleMetadata.e10718d6.js";import{_ as t,v as p,b as r,E as y,O as A,F as l,L as i,R as d,M as D,C,B as F}from"./chunks/framework.2aeb816e.js";import"./chunks/md5.772bbdf1.js";const q=JSON.parse('{"title":"pandas基础","description":"","frontmatter":{"title":"pandas基础","author":"阿源","date":"2023/05/03 21:29","categories":["Python进阶"],"tags":["python","pandas"]},"headers":[],"relativePath":"courses/python/02-python进阶篇/02-pandas.md","filePath":"courses/python/02-python进阶篇/02-pandas.md","lastUpdated":1691327334000}'),B={name:"courses/python/02-python进阶篇/02-pandas.md"},E=l("h1",{id:"pandas基础",tabindex:"-1"},[i("pandas基础 "),l("a",{class:"header-anchor",href:"#pandas基础","aria-label":'Permalink to "pandas基础"'},"​")],-1),g=d(`<h2 id="pandas" tabindex="-1">pandas <a class="header-anchor" href="#pandas" aria-label="Permalink to &quot;pandas&quot;">​</a></h2><h3 id="_1-概述" tabindex="-1">1. 概述 <a class="header-anchor" href="#_1-概述" aria-label="Permalink to &quot;1. 概述&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">import</span><span style="color:#ADBAC7;"> pandas </span><span style="color:#F47067;">as</span><span style="color:#ADBAC7;"> pd</span></span>
<span class="line"><span style="color:#ADBAC7;">df </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> pd.read_csv(</span><span style="color:#96D0FF;">&#39;&#39;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">df.head(</span><span style="color:#6CB6FF;">5</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">df.info() </span><span style="color:#768390;"># 返回当前信息</span></span>
<span class="line"><span style="color:#ADBAC7;">df.index</span></span>
<span class="line"><span style="color:#ADBAC7;">df.columns</span></span>
<span class="line"><span style="color:#ADBAC7;">df.dtypes</span></span>
<span class="line"><span style="color:#ADBAC7;">df.values</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> pandas </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> pd</span></span>
<span class="line"><span style="color:#24292E;">df </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> pd.read_csv(</span><span style="color:#032F62;">&#39;&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">df.head(</span><span style="color:#005CC5;">5</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">df.info() </span><span style="color:#6A737D;"># 返回当前信息</span></span>
<span class="line"><span style="color:#24292E;">df.index</span></span>
<span class="line"><span style="color:#24292E;">df.columns</span></span>
<span class="line"><span style="color:#24292E;">df.dtypes</span></span>
<span class="line"><span style="color:#24292E;">df.values</span></span></code></pre></div><h3 id="_2-基本操作" tabindex="-1">2. 基本操作 <a class="header-anchor" href="#_2-基本操作" aria-label="Permalink to &quot;2. 基本操作&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#ADBAC7;">df </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> pd.DataFrame(data)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">df[</span><span style="color:#96D0FF;">&#39;Age&#39;</span><span style="color:#ADBAC7;">] </span><span style="color:#768390;"># 取指定的一列</span></span>
<span class="line"><span style="color:#ADBAC7;">df[</span><span style="color:#96D0FF;">&#39;Age&#39;</span><span style="color:#ADBAC7;">][:</span><span style="color:#6CB6FF;">5</span><span style="color:#ADBAC7;">] </span><span style="color:#768390;"># 取前五个</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">df </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> df.set_index(</span><span style="color:#96D0FF;">&#39;Name&#39;</span><span style="color:#ADBAC7;">)  </span><span style="color:#768390;"># 指定某一列为索引</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">age </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> df[</span><span style="color:#96D0FF;">&#39;Age&#39;</span><span style="color:#ADBAC7;">]</span></span>
<span class="line"><span style="color:#ADBAC7;">age.mean()</span></span>
<span class="line"><span style="color:#ADBAC7;">age.min()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">df.describe() </span><span style="color:#768390;"># 统计  包括样本值、均值、最小、最大、四分位</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">df </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> pd.DataFrame(data)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">df[</span><span style="color:#032F62;">&#39;Age&#39;</span><span style="color:#24292E;">] </span><span style="color:#6A737D;"># 取指定的一列</span></span>
<span class="line"><span style="color:#24292E;">df[</span><span style="color:#032F62;">&#39;Age&#39;</span><span style="color:#24292E;">][:</span><span style="color:#005CC5;">5</span><span style="color:#24292E;">] </span><span style="color:#6A737D;"># 取前五个</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">df </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> df.set_index(</span><span style="color:#032F62;">&#39;Name&#39;</span><span style="color:#24292E;">)  </span><span style="color:#6A737D;"># 指定某一列为索引</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">age </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> df[</span><span style="color:#032F62;">&#39;Age&#39;</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">age.mean()</span></span>
<span class="line"><span style="color:#24292E;">age.min()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">df.describe() </span><span style="color:#6A737D;"># 统计  包括样本值、均值、最小、最大、四分位</span></span></code></pre></div><h3 id="_3-索引" tabindex="-1">3. 索引 <a class="header-anchor" href="#_3-索引" aria-label="Permalink to &quot;3. 索引&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#ADBAC7;">df </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> pd.read_csv(</span><span style="color:#96D0FF;">&#39;&#39;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">df[[</span><span style="color:#96D0FF;">&#39;Age&#39;</span><span style="color:#ADBAC7;">,</span><span style="color:#96D0FF;">&#39;Fare&#39;</span><span style="color:#ADBAC7;">]][:</span><span style="color:#6CB6FF;">5</span><span style="color:#ADBAC7;">]</span></span>
<span class="line"><span style="color:#ADBAC7;"> </span></span>
<span class="line"><span style="color:#768390;"># iloc 用position1去定位</span></span>
<span class="line"><span style="color:#768390;"># loc 用label去定位 df.loc[&#39;A&#39;:&#39;C&#39; , &#39;s&#39;:&#39;d&#39;] 标签行到行  字段列到列</span></span>
<span class="line"><span style="color:#ADBAC7;">df.iloc[</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">:</span><span style="color:#6CB6FF;">5</span><span style="color:#ADBAC7;"> , </span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">:</span><span style="color:#6CB6FF;">3</span><span style="color:#ADBAC7;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">df </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> df.set_index(</span><span style="color:#96D0FF;">&#39;Name&#39;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">df.loc[</span><span style="color:#96D0FF;">&#39;Laina&#39;</span><span style="color:#ADBAC7;">]</span></span>
<span class="line"><span style="color:#ADBAC7;">df.loc[</span><span style="color:#96D0FF;">&#39;Laina&#39;</span><span style="color:#ADBAC7;">:</span><span style="color:#96D0FF;">&quot;Alex&quot;</span><span style="color:#ADBAC7;">,</span><span style="color:#96D0FF;">&#39;Fare&#39;</span><span style="color:#ADBAC7;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">df[</span><span style="color:#96D0FF;">&#39;Fare&#39;</span><span style="color:#ADBAC7;">] </span><span style="color:#F47067;">&gt;</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">40</span><span style="color:#ADBAC7;"> </span><span style="color:#768390;">#bool</span></span>
<span class="line"><span style="color:#ADBAC7;">df[df[</span><span style="color:#96D0FF;">&#39;Fare&#39;</span><span style="color:#ADBAC7;">] </span><span style="color:#F47067;">&gt;</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">40</span><span style="color:#ADBAC7;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">df.loc[df[</span><span style="color:#96D0FF;">&#39;sex&#39;</span><span style="color:#ADBAC7;">] </span><span style="color:#F47067;">==</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">&#39;male&#39;</span><span style="color:#ADBAC7;">, </span><span style="color:#96D0FF;">&#39;Age&#39;</span><span style="color:#ADBAC7;">].mean()</span></span>
<span class="line"><span style="color:#ADBAC7;">(df[</span><span style="color:#96D0FF;">&#39;Age&#39;</span><span style="color:#ADBAC7;">] </span><span style="color:#F47067;">&gt;</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">70</span><span style="color:#ADBAC7;">).sum()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">df </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> pd.read_csv(</span><span style="color:#032F62;">&#39;&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">df[[</span><span style="color:#032F62;">&#39;Age&#39;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&#39;Fare&#39;</span><span style="color:#24292E;">]][:</span><span style="color:#005CC5;">5</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#6A737D;"># iloc 用position1去定位</span></span>
<span class="line"><span style="color:#6A737D;"># loc 用label去定位 df.loc[&#39;A&#39;:&#39;C&#39; , &#39;s&#39;:&#39;d&#39;] 标签行到行  字段列到列</span></span>
<span class="line"><span style="color:#24292E;">df.iloc[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">5</span><span style="color:#24292E;"> , </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">df </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> df.set_index(</span><span style="color:#032F62;">&#39;Name&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">df.loc[</span><span style="color:#032F62;">&#39;Laina&#39;</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">df.loc[</span><span style="color:#032F62;">&#39;Laina&#39;</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&quot;Alex&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&#39;Fare&#39;</span><span style="color:#24292E;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">df[</span><span style="color:#032F62;">&#39;Fare&#39;</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">40</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">#bool</span></span>
<span class="line"><span style="color:#24292E;">df[df[</span><span style="color:#032F62;">&#39;Fare&#39;</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">40</span><span style="color:#24292E;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">df.loc[df[</span><span style="color:#032F62;">&#39;sex&#39;</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;male&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;Age&#39;</span><span style="color:#24292E;">].mean()</span></span>
<span class="line"><span style="color:#24292E;">(df[</span><span style="color:#032F62;">&#39;Age&#39;</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">70</span><span style="color:#24292E;">).sum()</span></span></code></pre></div><h3 id="_4-groupby" tabindex="-1">4. groupby <a class="header-anchor" href="#_4-groupby" aria-label="Permalink to &quot;4. groupby&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#ADBAC7;">df.groupby(</span><span style="color:#96D0FF;">&#39;key&#39;</span><span style="color:#ADBAC7;">).aggregate(np.sum)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">df.groupby(</span><span style="color:#96D0FF;">&#39;sex&#39;</span><span style="color:#ADBAC7;">)[</span><span style="color:#96D0FF;">&#39;Age&#39;</span><span style="color:#ADBAC7;">].mean()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">df.groupby(</span><span style="color:#032F62;">&#39;key&#39;</span><span style="color:#24292E;">).aggregate(np.sum)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">df.groupby(</span><span style="color:#032F62;">&#39;sex&#39;</span><span style="color:#24292E;">)[</span><span style="color:#032F62;">&#39;Age&#39;</span><span style="color:#24292E;">].mean()</span></span></code></pre></div><h3 id="_5-数值运算" tabindex="-1">5. 数值运算 <a class="header-anchor" href="#_5-数值运算" aria-label="Permalink to &quot;5. 数值运算&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#ADBAC7;">df.sum(</span><span style="color:#F69D50;">axis</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">df.median </span><span style="color:#768390;"># 中位数</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">df.sum(</span><span style="color:#E36209;">axis</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">df.median </span><span style="color:#6A737D;"># 中位数</span></span></code></pre></div><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#768390;"># 二元统计</span></span>
<span class="line"><span style="color:#ADBAC7;">df.cov()  </span><span style="color:#768390;">#协方差</span></span>
<span class="line"><span style="color:#ADBAC7;">df.corr() </span><span style="color:#768390;">#相关系数  </span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">df[</span><span style="color:#96D0FF;">&#39;age&#39;</span><span style="color:#ADBAC7;">].value_counts </span><span style="color:#768390;">#在不同年龄段 人数个数</span></span>
<span class="line"><span style="color:#ADBAC7;">df[</span><span style="color:#96D0FF;">&#39;age&#39;</span><span style="color:#ADBAC7;">].value_counts(</span><span style="color:#F69D50;">ascending</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">True</span><span style="color:#ADBAC7;">,</span><span style="color:#F69D50;">bins</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">5</span><span style="color:#ADBAC7;">) </span><span style="color:#768390;">#会升序 分成五组</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">df[</span><span style="color:#96D0FF;">&#39;age&#39;</span><span style="color:#ADBAC7;">].count() </span><span style="color:#768390;">#整体有多少个</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># 二元统计</span></span>
<span class="line"><span style="color:#24292E;">df.cov()  </span><span style="color:#6A737D;">#协方差</span></span>
<span class="line"><span style="color:#24292E;">df.corr() </span><span style="color:#6A737D;">#相关系数  </span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">df[</span><span style="color:#032F62;">&#39;age&#39;</span><span style="color:#24292E;">].value_counts </span><span style="color:#6A737D;">#在不同年龄段 人数个数</span></span>
<span class="line"><span style="color:#24292E;">df[</span><span style="color:#032F62;">&#39;age&#39;</span><span style="color:#24292E;">].value_counts(</span><span style="color:#E36209;">ascending</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">True</span><span style="color:#24292E;">,</span><span style="color:#E36209;">bins</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">5</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">#会升序 分成五组</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">df[</span><span style="color:#032F62;">&#39;age&#39;</span><span style="color:#24292E;">].count() </span><span style="color:#6A737D;">#整体有多少个</span></span></code></pre></div><h3 id="_6-对象操作" tabindex="-1">6. 对象操作 <a class="header-anchor" href="#_6-对象操作" aria-label="Permalink to &quot;6. 对象操作&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#ADBAC7;">data </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> [</span><span style="color:#6CB6FF;">10</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">11</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">12</span><span style="color:#ADBAC7;">]</span></span>
<span class="line"><span style="color:#ADBAC7;">index </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> [</span><span style="color:#96D0FF;">&#39;a&#39;</span><span style="color:#ADBAC7;">,</span><span style="color:#96D0FF;">&#39;b&#39;</span><span style="color:#ADBAC7;">,</span><span style="color:#96D0FF;">&#39;c&#39;</span><span style="color:#ADBAC7;">]</span></span>
<span class="line"><span style="color:#ADBAC7;">s </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> pd.Series(</span><span style="color:#F69D50;">data</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> data , </span><span style="color:#F69D50;">index</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> index)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">s1 </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> s.copy()</span></span>
<span class="line"><span style="color:#ADBAC7;">s1[</span><span style="color:#96D0FF;">&#39;a&#39;</span><span style="color:#ADBAC7;">] </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">100</span></span>
<span class="line"><span style="color:#ADBAC7;">s1.replace(</span><span style="color:#F69D50;">to_replace</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">100</span><span style="color:#ADBAC7;"> , </span><span style="color:#F69D50;">value</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">101</span><span style="color:#ADBAC7;"> , </span><span style="color:#F69D50;">inplace</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">False</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">s1.index </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> [</span><span style="color:#96D0FF;">&#39;a&#39;</span><span style="color:#ADBAC7;">,</span><span style="color:#96D0FF;">&#39;d&#39;</span><span style="color:#ADBAC7;">,</span><span style="color:#96D0FF;">&#39;b&#39;</span><span style="color:#ADBAC7;">]</span></span>
<span class="line"><span style="color:#ADBAC7;">s1.rename(</span><span style="color:#F69D50;">index</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> {</span><span style="color:#96D0FF;">&#39;a&#39;</span><span style="color:#ADBAC7;"> = </span><span style="color:#96D0FF;">&#39;A&#39;</span><span style="color:#ADBAC7;">} , </span><span style="color:#F69D50;">inplace</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">True</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">s1.append(s2 , </span><span style="color:#F69D50;">ignore_index</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">False</span><span style="color:#ADBAC7;">) </span><span style="color:#768390;"># 不会生成新索引</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">data </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">11</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">12</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">index </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#032F62;">&#39;a&#39;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&#39;b&#39;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&#39;c&#39;</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">s </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> pd.Series(</span><span style="color:#E36209;">data</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> data , </span><span style="color:#E36209;">index</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> index)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">s1 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> s.copy()</span></span>
<span class="line"><span style="color:#24292E;">s1[</span><span style="color:#032F62;">&#39;a&#39;</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">100</span></span>
<span class="line"><span style="color:#24292E;">s1.replace(</span><span style="color:#E36209;">to_replace</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">100</span><span style="color:#24292E;"> , </span><span style="color:#E36209;">value</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">101</span><span style="color:#24292E;"> , </span><span style="color:#E36209;">inplace</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">False</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">s1.index </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#032F62;">&#39;a&#39;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&#39;d&#39;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&#39;b&#39;</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">s1.rename(</span><span style="color:#E36209;">index</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span><span style="color:#032F62;">&#39;a&#39;</span><span style="color:#24292E;"> = </span><span style="color:#032F62;">&#39;A&#39;</span><span style="color:#24292E;">} , </span><span style="color:#E36209;">inplace</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">True</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">s1.append(s2 , </span><span style="color:#E36209;">ignore_index</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">False</span><span style="color:#24292E;">) </span><span style="color:#6A737D;"># 不会生成新索引</span></span></code></pre></div><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#768390;"># 删除操作</span></span>
<span class="line"><span style="color:#F47067;">del</span><span style="color:#ADBAC7;"> s1[</span><span style="color:#96D0FF;">&#39;A&#39;</span><span style="color:#ADBAC7;">]</span></span>
<span class="line"><span style="color:#ADBAC7;">s1.drop([</span><span style="color:#96D0FF;">&#39;d&#39;</span><span style="color:#ADBAC7;">,</span><span style="color:#96D0FF;">&#39;b&#39;</span><span style="color:#ADBAC7;">] , </span><span style="color:#F69D50;">inplace</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">True</span><span style="color:#ADBAC7;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># 删除操作</span></span>
<span class="line"><span style="color:#D73A49;">del</span><span style="color:#24292E;"> s1[</span><span style="color:#032F62;">&#39;A&#39;</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">s1.drop([</span><span style="color:#032F62;">&#39;d&#39;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&#39;b&#39;</span><span style="color:#24292E;">] , </span><span style="color:#E36209;">inplace</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">True</span><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="_7-merge" tabindex="-1">7. merge <a class="header-anchor" href="#_7-merge" aria-label="Permalink to &quot;7. merge&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#ADBAC7;">pd.merge(left , right , </span><span style="color:#F69D50;">on</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">&#39;key&#39;</span><span style="color:#ADBAC7;">) </span><span style="color:#768390;"># 合并表</span></span>
<span class="line"><span style="color:#ADBAC7;">pd.merge(left , right , </span><span style="color:#F69D50;">on</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> [</span><span style="color:#96D0FF;">&#39;key1&#39;</span><span style="color:#ADBAC7;">,</span><span style="color:#96D0FF;">&#39;key2&#39;</span><span style="color:#ADBAC7;">],</span><span style="color:#F69D50;">how</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&#39;outer&#39;</span><span style="color:#ADBAC7;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">pd.merge(left , right , </span><span style="color:#E36209;">on</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;key&#39;</span><span style="color:#24292E;">) </span><span style="color:#6A737D;"># 合并表</span></span>
<span class="line"><span style="color:#24292E;">pd.merge(left , right , </span><span style="color:#E36209;">on</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#032F62;">&#39;key1&#39;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&#39;key2&#39;</span><span style="color:#24292E;">],</span><span style="color:#E36209;">how</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;outer&#39;</span><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="_8-显示设置" tabindex="-1">8. 显示设置 <a class="header-anchor" href="#_8-显示设置" aria-label="Permalink to &quot;8. 显示设置&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#ADBAC7;">pd.get_option(</span><span style="color:#96D0FF;">&#39;display.max_rows&#39;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#6CB6FF;">60</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">pd.set_option(</span><span style="color:#96D0FF;">&#39;display.max_rows&#39;</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">6</span><span style="color:#ADBAC7;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">pd.get_option(</span><span style="color:#032F62;">&#39;display.max_rows&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#005CC5;">60</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">pd.set_option(</span><span style="color:#032F62;">&#39;display.max_rows&#39;</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">6</span><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="_9-数据透视表" tabindex="-1">9. 数据透视表 <a class="header-anchor" href="#_9-数据透视表" aria-label="Permalink to &quot;9. 数据透视表&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#ADBAC7;">example.privot(</span><span style="color:#F69D50;">index</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">&#39;Category&#39;</span><span style="color:#ADBAC7;"> , </span><span style="color:#F69D50;">colums</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&#39;Month&#39;</span><span style="color:#ADBAC7;"> , </span><span style="color:#F69D50;">values</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&#39;Amount&#39;</span><span style="color:#ADBAC7;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">example.privot(</span><span style="color:#E36209;">index</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;Category&#39;</span><span style="color:#24292E;"> , </span><span style="color:#E36209;">colums</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;Month&#39;</span><span style="color:#24292E;"> , </span><span style="color:#E36209;">values</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;Amount&#39;</span><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="_10-时间操作" tabindex="-1">10. 时间操作 <a class="header-anchor" href="#_10-时间操作" aria-label="Permalink to &quot;10. 时间操作&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">import</span><span style="color:#ADBAC7;"> pandas </span><span style="color:#F47067;">as</span><span style="color:#ADBAC7;"> pd</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">ts </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> pd.Timestamp(</span><span style="color:#96D0FF;">&#39;2017-11-24&#39;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">ts.month</span></span>
<span class="line"><span style="color:#ADBAC7;">ts.day</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">s </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> pd.Series([</span><span style="color:#96D0FF;">&#39;&#39;</span><span style="color:#ADBAC7;">,</span><span style="color:#96D0FF;">&#39;&#39;</span><span style="color:#ADBAC7;">,</span><span style="color:#96D0FF;">&#39;&#39;</span><span style="color:#ADBAC7;">])</span></span>
<span class="line"><span style="color:#ADBAC7;">ts </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> pd.to_datetime(s)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">pd.Series(pd.data_range(</span><span style="color:#F69D50;">start</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&#39;2017-11-24&#39;</span><span style="color:#ADBAC7;"> , </span><span style="color:#F69D50;">periods</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">10</span><span style="color:#ADBAC7;"> . freq </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">&#39;12H&#39;</span><span style="color:#ADBAC7;">))</span></span>
<span class="line"><span style="color:#ADBAC7;">data[</span><span style="color:#96D0FF;">&#39;time&#39;</span><span style="color:#ADBAC7;">] </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> pd.to_datatime(data[</span><span style="color:#96D0FF;">&#39;Time&#39;</span><span style="color:#ADBAC7;">])</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">data.between_time(</span><span style="color:#96D0FF;">&#39;8:00&#39;</span><span style="color:#ADBAC7;">,</span><span style="color:#96D0FF;">&#39;12:00&#39;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">data.resample(</span><span style="color:#96D0FF;">&#39;D&#39;</span><span style="color:#ADBAC7;">).mean().head</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> pandas </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> pd</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">ts </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> pd.Timestamp(</span><span style="color:#032F62;">&#39;2017-11-24&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">ts.month</span></span>
<span class="line"><span style="color:#24292E;">ts.day</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">s </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> pd.Series([</span><span style="color:#032F62;">&#39;&#39;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&#39;&#39;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&#39;&#39;</span><span style="color:#24292E;">])</span></span>
<span class="line"><span style="color:#24292E;">ts </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> pd.to_datetime(s)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">pd.Series(pd.data_range(</span><span style="color:#E36209;">start</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;2017-11-24&#39;</span><span style="color:#24292E;"> , </span><span style="color:#E36209;">periods</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10</span><span style="color:#24292E;"> . freq </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;12H&#39;</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#24292E;">data[</span><span style="color:#032F62;">&#39;time&#39;</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> pd.to_datatime(data[</span><span style="color:#032F62;">&#39;Time&#39;</span><span style="color:#24292E;">])</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">data.between_time(</span><span style="color:#032F62;">&#39;8:00&#39;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&#39;12:00&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">data.resample(</span><span style="color:#032F62;">&#39;D&#39;</span><span style="color:#24292E;">).mean().head</span></span></code></pre></div><h3 id="_11-字符串操作" tabindex="-1">11. 字符串操作 <a class="header-anchor" href="#_11-字符串操作" aria-label="Permalink to &quot;11. 字符串操作&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">import</span><span style="color:#ADBAC7;"> pandas </span><span style="color:#F47067;">as</span><span style="color:#ADBAC7;"> pd</span></span>
<span class="line"><span style="color:#ADBAC7;">s Series</span></span>
<span class="line"><span style="color:#ADBAC7;">s.str.lower()</span></span>
<span class="line"><span style="color:#ADBAC7;">s.str.len()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">index.str.strip()</span></span>
<span class="line"><span style="color:#ADBAC7;">index.str.lstrip() </span><span style="color:#768390;"># 去左边的空格</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">df </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> pd.DataFrame(np.random.randn(</span><span style="color:#6CB6FF;">3</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;">) , colums )</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> pandas </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> pd</span></span>
<span class="line"><span style="color:#24292E;">s Series</span></span>
<span class="line"><span style="color:#24292E;">s.str.lower()</span></span>
<span class="line"><span style="color:#24292E;">s.str.len()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">index.str.strip()</span></span>
<span class="line"><span style="color:#24292E;">index.str.lstrip() </span><span style="color:#6A737D;"># 去左边的空格</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">df </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> pd.DataFrame(np.random.randn(</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">) , colums )</span></span></code></pre></div><h3 id="数据处理技巧" tabindex="-1">数据处理技巧 <a class="header-anchor" href="#数据处理技巧" aria-label="Permalink to &quot;数据处理技巧&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">import</span><span style="color:#ADBAC7;"> panads </span><span style="color:#F47067;">as</span><span style="color:#ADBAC7;"> pd</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">g1 </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> pd.read_csv(</span><span style="color:#96D0FF;">&#39;&#39;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">g1.head</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">g1.shape</span></span>
<span class="line"><span style="color:#ADBAC7;">g1.info(</span><span style="color:#F69D50;">字段</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">&#39;deep&#39;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F47067;">for</span><span style="color:#ADBAC7;"> dtype </span><span style="color:#F47067;">in</span><span style="color:#ADBAC7;"> [</span><span style="color:#96D0FF;">&#39;float64&#39;</span><span style="color:#ADBAC7;">,</span><span style="color:#96D0FF;">&#39;int64&#39;</span><span style="color:#ADBAC7;">,</span><span style="color:#96D0FF;">&#39;object&#39;</span><span style="color:#ADBAC7;">]:</span></span>
<span class="line"><span style="color:#ADBAC7;">    selected </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> g1.select_dytpe(</span><span style="color:#F69D50;">include</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> [dtype])</span></span>
<span class="line"><span style="color:#ADBAC7;">    mean_usage_b </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> selected_dtype.memory_usage(</span><span style="color:#F69D50;">deep</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">True</span><span style="color:#ADBAC7;">).mean()</span></span>
<span class="line"><span style="color:#ADBAC7;">    mean_usage_md </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> mean_usage_b</span><span style="color:#F47067;">/</span><span style="color:#6CB6FF;">1024</span><span style="color:#F47067;">**</span><span style="color:#6CB6FF;">2</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#6CB6FF;">print</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&#39;平均内存占用&#39;</span><span style="color:#ADBAC7;"> , dtype , mean_usage_mb)</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span></span>
<span class="line"><span style="color:#F47067;">import</span><span style="color:#ADBAC7;"> numpy </span><span style="color:#F47067;">as</span><span style="color:#ADBAC7;"> np</span></span>
<span class="line"><span style="color:#ADBAC7;">int_types </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> [</span><span style="color:#96D0FF;">&#39;uint8&#39;</span><span style="color:#ADBAC7;"> , </span><span style="color:#96D0FF;">&#39;int8&#39;</span><span style="color:#ADBAC7;"> , </span><span style="color:#96D0FF;">&#39;int16&#39;</span><span style="color:#ADBAC7;"> , </span><span style="color:#96D0FF;">&#39;int32&#39;</span><span style="color:#ADBAC7;"> , </span><span style="color:#96D0FF;">&#39;int64&#39;</span><span style="color:#ADBAC7;">]</span></span>
<span class="line"><span style="color:#F47067;">for</span><span style="color:#ADBAC7;"> it </span><span style="color:#F47067;">in</span><span style="color:#ADBAC7;"> int_types:</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#6CB6FF;">print</span><span style="color:#ADBAC7;"> np.iinfo(it)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F47067;">def</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">mem_usage</span><span style="color:#ADBAC7;">(pandas_pbj):</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">isinstance</span><span style="color:#ADBAC7;">(pandas_obj , pd.DataFrame):</span></span>
<span class="line"><span style="color:#ADBAC7;">        usage_b </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> pandas_obj.memory_usage(</span><span style="color:#F69D50;">deep</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">True</span><span style="color:#ADBAC7;">).sum()</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">else</span><span style="color:#ADBAC7;">:</span></span>
<span class="line"><span style="color:#ADBAC7;">        usage_b </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> pandas_obj.memory_usage(</span><span style="color:#F69D50;">deep</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">True</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">    usage_mb </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> usage_b </span><span style="color:#F47067;">/</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">1024</span><span style="color:#F47067;">**</span><span style="color:#6CB6FF;">2</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">&#39;</span><span style="color:#F47067;">{:03.2f}</span><span style="color:#96D0FF;"> MB&#39;</span><span style="color:#ADBAC7;"> , </span><span style="color:#6CB6FF;">format</span><span style="color:#ADBAC7;">(usae_mb)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">g1_int </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> g1_select_dtypes(</span><span style="color:#F69D50;">include</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> [</span><span style="color:#96D0FF;">&#39;int64&#39;</span><span style="color:#ADBAC7;">])</span></span>
<span class="line"><span style="color:#ADBAC7;">coverted_int </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> g1_int.apply(pd.to_numeric , </span><span style="color:#F69D50;">downcast</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&#39;unsigned&#39;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#6CB6FF;">print</span><span style="color:#ADBAC7;">(mem_usage(g1_int))</span></span>
<span class="line"><span style="color:#6CB6FF;">print</span><span style="color:#ADBAC7;">(mem_usage(coverted_int))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">g1_float </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> g1.select_dtypes(</span><span style="color:#F69D50;">intclude</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> [</span><span style="color:#96D0FF;">&#39;float64&#39;</span><span style="color:#ADBAC7;">])</span></span>
<span class="line"><span style="color:#ADBAC7;">converted_float </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> g1_float.apply(pd.to_numeric , </span><span style="color:#F69D50;">downcast</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&#39;float&#39;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#6CB6FF;">print</span><span style="color:#ADBAC7;">(mem_usage(g1_float))</span></span>
<span class="line"><span style="color:#6CB6FF;">print</span><span style="color:#ADBAC7;">(mem_usage(coverted_float))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">optimized_g1 </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> g1.copy()</span></span>
<span class="line"><span style="color:#ADBAC7;">optimized_g1[coverted_int.columns] </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> coverted_int</span></span>
<span class="line"><span style="color:#ADBAC7;">optimized_g1[converted_float.columns] </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> coverted_float</span></span>
<span class="line"><span style="color:#6CB6FF;">print</span><span style="color:#ADBAC7;">(g1)</span></span>
<span class="line"><span style="color:#6CB6FF;">print</span><span style="color:#ADBAC7;">(optimized_g1)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">g1_obj </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> g1.select_dtypes(</span><span style="color:#F69D50;">include</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> [</span><span style="color:#96D0FF;">&#39;object&#39;</span><span style="color:#ADBAC7;">]).copy()</span></span>
<span class="line"><span style="color:#ADBAC7;">dow </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> g1_obj.day_of_week</span></span>
<span class="line"><span style="color:#ADBAC7;">dow_cat </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> dow.astype(</span><span style="color:#96D0FF;">&#39;category&#39;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">converted_obj </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> pd.DataFrame()</span></span>
<span class="line"><span style="color:#F47067;">for</span><span style="color:#ADBAC7;"> col </span><span style="color:#F47067;">in</span><span style="color:#ADBAC7;"> g1_obj.columns:</span></span>
<span class="line"><span style="color:#ADBAC7;">    num_ unique.values </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">len</span><span style="color:#ADBAC7;">(g1._obj[co1].unique())</span></span>
<span class="line"><span style="color:#ADBAC7;">    num_ total_values </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">len</span><span style="color:#ADBAC7;">(g1_obj[co1])</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;"> num_unique_values </span><span style="color:#F47067;">/</span><span style="color:#ADBAC7;"> num_total_values </span><span style="color:#F47067;">&lt;</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">0.5</span><span style="color:#ADBAC7;">:</span></span>
<span class="line"><span style="color:#ADBAC7;">    	converted_ obj. 1oc[:,co1] </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> gl_obj[co1].astype(</span><span style="color:#96D0FF;">&#39; category&#39;</span><span style="color:#ADBAC7;"> )</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">else</span><span style="color:#ADBAC7;">:</span></span>
<span class="line"><span style="color:#ADBAC7;">    	converted_ obj. loc[:,col] </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> gl._obj[co1]</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span></span>
<span class="line"><span style="color:#6CB6FF;">print</span><span style="color:#ADBAC7;">(mem_ usage(gl_obj))</span></span>
<span class="line"><span style="color:#6CB6FF;">print</span><span style="color:#ADBAC7;">(mem_usage (converted_obj)</span><span style="color:#F47067;">|</span></span>
<span class="line"><span style="color:#6CB6FF;">751.64</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">MB</span></span>
<span class="line"><span style="color:#6CB6FF;">51.67</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">MB</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> panads </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> pd</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">g1 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> pd.read_csv(</span><span style="color:#032F62;">&#39;&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">g1.head</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">g1.shape</span></span>
<span class="line"><span style="color:#24292E;">g1.info(</span><span style="color:#E36209;">字段</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;deep&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">for</span><span style="color:#24292E;"> dtype </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> [</span><span style="color:#032F62;">&#39;float64&#39;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&#39;int64&#39;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&#39;object&#39;</span><span style="color:#24292E;">]:</span></span>
<span class="line"><span style="color:#24292E;">    selected </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> g1.select_dytpe(</span><span style="color:#E36209;">include</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [dtype])</span></span>
<span class="line"><span style="color:#24292E;">    mean_usage_b </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> selected_dtype.memory_usage(</span><span style="color:#E36209;">deep</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">True</span><span style="color:#24292E;">).mean()</span></span>
<span class="line"><span style="color:#24292E;">    mean_usage_md </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> mean_usage_b</span><span style="color:#D73A49;">/</span><span style="color:#005CC5;">1024</span><span style="color:#D73A49;">**</span><span style="color:#005CC5;">2</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;平均内存占用&#39;</span><span style="color:#24292E;"> , dtype , mean_usage_mb)</span></span>
<span class="line"><span style="color:#24292E;">    </span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> numpy </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> np</span></span>
<span class="line"><span style="color:#24292E;">int_types </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#032F62;">&#39;uint8&#39;</span><span style="color:#24292E;"> , </span><span style="color:#032F62;">&#39;int8&#39;</span><span style="color:#24292E;"> , </span><span style="color:#032F62;">&#39;int16&#39;</span><span style="color:#24292E;"> , </span><span style="color:#032F62;">&#39;int32&#39;</span><span style="color:#24292E;"> , </span><span style="color:#032F62;">&#39;int64&#39;</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#D73A49;">for</span><span style="color:#24292E;"> it </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> int_types:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">print</span><span style="color:#24292E;"> np.iinfo(it)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">mem_usage</span><span style="color:#24292E;">(pandas_pbj):</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">isinstance</span><span style="color:#24292E;">(pandas_obj , pd.DataFrame):</span></span>
<span class="line"><span style="color:#24292E;">        usage_b </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> pandas_obj.memory_usage(</span><span style="color:#E36209;">deep</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">True</span><span style="color:#24292E;">).sum()</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">else</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">        usage_b </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> pandas_obj.memory_usage(</span><span style="color:#E36209;">deep</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">True</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    usage_mb </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> usage_b </span><span style="color:#D73A49;">/</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1024</span><span style="color:#D73A49;">**</span><span style="color:#005CC5;">2</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;</span><span style="color:#005CC5;">{</span><span style="color:#D73A49;">:03.2f</span><span style="color:#005CC5;">}</span><span style="color:#032F62;"> MB&#39;</span><span style="color:#24292E;"> , </span><span style="color:#005CC5;">format</span><span style="color:#24292E;">(usae_mb)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">g1_int </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> g1_select_dtypes(</span><span style="color:#E36209;">include</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#032F62;">&#39;int64&#39;</span><span style="color:#24292E;">])</span></span>
<span class="line"><span style="color:#24292E;">coverted_int </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> g1_int.apply(pd.to_numeric , </span><span style="color:#E36209;">downcast</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;unsigned&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(mem_usage(g1_int))</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(mem_usage(coverted_int))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">g1_float </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> g1.select_dtypes(</span><span style="color:#E36209;">intclude</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#032F62;">&#39;float64&#39;</span><span style="color:#24292E;">])</span></span>
<span class="line"><span style="color:#24292E;">converted_float </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> g1_float.apply(pd.to_numeric , </span><span style="color:#E36209;">downcast</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;float&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(mem_usage(g1_float))</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(mem_usage(coverted_float))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">optimized_g1 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> g1.copy()</span></span>
<span class="line"><span style="color:#24292E;">optimized_g1[coverted_int.columns] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> coverted_int</span></span>
<span class="line"><span style="color:#24292E;">optimized_g1[converted_float.columns] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> coverted_float</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(g1)</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(optimized_g1)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">g1_obj </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> g1.select_dtypes(</span><span style="color:#E36209;">include</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#032F62;">&#39;object&#39;</span><span style="color:#24292E;">]).copy()</span></span>
<span class="line"><span style="color:#24292E;">dow </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> g1_obj.day_of_week</span></span>
<span class="line"><span style="color:#24292E;">dow_cat </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> dow.astype(</span><span style="color:#032F62;">&#39;category&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">converted_obj </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> pd.DataFrame()</span></span>
<span class="line"><span style="color:#D73A49;">for</span><span style="color:#24292E;"> col </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> g1_obj.columns:</span></span>
<span class="line"><span style="color:#24292E;">    num_ unique.values </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">len</span><span style="color:#24292E;">(g1._obj[co1].unique())</span></span>
<span class="line"><span style="color:#24292E;">    num_ total_values </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">len</span><span style="color:#24292E;">(g1_obj[co1])</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> num_unique_values </span><span style="color:#D73A49;">/</span><span style="color:#24292E;"> num_total_values </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0.5</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    	converted_ obj. 1oc[:,co1] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> gl_obj[co1].astype(</span><span style="color:#032F62;">&#39; category&#39;</span><span style="color:#24292E;"> )</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">else</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    	converted_ obj. loc[:,col] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> gl._obj[co1]</span></span>
<span class="line"><span style="color:#24292E;">        </span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(mem_ usage(gl_obj))</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(mem_usage (converted_obj)</span><span style="color:#D73A49;">|</span></span>
<span class="line"><span style="color:#005CC5;">751.64</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">MB</span></span>
<span class="line"><span style="color:#005CC5;">51.67</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">MB</span></span></code></pre></div>`,27);function u(s,m,_,h,b,f){const o=c,e=D("ClientOnly");return p(),r("div",null,[E,y(e,null,{default:A(()=>{var n,a;return[(((n=s.$frontmatter)==null?void 0:n.aside)??!0)&&(((a=s.$frontmatter)==null?void 0:a.showArticleMetadata)??!0)?(p(),C(o,{key:0,article:s.$frontmatter},null,8,["article"])):F("",!0)]}),_:1}),g])}const j=t(B,[["render",u]]);export{q as __pageData,j as default};
