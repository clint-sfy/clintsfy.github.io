import{_ as t}from"./chunks/ArticleMetadata.59a467b2.js";import{_ as c,v as l,b as r,t as y,O as i,F as p,L as C,R as A,M as F,C as D,B}from"./chunks/framework.5cbdba25.js";import"./chunks/md5.02486a14.js";const k=JSON.parse('{"title":"决策树","description":"","frontmatter":{"title":"决策树","author":"阿源","date":"2023/07/05 12:00","categories":["机器学习快速入门"],"tags":["机器学习"]},"headers":[],"relativePath":"courses/tangyudi/02-机器学习篇/05-决策树.md","filePath":"courses/tangyudi/02-机器学习篇/05-决策树.md","lastUpdated":1695348718000}'),E={name:"courses/tangyudi/02-机器学习篇/05-决策树.md"},d=p("h1",{id:"决策树",tabindex:"-1"},[C("决策树 "),p("a",{class:"header-anchor",href:"#决策树","aria-label":'Permalink to "决策树"'},"​")],-1),u=A(`<h2 id="_11-决策树原理" tabindex="-1">11. 决策树原理 <a class="header-anchor" href="#_11-决策树原理" aria-label="Permalink to &quot;11. 决策树原理&quot;">​</a></h2><p>分类和回归都可以解决</p><h2 id="_12-决策树手写代码实现" tabindex="-1">12. 决策树手写代码实现 <a class="header-anchor" href="#_12-决策树手写代码实现" aria-label="Permalink to &quot;12. 决策树手写代码实现&quot;">​</a></h2><h2 id="_13-决策树算法实验分析" tabindex="-1">13. 决策树算法实验分析 <a class="header-anchor" href="#_13-决策树算法实验分析" aria-label="Permalink to &quot;13. 决策树算法实验分析&quot;">​</a></h2><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">import</span><span style="color:#ADBAC7;"> numpy </span><span style="color:#F47067;">as</span><span style="color:#ADBAC7;"> np</span></span>
<span class="line"><span style="color:#F47067;">import</span><span style="color:#ADBAC7;"> os</span></span>
<span class="line"><span style="color:#F47067;">%</span><span style="color:#ADBAC7;">matplotlib inline</span></span>
<span class="line"><span style="color:#F47067;">import</span><span style="color:#ADBAC7;"> matplotlib</span></span>
<span class="line"><span style="color:#F47067;">import</span><span style="color:#ADBAC7;"> matplotlib.pyplot </span><span style="color:#F47067;">as</span><span style="color:#ADBAC7;"> plt</span></span>
<span class="line"><span style="color:#ADBAC7;">plt.rcParams[</span><span style="color:#96D0FF;">&#39;axes.labelsize&#39;</span><span style="color:#ADBAC7;">] </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">14</span></span>
<span class="line"><span style="color:#ADBAC7;">plt.rcParams[</span><span style="color:#96D0FF;">&#39;xtick.labelsize&#39;</span><span style="color:#ADBAC7;">] </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">12</span></span>
<span class="line"><span style="color:#ADBAC7;">plt.rcParams[</span><span style="color:#96D0FF;">&#39;ytick.labelsize&#39;</span><span style="color:#ADBAC7;">] </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">12</span></span>
<span class="line"><span style="color:#F47067;">import</span><span style="color:#ADBAC7;"> warnings</span></span>
<span class="line"><span style="color:#ADBAC7;">warnings.filterwarnings(</span><span style="color:#96D0FF;">&#39;ignore&#39;</span><span style="color:#ADBAC7;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> numpy </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> np</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> os</span></span>
<span class="line"><span style="color:#D73A49;">%</span><span style="color:#24292E;">matplotlib inline</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> matplotlib</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> matplotlib.pyplot </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> plt</span></span>
<span class="line"><span style="color:#24292E;">plt.rcParams[</span><span style="color:#032F62;">&#39;axes.labelsize&#39;</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">14</span></span>
<span class="line"><span style="color:#24292E;">plt.rcParams[</span><span style="color:#032F62;">&#39;xtick.labelsize&#39;</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">12</span></span>
<span class="line"><span style="color:#24292E;">plt.rcParams[</span><span style="color:#032F62;">&#39;ytick.labelsize&#39;</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">12</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> warnings</span></span>
<span class="line"><span style="color:#24292E;">warnings.filterwarnings(</span><span style="color:#032F62;">&#39;ignore&#39;</span><span style="color:#24292E;">)</span></span></code></pre></div><ul><li>下载安装包：<a href="https://graphviz.gitlab.io/_pages/Download/Download_windows.html" target="_blank" rel="noreferrer">https://graphviz.gitlab.io/_pages/Download/Download_windows.html</a></li><li>环境变量配置：<a href="https://jingyan.baidu.com/article/020278115032461bcc9ce598.html" target="_blank" rel="noreferrer">https://jingyan.baidu.com/article/020278115032461bcc9ce598.html</a></li></ul><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">from</span><span style="color:#ADBAC7;"> sklearn.datasets </span><span style="color:#F47067;">import</span><span style="color:#ADBAC7;"> load_iris</span></span>
<span class="line"><span style="color:#F47067;">from</span><span style="color:#ADBAC7;"> sklearn.tree </span><span style="color:#F47067;">import</span><span style="color:#ADBAC7;"> DecisionTreeClassifier</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">iris </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> load_iris()</span></span>
<span class="line"><span style="color:#ADBAC7;">X </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> iris.data[:,</span><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;">:] </span><span style="color:#768390;"># petal length and width</span></span>
<span class="line"><span style="color:#ADBAC7;">y </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> iris.target</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">tree_clf </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> DecisionTreeClassifier(</span><span style="color:#F69D50;">max_depth</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">tree_clf.fit(X,y)</span></span>
<span class="line"><span style="color:#ADBAC7;">DecisionTreeClassifier(</span><span style="color:#F69D50;">class_weight</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">None</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">criterion</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&#39;gini&#39;</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">max_depth</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;">,</span></span>
<span class="line"><span style="color:#ADBAC7;">            </span><span style="color:#F69D50;">max_features</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">None</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">max_leaf_nodes</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">None</span><span style="color:#ADBAC7;">,</span></span>
<span class="line"><span style="color:#ADBAC7;">            </span><span style="color:#F69D50;">min_impurity_decrease</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">0.0</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">min_impurity_split</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">None</span><span style="color:#ADBAC7;">,</span></span>
<span class="line"><span style="color:#ADBAC7;">            </span><span style="color:#F69D50;">min_samples_leaf</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">min_samples_split</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;">,</span></span>
<span class="line"><span style="color:#ADBAC7;">            </span><span style="color:#F69D50;">min_weight_fraction_leaf</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">0.0</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">presort</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">False</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">random_state</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">None</span><span style="color:#ADBAC7;">,</span></span>
<span class="line"><span style="color:#ADBAC7;">            </span><span style="color:#F69D50;">splitter</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&#39;best&#39;</span><span style="color:#ADBAC7;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> sklearn.datasets </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> load_iris</span></span>
<span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> sklearn.tree </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> DecisionTreeClassifier</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">iris </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> load_iris()</span></span>
<span class="line"><span style="color:#24292E;">X </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> iris.data[:,</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">:] </span><span style="color:#6A737D;"># petal length and width</span></span>
<span class="line"><span style="color:#24292E;">y </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> iris.target</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">tree_clf </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> DecisionTreeClassifier(</span><span style="color:#E36209;">max_depth</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">tree_clf.fit(X,y)</span></span>
<span class="line"><span style="color:#24292E;">DecisionTreeClassifier(</span><span style="color:#E36209;">class_weight</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">None</span><span style="color:#24292E;">, </span><span style="color:#E36209;">criterion</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;gini&#39;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">max_depth</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#E36209;">max_features</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">None</span><span style="color:#24292E;">, </span><span style="color:#E36209;">max_leaf_nodes</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">None</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#E36209;">min_impurity_decrease</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0.0</span><span style="color:#24292E;">, </span><span style="color:#E36209;">min_impurity_split</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">None</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#E36209;">min_samples_leaf</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#E36209;">min_samples_split</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#E36209;">min_weight_fraction_leaf</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0.0</span><span style="color:#24292E;">, </span><span style="color:#E36209;">presort</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">False</span><span style="color:#24292E;">, </span><span style="color:#E36209;">random_state</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">None</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#E36209;">splitter</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;best&#39;</span><span style="color:#24292E;">)</span></span></code></pre></div><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">from</span><span style="color:#ADBAC7;"> sklearn.tree </span><span style="color:#F47067;">import</span><span style="color:#ADBAC7;"> export_graphviz</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">export_graphviz(</span></span>
<span class="line"><span style="color:#ADBAC7;">    tree_clf,</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F69D50;">out_file</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&quot;iris_tree.dot&quot;</span><span style="color:#ADBAC7;">,</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F69D50;">feature_names</span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;">iris.feature_names[</span><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;">:],</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F69D50;">class_names</span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;">iris.target_names,</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F69D50;">rounded</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">True</span><span style="color:#ADBAC7;">,</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F69D50;">filled</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">True</span></span>
<span class="line"><span style="color:#ADBAC7;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> sklearn.tree </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> export_graphviz</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">export_graphviz(</span></span>
<span class="line"><span style="color:#24292E;">    tree_clf,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">out_file</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;iris_tree.dot&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">feature_names</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">iris.feature_names[</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">:],</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">class_names</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">iris.target_names,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">rounded</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">True</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">filled</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">True</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><p>然后，你可以使用graphviz包中的dot命令行工具将此**.dot**文件转换为各种格式，如PDF或PNG。下面这条命令行将.dot文件转换为.png图像文件：</p><p>$ dot -Tpng iris_tree.dot -o iris_tree.png</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">from</span><span style="color:#ADBAC7;"> IPython.display </span><span style="color:#F47067;">import</span><span style="color:#ADBAC7;"> Image</span></span>
<span class="line"><span style="color:#ADBAC7;">Image(</span><span style="color:#F69D50;">filename</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&#39;iris_tree.png&#39;</span><span style="color:#ADBAC7;">,</span><span style="color:#F69D50;">width</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">400</span><span style="color:#ADBAC7;">,</span><span style="color:#F69D50;">height</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">400</span><span style="color:#ADBAC7;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> IPython.display </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> Image</span></span>
<span class="line"><span style="color:#24292E;">Image(</span><span style="color:#E36209;">filename</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;iris_tree.png&#39;</span><span style="color:#24292E;">,</span><span style="color:#E36209;">width</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">400</span><span style="color:#24292E;">,</span><span style="color:#E36209;">height</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">400</span><span style="color:#24292E;">)</span></span></code></pre></div><p><img src="https://cdn.jsdelivr.net/gh/clint-sfy/blogcdn@master/python/ML/13.1.png" alt=""></p><h3 id="决策边界展示" tabindex="-1">决策边界展示 <a class="header-anchor" href="#决策边界展示" aria-label="Permalink to &quot;决策边界展示&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">from</span><span style="color:#ADBAC7;"> matplotlib.colors </span><span style="color:#F47067;">import</span><span style="color:#ADBAC7;"> ListedColormap</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F47067;">def</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">plot_decision_boundary</span><span style="color:#ADBAC7;">(clf, X, y, axes</span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;">[</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">7.5</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">3</span><span style="color:#ADBAC7;">], iris</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">True</span><span style="color:#ADBAC7;">, legend</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">False</span><span style="color:#ADBAC7;">, plot_training</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">True</span><span style="color:#ADBAC7;">):</span></span>
<span class="line"><span style="color:#ADBAC7;">    x1s </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> np.linspace(axes[</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">], axes[</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">], </span><span style="color:#6CB6FF;">100</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">    x2s </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> np.linspace(axes[</span><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;">], axes[</span><span style="color:#6CB6FF;">3</span><span style="color:#ADBAC7;">], </span><span style="color:#6CB6FF;">100</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">    x1, x2 </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> np.meshgrid(x1s, x2s)</span></span>
<span class="line"><span style="color:#ADBAC7;">    X_new </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> np.c_[x1.ravel(), x2.ravel()]</span></span>
<span class="line"><span style="color:#ADBAC7;">    y_pred </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> clf.predict(X_new).reshape(x1.shape)</span></span>
<span class="line"><span style="color:#ADBAC7;">    custom_cmap </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> ListedColormap([</span><span style="color:#96D0FF;">&#39;#fafab0&#39;</span><span style="color:#ADBAC7;">,</span><span style="color:#96D0FF;">&#39;#9898ff&#39;</span><span style="color:#ADBAC7;">,</span><span style="color:#96D0FF;">&#39;#a0faa0&#39;</span><span style="color:#ADBAC7;">])</span></span>
<span class="line"><span style="color:#ADBAC7;">    plt.contourf(x1, x2, y_pred, </span><span style="color:#F69D50;">alpha</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">0.3</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">cmap</span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;">custom_cmap)</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">not</span><span style="color:#ADBAC7;"> iris:</span></span>
<span class="line"><span style="color:#ADBAC7;">        custom_cmap2 </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> ListedColormap([</span><span style="color:#96D0FF;">&#39;#7d7d58&#39;</span><span style="color:#ADBAC7;">,</span><span style="color:#96D0FF;">&#39;#4c4c7f&#39;</span><span style="color:#ADBAC7;">,</span><span style="color:#96D0FF;">&#39;#507d50&#39;</span><span style="color:#ADBAC7;">])</span></span>
<span class="line"><span style="color:#ADBAC7;">        plt.contour(x1, x2, y_pred, </span><span style="color:#F69D50;">cmap</span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;">custom_cmap2, </span><span style="color:#F69D50;">alpha</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">0.8</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;"> plot_training:</span></span>
<span class="line"><span style="color:#ADBAC7;">        plt.plot(X[:, </span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">][y</span><span style="color:#F47067;">==</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">], X[:, </span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">][y</span><span style="color:#F47067;">==</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">], </span><span style="color:#96D0FF;">&quot;yo&quot;</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">label</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&quot;Iris-Setosa&quot;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">        plt.plot(X[:, </span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">][y</span><span style="color:#F47067;">==</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">], X[:, </span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">][y</span><span style="color:#F47067;">==</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">], </span><span style="color:#96D0FF;">&quot;bs&quot;</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">label</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&quot;Iris-Versicolor&quot;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">        plt.plot(X[:, </span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">][y</span><span style="color:#F47067;">==</span><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;">], X[:, </span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">][y</span><span style="color:#F47067;">==</span><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;">], </span><span style="color:#96D0FF;">&quot;g^&quot;</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">label</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&quot;Iris-Virginica&quot;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">        plt.axis(axes)</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;"> iris:</span></span>
<span class="line"><span style="color:#ADBAC7;">        plt.xlabel(</span><span style="color:#96D0FF;">&quot;Petal length&quot;</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">fontsize</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">14</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">        plt.ylabel(</span><span style="color:#96D0FF;">&quot;Petal width&quot;</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">fontsize</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">14</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">else</span><span style="color:#ADBAC7;">:</span></span>
<span class="line"><span style="color:#ADBAC7;">        plt.xlabel(</span><span style="color:#F47067;">r</span><span style="color:#96D0FF;">&quot;</span><span style="color:#6CB6FF;">$</span><span style="color:#96D0FF;">x_1</span><span style="color:#6CB6FF;">$</span><span style="color:#96D0FF;">&quot;</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">fontsize</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">18</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">        plt.ylabel(</span><span style="color:#F47067;">r</span><span style="color:#96D0FF;">&quot;</span><span style="color:#6CB6FF;">$</span><span style="color:#96D0FF;">x_2</span><span style="color:#6CB6FF;">$</span><span style="color:#96D0FF;">&quot;</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">fontsize</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">18</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">rotation</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;"> legend:</span></span>
<span class="line"><span style="color:#ADBAC7;">        plt.legend(</span><span style="color:#F69D50;">loc</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&quot;lower right&quot;</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">fontsize</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">14</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">plt.figure(</span><span style="color:#F69D50;">figsize</span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">8</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">4</span><span style="color:#ADBAC7;">))</span></span>
<span class="line"><span style="color:#ADBAC7;">plot_decision_boundary(tree_clf, X, y)</span></span>
<span class="line"><span style="color:#ADBAC7;">plt.plot([</span><span style="color:#6CB6FF;">2.45</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">2.45</span><span style="color:#ADBAC7;">], [</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">3</span><span style="color:#ADBAC7;">], </span><span style="color:#96D0FF;">&quot;k-&quot;</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">linewidth</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">plt.plot([</span><span style="color:#6CB6FF;">2.45</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">7.5</span><span style="color:#ADBAC7;">], [</span><span style="color:#6CB6FF;">1.75</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">1.75</span><span style="color:#ADBAC7;">], </span><span style="color:#96D0FF;">&quot;k--&quot;</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">linewidth</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">plt.plot([</span><span style="color:#6CB6FF;">4.95</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">4.95</span><span style="color:#ADBAC7;">], [</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">1.75</span><span style="color:#ADBAC7;">], </span><span style="color:#96D0FF;">&quot;k:&quot;</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">linewidth</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">plt.plot([</span><span style="color:#6CB6FF;">4.85</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">4.85</span><span style="color:#ADBAC7;">], [</span><span style="color:#6CB6FF;">1.75</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">3</span><span style="color:#ADBAC7;">], </span><span style="color:#96D0FF;">&quot;k:&quot;</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">linewidth</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">plt.text(</span><span style="color:#6CB6FF;">1.40</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">1.0</span><span style="color:#ADBAC7;">, </span><span style="color:#96D0FF;">&quot;Depth=0&quot;</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">fontsize</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">15</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">plt.text(</span><span style="color:#6CB6FF;">3.2</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">1.80</span><span style="color:#ADBAC7;">, </span><span style="color:#96D0FF;">&quot;Depth=1&quot;</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">fontsize</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">13</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">plt.text(</span><span style="color:#6CB6FF;">4.05</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">0.5</span><span style="color:#ADBAC7;">, </span><span style="color:#96D0FF;">&quot;(Depth=2)&quot;</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">fontsize</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">11</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">plt.title(</span><span style="color:#96D0FF;">&#39;Decision Tree decision boundaries&#39;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">plt.show()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> matplotlib.colors </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> ListedColormap</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">plot_decision_boundary</span><span style="color:#24292E;">(clf, X, y, axes</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">7.5</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">], iris</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">True</span><span style="color:#24292E;">, legend</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">False</span><span style="color:#24292E;">, plot_training</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">True</span><span style="color:#24292E;">):</span></span>
<span class="line"><span style="color:#24292E;">    x1s </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> np.linspace(axes[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">], axes[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">], </span><span style="color:#005CC5;">100</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    x2s </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> np.linspace(axes[</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">], axes[</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">], </span><span style="color:#005CC5;">100</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    x1, x2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> np.meshgrid(x1s, x2s)</span></span>
<span class="line"><span style="color:#24292E;">    X_new </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> np.c_[x1.ravel(), x2.ravel()]</span></span>
<span class="line"><span style="color:#24292E;">    y_pred </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> clf.predict(X_new).reshape(x1.shape)</span></span>
<span class="line"><span style="color:#24292E;">    custom_cmap </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ListedColormap([</span><span style="color:#032F62;">&#39;#fafab0&#39;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&#39;#9898ff&#39;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&#39;#a0faa0&#39;</span><span style="color:#24292E;">])</span></span>
<span class="line"><span style="color:#24292E;">    plt.contourf(x1, x2, y_pred, </span><span style="color:#E36209;">alpha</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0.3</span><span style="color:#24292E;">, </span><span style="color:#E36209;">cmap</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">custom_cmap)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">not</span><span style="color:#24292E;"> iris:</span></span>
<span class="line"><span style="color:#24292E;">        custom_cmap2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ListedColormap([</span><span style="color:#032F62;">&#39;#7d7d58&#39;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&#39;#4c4c7f&#39;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&#39;#507d50&#39;</span><span style="color:#24292E;">])</span></span>
<span class="line"><span style="color:#24292E;">        plt.contour(x1, x2, y_pred, </span><span style="color:#E36209;">cmap</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">custom_cmap2, </span><span style="color:#E36209;">alpha</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0.8</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> plot_training:</span></span>
<span class="line"><span style="color:#24292E;">        plt.plot(X[:, </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">][y</span><span style="color:#D73A49;">==</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">], X[:, </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">][y</span><span style="color:#D73A49;">==</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">], </span><span style="color:#032F62;">&quot;yo&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">label</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;Iris-Setosa&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        plt.plot(X[:, </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">][y</span><span style="color:#D73A49;">==</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">], X[:, </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">][y</span><span style="color:#D73A49;">==</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">], </span><span style="color:#032F62;">&quot;bs&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">label</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;Iris-Versicolor&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        plt.plot(X[:, </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">][y</span><span style="color:#D73A49;">==</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">], X[:, </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">][y</span><span style="color:#D73A49;">==</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">], </span><span style="color:#032F62;">&quot;g^&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">label</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;Iris-Virginica&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        plt.axis(axes)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> iris:</span></span>
<span class="line"><span style="color:#24292E;">        plt.xlabel(</span><span style="color:#032F62;">&quot;Petal length&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">fontsize</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">14</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        plt.ylabel(</span><span style="color:#032F62;">&quot;Petal width&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">fontsize</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">14</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">else</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">        plt.xlabel(</span><span style="color:#D73A49;">r</span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">$</span><span style="color:#032F62;">x_1</span><span style="color:#005CC5;">$</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">fontsize</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">18</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        plt.ylabel(</span><span style="color:#D73A49;">r</span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">$</span><span style="color:#032F62;">x_2</span><span style="color:#005CC5;">$</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">fontsize</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">18</span><span style="color:#24292E;">, </span><span style="color:#E36209;">rotation</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> legend:</span></span>
<span class="line"><span style="color:#24292E;">        plt.legend(</span><span style="color:#E36209;">loc</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;lower right&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">fontsize</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">14</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">plt.figure(</span><span style="color:#E36209;">figsize</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">8</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#24292E;">plot_decision_boundary(tree_clf, X, y)</span></span>
<span class="line"><span style="color:#24292E;">plt.plot([</span><span style="color:#005CC5;">2.45</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2.45</span><span style="color:#24292E;">], [</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">], </span><span style="color:#032F62;">&quot;k-&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">linewidth</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">plt.plot([</span><span style="color:#005CC5;">2.45</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">7.5</span><span style="color:#24292E;">], [</span><span style="color:#005CC5;">1.75</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">1.75</span><span style="color:#24292E;">], </span><span style="color:#032F62;">&quot;k--&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">linewidth</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">plt.plot([</span><span style="color:#005CC5;">4.95</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">4.95</span><span style="color:#24292E;">], [</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">1.75</span><span style="color:#24292E;">], </span><span style="color:#032F62;">&quot;k:&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">linewidth</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">plt.plot([</span><span style="color:#005CC5;">4.85</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">4.85</span><span style="color:#24292E;">], [</span><span style="color:#005CC5;">1.75</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">], </span><span style="color:#032F62;">&quot;k:&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">linewidth</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">plt.text(</span><span style="color:#005CC5;">1.40</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">1.0</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Depth=0&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">fontsize</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">15</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">plt.text(</span><span style="color:#005CC5;">3.2</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">1.80</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Depth=1&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">fontsize</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">13</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">plt.text(</span><span style="color:#005CC5;">4.05</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">0.5</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;(Depth=2)&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">fontsize</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">11</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">plt.title(</span><span style="color:#032F62;">&#39;Decision Tree decision boundaries&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">plt.show()</span></span></code></pre></div><p><img src="https://cdn.jsdelivr.net/gh/clint-sfy/blogcdn@master/python/ML/13.2.png" alt=""></p><h3 id="概率估计" tabindex="-1">概率估计 <a class="header-anchor" href="#概率估计" aria-label="Permalink to &quot;概率估计&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#adbac7;">估计类概率 输入数据为：花瓣长5厘米，宽1.5厘米的花。 相应的叶节点是深度为2的左节点，因此决策树应输出以下概率：</span></span>
<span class="line"><span style="color:#adbac7;"></span></span>
<span class="line"><span style="color:#adbac7;">Iris-Setosa 为 0％（0/54），</span></span>
<span class="line"><span style="color:#adbac7;">Iris-Versicolor 为 90.7％（49/54），</span></span>
<span class="line"><span style="color:#adbac7;">Iris-Virginica 为 9.3％（5/54）。</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">估计类概率 输入数据为：花瓣长5厘米，宽1.5厘米的花。 相应的叶节点是深度为2的左节点，因此决策树应输出以下概率：</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">Iris-Setosa 为 0％（0/54），</span></span>
<span class="line"><span style="color:#24292e;">Iris-Versicolor 为 90.7％（49/54），</span></span>
<span class="line"><span style="color:#24292e;">Iris-Virginica 为 9.3％（5/54）。</span></span></code></pre></div><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#ADBAC7;">tree_clf.predict_proba([[</span><span style="color:#6CB6FF;">5</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">1.5</span><span style="color:#ADBAC7;">]])</span></span>
<span class="line"><span style="color:#ADBAC7;">array([[</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">.        , </span><span style="color:#6CB6FF;">0.90740741</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">0.09259259</span><span style="color:#ADBAC7;">]])</span></span>
<span class="line"><span style="color:#ADBAC7;">tree_clf.predict([[</span><span style="color:#6CB6FF;">5</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">1.5</span><span style="color:#ADBAC7;">]])</span></span>
<span class="line"><span style="color:#ADBAC7;">array([</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">])</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">tree_clf.predict_proba([[</span><span style="color:#005CC5;">5</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">1.5</span><span style="color:#24292E;">]])</span></span>
<span class="line"><span style="color:#24292E;">array([[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">.        , </span><span style="color:#005CC5;">0.90740741</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">0.09259259</span><span style="color:#24292E;">]])</span></span>
<span class="line"><span style="color:#24292E;">tree_clf.predict([[</span><span style="color:#005CC5;">5</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">1.5</span><span style="color:#24292E;">]])</span></span>
<span class="line"><span style="color:#24292E;">array([</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">])</span></span></code></pre></div><h3 id="决策树中的正则化" tabindex="-1">决策树中的正则化 <a class="header-anchor" href="#决策树中的正则化" aria-label="Permalink to &quot;决策树中的正则化&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#adbac7;">DecisionTreeClassifier类还有一些其他参数类似地限制了决策树的形状：</span></span>
<span class="line"><span style="color:#adbac7;">min_samples_split（节点在分割之前必须具有的最小样本数），</span></span>
<span class="line"><span style="color:#adbac7;">min_samples_leaf（叶子节点必须具有的最小样本数），</span></span>
<span class="line"><span style="color:#adbac7;">max_leaf_nodes（叶子节点的最大数量），</span></span>
<span class="line"><span style="color:#adbac7;">max_features（在每个节点处评估用于拆分的最大特征数）。</span></span>
<span class="line"><span style="color:#adbac7;">max_depth(树最大的深度)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">DecisionTreeClassifier类还有一些其他参数类似地限制了决策树的形状：</span></span>
<span class="line"><span style="color:#24292e;">min_samples_split（节点在分割之前必须具有的最小样本数），</span></span>
<span class="line"><span style="color:#24292e;">min_samples_leaf（叶子节点必须具有的最小样本数），</span></span>
<span class="line"><span style="color:#24292e;">max_leaf_nodes（叶子节点的最大数量），</span></span>
<span class="line"><span style="color:#24292e;">max_features（在每个节点处评估用于拆分的最大特征数）。</span></span>
<span class="line"><span style="color:#24292e;">max_depth(树最大的深度)</span></span></code></pre></div><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">from</span><span style="color:#ADBAC7;"> sklearn.datasets </span><span style="color:#F47067;">import</span><span style="color:#ADBAC7;"> make_moons</span></span>
<span class="line"><span style="color:#ADBAC7;">X,y </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> make_moons(</span><span style="color:#F69D50;">n_samples</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">100</span><span style="color:#ADBAC7;">,</span><span style="color:#F69D50;">noise</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">0.25</span><span style="color:#ADBAC7;">,</span><span style="color:#F69D50;">random_state</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">53</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">tree_clf1 </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> DecisionTreeClassifier(</span><span style="color:#F69D50;">random_state</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">42</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">tree_clf2 </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> DecisionTreeClassifier(</span><span style="color:#F69D50;">min_samples_leaf</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">4</span><span style="color:#ADBAC7;">,</span><span style="color:#F69D50;">random_state</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">42</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">tree_clf1.fit(X,y)</span></span>
<span class="line"><span style="color:#ADBAC7;">tree_clf2.fit(X,y)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">plt.figure(</span><span style="color:#F69D50;">figsize</span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">12</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">4</span><span style="color:#ADBAC7;">))</span></span>
<span class="line"><span style="color:#ADBAC7;">plt.subplot(</span><span style="color:#6CB6FF;">121</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">plot_decision_boundary(tree_clf1,X,y,</span><span style="color:#F69D50;">axes</span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;">[</span><span style="color:#F47067;">-</span><span style="color:#6CB6FF;">1.5</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">2.5</span><span style="color:#ADBAC7;">,</span><span style="color:#F47067;">-</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">1.5</span><span style="color:#ADBAC7;">],</span><span style="color:#F69D50;">iris</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">False</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">plt.title(</span><span style="color:#96D0FF;">&#39;No restrictions&#39;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">plt.subplot(</span><span style="color:#6CB6FF;">122</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">plot_decision_boundary(tree_clf2,X,y,</span><span style="color:#F69D50;">axes</span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;">[</span><span style="color:#F47067;">-</span><span style="color:#6CB6FF;">1.5</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">2.5</span><span style="color:#ADBAC7;">,</span><span style="color:#F47067;">-</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">1.5</span><span style="color:#ADBAC7;">],</span><span style="color:#F69D50;">iris</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">False</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">plt.title(</span><span style="color:#96D0FF;">&#39;min_samples_leaf=4&#39;</span><span style="color:#ADBAC7;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> sklearn.datasets </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> make_moons</span></span>
<span class="line"><span style="color:#24292E;">X,y </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> make_moons(</span><span style="color:#E36209;">n_samples</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">100</span><span style="color:#24292E;">,</span><span style="color:#E36209;">noise</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0.25</span><span style="color:#24292E;">,</span><span style="color:#E36209;">random_state</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">53</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">tree_clf1 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> DecisionTreeClassifier(</span><span style="color:#E36209;">random_state</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">42</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">tree_clf2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> DecisionTreeClassifier(</span><span style="color:#E36209;">min_samples_leaf</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">,</span><span style="color:#E36209;">random_state</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">42</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">tree_clf1.fit(X,y)</span></span>
<span class="line"><span style="color:#24292E;">tree_clf2.fit(X,y)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">plt.figure(</span><span style="color:#E36209;">figsize</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">12</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#24292E;">plt.subplot(</span><span style="color:#005CC5;">121</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">plot_decision_boundary(tree_clf1,X,y,</span><span style="color:#E36209;">axes</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">[</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">1.5</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">2.5</span><span style="color:#24292E;">,</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">1.5</span><span style="color:#24292E;">],</span><span style="color:#E36209;">iris</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">False</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">plt.title(</span><span style="color:#032F62;">&#39;No restrictions&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">plt.subplot(</span><span style="color:#005CC5;">122</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">plot_decision_boundary(tree_clf2,X,y,</span><span style="color:#E36209;">axes</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">[</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">1.5</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">2.5</span><span style="color:#24292E;">,</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">1.5</span><span style="color:#24292E;">],</span><span style="color:#E36209;">iris</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">False</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">plt.title(</span><span style="color:#032F62;">&#39;min_samples_leaf=4&#39;</span><span style="color:#24292E;">)</span></span></code></pre></div><p><img src="https://cdn.jsdelivr.net/gh/clint-sfy/blogcdn@master/python/ML/13.3.png" alt=""></p><h3 id="对数据的敏感" tabindex="-1">对数据的敏感 <a class="header-anchor" href="#对数据的敏感" aria-label="Permalink to &quot;对数据的敏感&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#ADBAC7;">np.random.seed(</span><span style="color:#6CB6FF;">6</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">Xs </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> np.random.rand(</span><span style="color:#6CB6FF;">100</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;">) </span><span style="color:#F47067;">-</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">0.5</span></span>
<span class="line"><span style="color:#ADBAC7;">ys </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> (Xs[:, </span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">] </span><span style="color:#F47067;">&gt;</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">).astype(np.float32) </span><span style="color:#F47067;">*</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">2</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">angle </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> np.pi </span><span style="color:#F47067;">/</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">4</span></span>
<span class="line"><span style="color:#ADBAC7;">rotation_matrix </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> np.array([[np.cos(angle), </span><span style="color:#F47067;">-</span><span style="color:#ADBAC7;">np.sin(angle)], [np.sin(angle), np.cos(angle)]])</span></span>
<span class="line"><span style="color:#ADBAC7;">Xsr </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> Xs.dot(rotation_matrix)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">tree_clf_s </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> DecisionTreeClassifier(</span><span style="color:#F69D50;">random_state</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">42</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">tree_clf_s.fit(Xs, ys)</span></span>
<span class="line"><span style="color:#ADBAC7;">tree_clf_sr </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> DecisionTreeClassifier(</span><span style="color:#F69D50;">random_state</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">42</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">tree_clf_sr.fit(Xsr, ys)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">plt.figure(</span><span style="color:#F69D50;">figsize</span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">11</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">4</span><span style="color:#ADBAC7;">))</span></span>
<span class="line"><span style="color:#ADBAC7;">plt.subplot(</span><span style="color:#6CB6FF;">121</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">plot_decision_boundary(tree_clf_s, Xs, ys, </span><span style="color:#F69D50;">axes</span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;">[</span><span style="color:#F47067;">-</span><span style="color:#6CB6FF;">0.7</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">0.7</span><span style="color:#ADBAC7;">, </span><span style="color:#F47067;">-</span><span style="color:#6CB6FF;">0.7</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">0.7</span><span style="color:#ADBAC7;">], </span><span style="color:#F69D50;">iris</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">False</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">plt.title(</span><span style="color:#96D0FF;">&#39;Sensitivity to training set rotation&#39;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">plt.subplot(</span><span style="color:#6CB6FF;">122</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">plot_decision_boundary(tree_clf_sr, Xsr, ys, </span><span style="color:#F69D50;">axes</span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;">[</span><span style="color:#F47067;">-</span><span style="color:#6CB6FF;">0.7</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">0.7</span><span style="color:#ADBAC7;">, </span><span style="color:#F47067;">-</span><span style="color:#6CB6FF;">0.7</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">0.7</span><span style="color:#ADBAC7;">], </span><span style="color:#F69D50;">iris</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">False</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">plt.title(</span><span style="color:#96D0FF;">&#39;Sensitivity to training set rotation&#39;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">plt.show()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">np.random.seed(</span><span style="color:#005CC5;">6</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">Xs </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> np.random.rand(</span><span style="color:#005CC5;">100</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0.5</span></span>
<span class="line"><span style="color:#24292E;">ys </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (Xs[:, </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">).astype(np.float32) </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">angle </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> np.pi </span><span style="color:#D73A49;">/</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">4</span></span>
<span class="line"><span style="color:#24292E;">rotation_matrix </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> np.array([[np.cos(angle), </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">np.sin(angle)], [np.sin(angle), np.cos(angle)]])</span></span>
<span class="line"><span style="color:#24292E;">Xsr </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Xs.dot(rotation_matrix)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">tree_clf_s </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> DecisionTreeClassifier(</span><span style="color:#E36209;">random_state</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">42</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">tree_clf_s.fit(Xs, ys)</span></span>
<span class="line"><span style="color:#24292E;">tree_clf_sr </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> DecisionTreeClassifier(</span><span style="color:#E36209;">random_state</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">42</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">tree_clf_sr.fit(Xsr, ys)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">plt.figure(</span><span style="color:#E36209;">figsize</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">11</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#24292E;">plt.subplot(</span><span style="color:#005CC5;">121</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">plot_decision_boundary(tree_clf_s, Xs, ys, </span><span style="color:#E36209;">axes</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">[</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">0.7</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">0.7</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">0.7</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">0.7</span><span style="color:#24292E;">], </span><span style="color:#E36209;">iris</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">False</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">plt.title(</span><span style="color:#032F62;">&#39;Sensitivity to training set rotation&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">plt.subplot(</span><span style="color:#005CC5;">122</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">plot_decision_boundary(tree_clf_sr, Xsr, ys, </span><span style="color:#E36209;">axes</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">[</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">0.7</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">0.7</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">0.7</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">0.7</span><span style="color:#24292E;">], </span><span style="color:#E36209;">iris</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">False</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">plt.title(</span><span style="color:#032F62;">&#39;Sensitivity to training set rotation&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">plt.show()</span></span></code></pre></div><p><img src="https://cdn.jsdelivr.net/gh/clint-sfy/blogcdn@master/python/ML/13.4.png" alt=""></p><h3 id="回归任务" tabindex="-1">回归任务 <a class="header-anchor" href="#回归任务" aria-label="Permalink to &quot;回归任务&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#ADBAC7;">np.random.seed(</span><span style="color:#6CB6FF;">42</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">m</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">200</span></span>
<span class="line"><span style="color:#ADBAC7;">X</span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;">np.random.rand(m,</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">y </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">4</span><span style="color:#F47067;">*</span><span style="color:#ADBAC7;">(X</span><span style="color:#F47067;">-</span><span style="color:#6CB6FF;">0.5</span><span style="color:#ADBAC7;">)</span><span style="color:#F47067;">**</span><span style="color:#6CB6FF;">2</span></span>
<span class="line"><span style="color:#ADBAC7;">y </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> y </span><span style="color:#F47067;">+</span><span style="color:#ADBAC7;"> np.random.randn(m,</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">)</span><span style="color:#F47067;">/</span><span style="color:#6CB6FF;">10</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F47067;">from</span><span style="color:#ADBAC7;"> sklearn.tree </span><span style="color:#F47067;">import</span><span style="color:#ADBAC7;"> DecisionTreeRegressor</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">tree_reg </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> DecisionTreeRegressor(</span><span style="color:#F69D50;">max_depth</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">tree_reg.fit(X,y)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">export_graphviz(</span></span>
<span class="line"><span style="color:#ADBAC7;">        tree_reg,</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#F69D50;">out_file</span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;regression_tree.dot&quot;</span><span style="color:#ADBAC7;">),</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#F69D50;">feature_names</span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;">[</span><span style="color:#96D0FF;">&quot;x1&quot;</span><span style="color:#ADBAC7;">],</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#F69D50;">rounded</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">True</span><span style="color:#ADBAC7;">,</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#F69D50;">filled</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">True</span></span>
<span class="line"><span style="color:#ADBAC7;">    )</span></span>
<span class="line"><span style="color:#768390;"># 你的第二个决策树长这样</span></span>
<span class="line"><span style="color:#F47067;">from</span><span style="color:#ADBAC7;"> IPython.display </span><span style="color:#F47067;">import</span><span style="color:#ADBAC7;"> Image</span></span>
<span class="line"><span style="color:#ADBAC7;">Image(</span><span style="color:#F69D50;">filename</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&quot;regression_tree.png&quot;</span><span style="color:#ADBAC7;">,</span><span style="color:#F69D50;">width</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">400</span><span style="color:#ADBAC7;">,</span><span style="color:#F69D50;">height</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">400</span><span style="color:#ADBAC7;">,)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">np.random.seed(</span><span style="color:#005CC5;">42</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">m</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">200</span></span>
<span class="line"><span style="color:#24292E;">X</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">np.random.rand(m,</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">y </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">4</span><span style="color:#D73A49;">*</span><span style="color:#24292E;">(X</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">0.5</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">**</span><span style="color:#005CC5;">2</span></span>
<span class="line"><span style="color:#24292E;">y </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> y </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> np.random.randn(m,</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">/</span><span style="color:#005CC5;">10</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> sklearn.tree </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> DecisionTreeRegressor</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">tree_reg </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> DecisionTreeRegressor(</span><span style="color:#E36209;">max_depth</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">tree_reg.fit(X,y)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">export_graphviz(</span></span>
<span class="line"><span style="color:#24292E;">        tree_reg,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#E36209;">out_file</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;regression_tree.dot&quot;</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#E36209;">feature_names</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">[</span><span style="color:#032F62;">&quot;x1&quot;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#E36209;">rounded</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">True</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#E36209;">filled</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">True</span></span>
<span class="line"><span style="color:#24292E;">    )</span></span>
<span class="line"><span style="color:#6A737D;"># 你的第二个决策树长这样</span></span>
<span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> IPython.display </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> Image</span></span>
<span class="line"><span style="color:#24292E;">Image(</span><span style="color:#E36209;">filename</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;regression_tree.png&quot;</span><span style="color:#24292E;">,</span><span style="color:#E36209;">width</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">400</span><span style="color:#24292E;">,</span><span style="color:#E36209;">height</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">400</span><span style="color:#24292E;">,)</span></span></code></pre></div><p><img src="https://cdn.jsdelivr.net/gh/clint-sfy/blogcdn@master/python/ML/13.5.png" alt=""></p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">from</span><span style="color:#ADBAC7;"> sklearn.tree </span><span style="color:#F47067;">import</span><span style="color:#ADBAC7;"> DecisionTreeRegressor</span></span>
<span class="line"><span style="color:#ADBAC7;">v</span></span>
<span class="line"><span style="color:#ADBAC7;">tree_reg1 </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> DecisionTreeRegressor(</span><span style="color:#F69D50;">random_state</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">42</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">max_depth</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">tree_reg2 </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> DecisionTreeRegressor(</span><span style="color:#F69D50;">random_state</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">42</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">max_depth</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">3</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">tree_reg1.fit(X, y)</span></span>
<span class="line"><span style="color:#ADBAC7;">tree_reg2.fit(X, y)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F47067;">def</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">plot_regression_predictions</span><span style="color:#ADBAC7;">(tree_reg, X, y, axes</span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;">[</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">, </span><span style="color:#F47067;">-</span><span style="color:#6CB6FF;">0.2</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">], ylabel</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&quot;$y$&quot;</span><span style="color:#ADBAC7;">):</span></span>
<span class="line"><span style="color:#ADBAC7;">    x1 </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> np.linspace(axes[</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">], axes[</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">], </span><span style="color:#6CB6FF;">500</span><span style="color:#ADBAC7;">).reshape(</span><span style="color:#F47067;">-</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">    y_pred </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> tree_reg.predict(x1)</span></span>
<span class="line"><span style="color:#ADBAC7;">    plt.axis(axes)</span></span>
<span class="line"><span style="color:#ADBAC7;">    plt.xlabel(</span><span style="color:#96D0FF;">&quot;$x_1$&quot;</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">fontsize</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">18</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;"> ylabel:</span></span>
<span class="line"><span style="color:#ADBAC7;">        plt.ylabel(ylabel, </span><span style="color:#F69D50;">fontsize</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">18</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">rotation</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">    plt.plot(X, y, </span><span style="color:#96D0FF;">&quot;b.&quot;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">    plt.plot(x1, y_pred, </span><span style="color:#96D0FF;">&quot;r.-&quot;</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">linewidth</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">label</span><span style="color:#F47067;">=</span><span style="color:#F47067;">r</span><span style="color:#96D0FF;">&quot;</span><span style="color:#6CB6FF;">$</span><span style="color:#8DDB8C;font-weight:bold;">\\h</span><span style="color:#96D0FF;">at{y}</span><span style="color:#6CB6FF;">$</span><span style="color:#96D0FF;">&quot;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">plt.figure(</span><span style="color:#F69D50;">figsize</span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">11</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">4</span><span style="color:#ADBAC7;">))</span></span>
<span class="line"><span style="color:#ADBAC7;">plt.subplot(</span><span style="color:#6CB6FF;">121</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">plot_regression_predictions(tree_reg1, X, y)</span></span>
<span class="line"><span style="color:#F47067;">for</span><span style="color:#ADBAC7;"> split, style </span><span style="color:#F47067;">in</span><span style="color:#ADBAC7;"> ((</span><span style="color:#6CB6FF;">0.1973</span><span style="color:#ADBAC7;">, </span><span style="color:#96D0FF;">&quot;k-&quot;</span><span style="color:#ADBAC7;">), (</span><span style="color:#6CB6FF;">0.0917</span><span style="color:#ADBAC7;">, </span><span style="color:#96D0FF;">&quot;k--&quot;</span><span style="color:#ADBAC7;">), (</span><span style="color:#6CB6FF;">0.7718</span><span style="color:#ADBAC7;">, </span><span style="color:#96D0FF;">&quot;k--&quot;</span><span style="color:#ADBAC7;">)):</span></span>
<span class="line"><span style="color:#ADBAC7;">    plt.plot([split, split], [</span><span style="color:#F47067;">-</span><span style="color:#6CB6FF;">0.2</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">], style, </span><span style="color:#F69D50;">linewidth</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">plt.text(</span><span style="color:#6CB6FF;">0.21</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">0.65</span><span style="color:#ADBAC7;">, </span><span style="color:#96D0FF;">&quot;Depth=0&quot;</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">fontsize</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">15</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">plt.text(</span><span style="color:#6CB6FF;">0.01</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">0.2</span><span style="color:#ADBAC7;">, </span><span style="color:#96D0FF;">&quot;Depth=1&quot;</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">fontsize</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">13</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">plt.text(</span><span style="color:#6CB6FF;">0.65</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">0.8</span><span style="color:#ADBAC7;">, </span><span style="color:#96D0FF;">&quot;Depth=1&quot;</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">fontsize</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">13</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">plt.legend(</span><span style="color:#F69D50;">loc</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&quot;upper center&quot;</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">fontsize</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">18</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">plt.title(</span><span style="color:#96D0FF;">&quot;max_depth=2&quot;</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">fontsize</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">14</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">plt.subplot(</span><span style="color:#6CB6FF;">122</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">plot_regression_predictions(tree_reg2, X, y, </span><span style="color:#F69D50;">ylabel</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">None</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#F47067;">for</span><span style="color:#ADBAC7;"> split, style </span><span style="color:#F47067;">in</span><span style="color:#ADBAC7;"> ((</span><span style="color:#6CB6FF;">0.1973</span><span style="color:#ADBAC7;">, </span><span style="color:#96D0FF;">&quot;k-&quot;</span><span style="color:#ADBAC7;">), (</span><span style="color:#6CB6FF;">0.0917</span><span style="color:#ADBAC7;">, </span><span style="color:#96D0FF;">&quot;k--&quot;</span><span style="color:#ADBAC7;">), (</span><span style="color:#6CB6FF;">0.7718</span><span style="color:#ADBAC7;">, </span><span style="color:#96D0FF;">&quot;k--&quot;</span><span style="color:#ADBAC7;">)):</span></span>
<span class="line"><span style="color:#ADBAC7;">    plt.plot([split, split], [</span><span style="color:#F47067;">-</span><span style="color:#6CB6FF;">0.2</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">], style, </span><span style="color:#F69D50;">linewidth</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#F47067;">for</span><span style="color:#ADBAC7;"> split </span><span style="color:#F47067;">in</span><span style="color:#ADBAC7;"> (</span><span style="color:#6CB6FF;">0.0458</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">0.1298</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">0.2873</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">0.9040</span><span style="color:#ADBAC7;">):</span></span>
<span class="line"><span style="color:#ADBAC7;">    plt.plot([split, split], [</span><span style="color:#F47067;">-</span><span style="color:#6CB6FF;">0.2</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">], </span><span style="color:#96D0FF;">&quot;k:&quot;</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">linewidth</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">plt.text(</span><span style="color:#6CB6FF;">0.3</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">0.5</span><span style="color:#ADBAC7;">, </span><span style="color:#96D0FF;">&quot;Depth=2&quot;</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">fontsize</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">13</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">plt.title(</span><span style="color:#96D0FF;">&quot;max_depth=3&quot;</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">fontsize</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">14</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">plt.show()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> sklearn.tree </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> DecisionTreeRegressor</span></span>
<span class="line"><span style="color:#24292E;">v</span></span>
<span class="line"><span style="color:#24292E;">tree_reg1 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> DecisionTreeRegressor(</span><span style="color:#E36209;">random_state</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">42</span><span style="color:#24292E;">, </span><span style="color:#E36209;">max_depth</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">tree_reg2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> DecisionTreeRegressor(</span><span style="color:#E36209;">random_state</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">42</span><span style="color:#24292E;">, </span><span style="color:#E36209;">max_depth</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">tree_reg1.fit(X, y)</span></span>
<span class="line"><span style="color:#24292E;">tree_reg2.fit(X, y)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">plot_regression_predictions</span><span style="color:#24292E;">(tree_reg, X, y, axes</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">0.2</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">], ylabel</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;$y$&quot;</span><span style="color:#24292E;">):</span></span>
<span class="line"><span style="color:#24292E;">    x1 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> np.linspace(axes[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">], axes[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">], </span><span style="color:#005CC5;">500</span><span style="color:#24292E;">).reshape(</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    y_pred </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> tree_reg.predict(x1)</span></span>
<span class="line"><span style="color:#24292E;">    plt.axis(axes)</span></span>
<span class="line"><span style="color:#24292E;">    plt.xlabel(</span><span style="color:#032F62;">&quot;$x_1$&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">fontsize</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">18</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> ylabel:</span></span>
<span class="line"><span style="color:#24292E;">        plt.ylabel(ylabel, </span><span style="color:#E36209;">fontsize</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">18</span><span style="color:#24292E;">, </span><span style="color:#E36209;">rotation</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    plt.plot(X, y, </span><span style="color:#032F62;">&quot;b.&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    plt.plot(x1, y_pred, </span><span style="color:#032F62;">&quot;r.-&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">linewidth</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#E36209;">label</span><span style="color:#D73A49;">=</span><span style="color:#D73A49;">r</span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">$</span><span style="color:#22863A;font-weight:bold;">\\h</span><span style="color:#032F62;">at{y}</span><span style="color:#005CC5;">$</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">plt.figure(</span><span style="color:#E36209;">figsize</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">11</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#24292E;">plt.subplot(</span><span style="color:#005CC5;">121</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">plot_regression_predictions(tree_reg1, X, y)</span></span>
<span class="line"><span style="color:#D73A49;">for</span><span style="color:#24292E;"> split, style </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> ((</span><span style="color:#005CC5;">0.1973</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;k-&quot;</span><span style="color:#24292E;">), (</span><span style="color:#005CC5;">0.0917</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;k--&quot;</span><span style="color:#24292E;">), (</span><span style="color:#005CC5;">0.7718</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;k--&quot;</span><span style="color:#24292E;">)):</span></span>
<span class="line"><span style="color:#24292E;">    plt.plot([split, split], [</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">0.2</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">], style, </span><span style="color:#E36209;">linewidth</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">plt.text(</span><span style="color:#005CC5;">0.21</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">0.65</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Depth=0&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">fontsize</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">15</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">plt.text(</span><span style="color:#005CC5;">0.01</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">0.2</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Depth=1&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">fontsize</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">13</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">plt.text(</span><span style="color:#005CC5;">0.65</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">0.8</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Depth=1&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">fontsize</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">13</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">plt.legend(</span><span style="color:#E36209;">loc</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;upper center&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">fontsize</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">18</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">plt.title(</span><span style="color:#032F62;">&quot;max_depth=2&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">fontsize</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">14</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">plt.subplot(</span><span style="color:#005CC5;">122</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">plot_regression_predictions(tree_reg2, X, y, </span><span style="color:#E36209;">ylabel</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">None</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">for</span><span style="color:#24292E;"> split, style </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> ((</span><span style="color:#005CC5;">0.1973</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;k-&quot;</span><span style="color:#24292E;">), (</span><span style="color:#005CC5;">0.0917</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;k--&quot;</span><span style="color:#24292E;">), (</span><span style="color:#005CC5;">0.7718</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;k--&quot;</span><span style="color:#24292E;">)):</span></span>
<span class="line"><span style="color:#24292E;">    plt.plot([split, split], [</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">0.2</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">], style, </span><span style="color:#E36209;">linewidth</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">for</span><span style="color:#24292E;"> split </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">0.0458</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">0.1298</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">0.2873</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">0.9040</span><span style="color:#24292E;">):</span></span>
<span class="line"><span style="color:#24292E;">    plt.plot([split, split], [</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">0.2</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">], </span><span style="color:#032F62;">&quot;k:&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">linewidth</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">plt.text(</span><span style="color:#005CC5;">0.3</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">0.5</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Depth=2&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">fontsize</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">13</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">plt.title(</span><span style="color:#032F62;">&quot;max_depth=3&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">fontsize</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">14</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">plt.show()</span></span></code></pre></div><p><img src="https://cdn.jsdelivr.net/gh/clint-sfy/blogcdn@master/python/ML/13.6.png" alt=""></p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#ADBAC7;">tree_reg1 </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> DecisionTreeRegressor(</span><span style="color:#F69D50;">random_state</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">42</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">tree_reg2 </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> DecisionTreeRegressor(</span><span style="color:#F69D50;">random_state</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">42</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">min_samples_leaf</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">10</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">tree_reg1.fit(X, y)</span></span>
<span class="line"><span style="color:#ADBAC7;">tree_reg2.fit(X, y)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">x1 </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> np.linspace(</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">500</span><span style="color:#ADBAC7;">).reshape(</span><span style="color:#F47067;">-</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">y_pred1 </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> tree_reg1.predict(x1)</span></span>
<span class="line"><span style="color:#ADBAC7;">y_pred2 </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> tree_reg2.predict(x1)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">plt.figure(</span><span style="color:#F69D50;">figsize</span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">11</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">4</span><span style="color:#ADBAC7;">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">plt.subplot(</span><span style="color:#6CB6FF;">121</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">plt.plot(X, y, </span><span style="color:#96D0FF;">&quot;b.&quot;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">plt.plot(x1, y_pred1, </span><span style="color:#96D0FF;">&quot;r.-&quot;</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">linewidth</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">label</span><span style="color:#F47067;">=</span><span style="color:#F47067;">r</span><span style="color:#96D0FF;">&quot;</span><span style="color:#6CB6FF;">$</span><span style="color:#8DDB8C;font-weight:bold;">\\h</span><span style="color:#96D0FF;">at{y}</span><span style="color:#6CB6FF;">$</span><span style="color:#96D0FF;">&quot;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">plt.axis([</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">, </span><span style="color:#F47067;">-</span><span style="color:#6CB6FF;">0.2</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">1.1</span><span style="color:#ADBAC7;">])</span></span>
<span class="line"><span style="color:#ADBAC7;">plt.xlabel(</span><span style="color:#96D0FF;">&quot;$x_1$&quot;</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">fontsize</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">18</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">plt.ylabel(</span><span style="color:#96D0FF;">&quot;$y$&quot;</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">fontsize</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">18</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">rotation</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">plt.legend(</span><span style="color:#F69D50;">loc</span><span style="color:#F47067;">=</span><span style="color:#96D0FF;">&quot;upper center&quot;</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">fontsize</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">18</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">plt.title(</span><span style="color:#96D0FF;">&quot;No restrictions&quot;</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">fontsize</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">14</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">plt.subplot(</span><span style="color:#6CB6FF;">122</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">plt.plot(X, y, </span><span style="color:#96D0FF;">&quot;b.&quot;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">plt.plot(x1, y_pred2, </span><span style="color:#96D0FF;">&quot;r.-&quot;</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">linewidth</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">label</span><span style="color:#F47067;">=</span><span style="color:#F47067;">r</span><span style="color:#96D0FF;">&quot;</span><span style="color:#6CB6FF;">$</span><span style="color:#8DDB8C;font-weight:bold;">\\h</span><span style="color:#96D0FF;">at{y}</span><span style="color:#6CB6FF;">$</span><span style="color:#96D0FF;">&quot;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">plt.axis([</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">, </span><span style="color:#F47067;">-</span><span style="color:#6CB6FF;">0.2</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">1.1</span><span style="color:#ADBAC7;">])</span></span>
<span class="line"><span style="color:#ADBAC7;">plt.xlabel(</span><span style="color:#96D0FF;">&quot;$x_1$&quot;</span><span style="color:#ADBAC7;">, </span><span style="color:#F69D50;">fontsize</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">18</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">plt.title(</span><span style="color:#96D0FF;">&quot;min_samples_leaf=</span><span style="color:#F47067;">{}</span><span style="color:#96D0FF;">&quot;</span><span style="color:#ADBAC7;">.format(tree_reg2.min_samples_leaf), </span><span style="color:#F69D50;">fontsize</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">14</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">plt.show()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">tree_reg1 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> DecisionTreeRegressor(</span><span style="color:#E36209;">random_state</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">42</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">tree_reg2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> DecisionTreeRegressor(</span><span style="color:#E36209;">random_state</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">42</span><span style="color:#24292E;">, </span><span style="color:#E36209;">min_samples_leaf</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">tree_reg1.fit(X, y)</span></span>
<span class="line"><span style="color:#24292E;">tree_reg2.fit(X, y)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">x1 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> np.linspace(</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">500</span><span style="color:#24292E;">).reshape(</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">y_pred1 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> tree_reg1.predict(x1)</span></span>
<span class="line"><span style="color:#24292E;">y_pred2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> tree_reg2.predict(x1)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">plt.figure(</span><span style="color:#E36209;">figsize</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">11</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">plt.subplot(</span><span style="color:#005CC5;">121</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">plt.plot(X, y, </span><span style="color:#032F62;">&quot;b.&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">plt.plot(x1, y_pred1, </span><span style="color:#032F62;">&quot;r.-&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">linewidth</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#E36209;">label</span><span style="color:#D73A49;">=</span><span style="color:#D73A49;">r</span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">$</span><span style="color:#22863A;font-weight:bold;">\\h</span><span style="color:#032F62;">at{y}</span><span style="color:#005CC5;">$</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">plt.axis([</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">0.2</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">1.1</span><span style="color:#24292E;">])</span></span>
<span class="line"><span style="color:#24292E;">plt.xlabel(</span><span style="color:#032F62;">&quot;$x_1$&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">fontsize</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">18</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">plt.ylabel(</span><span style="color:#032F62;">&quot;$y$&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">fontsize</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">18</span><span style="color:#24292E;">, </span><span style="color:#E36209;">rotation</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">plt.legend(</span><span style="color:#E36209;">loc</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;upper center&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">fontsize</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">18</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">plt.title(</span><span style="color:#032F62;">&quot;No restrictions&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">fontsize</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">14</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">plt.subplot(</span><span style="color:#005CC5;">122</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">plt.plot(X, y, </span><span style="color:#032F62;">&quot;b.&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">plt.plot(x1, y_pred2, </span><span style="color:#032F62;">&quot;r.-&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">linewidth</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#E36209;">label</span><span style="color:#D73A49;">=</span><span style="color:#D73A49;">r</span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">$</span><span style="color:#22863A;font-weight:bold;">\\h</span><span style="color:#032F62;">at{y}</span><span style="color:#005CC5;">$</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">plt.axis([</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">0.2</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">1.1</span><span style="color:#24292E;">])</span></span>
<span class="line"><span style="color:#24292E;">plt.xlabel(</span><span style="color:#032F62;">&quot;$x_1$&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">fontsize</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">18</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">plt.title(</span><span style="color:#032F62;">&quot;min_samples_leaf=</span><span style="color:#005CC5;">{}</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">.format(tree_reg2.min_samples_leaf), </span><span style="color:#E36209;">fontsize</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">14</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">plt.show()</span></span></code></pre></div><p><img src="https://cdn.jsdelivr.net/gh/clint-sfy/blogcdn@master/python/ML/13.7.png" alt=""></p><h2 id="" tabindex="-1"><a class="header-anchor" href="#" aria-label="Permalink to &quot;&quot;">​</a></h2>`,33);function _(s,h,m,g,f,q){const o=t,e=F("ClientOnly");return l(),r("div",null,[d,y(e,null,{default:i(()=>{var n,a;return[(((n=s.$frontmatter)==null?void 0:n.aside)??!0)&&(((a=s.$frontmatter)==null?void 0:a.showArticleMetadata)??!0)?(l(),D(o,{key:0,article:s.$frontmatter},null,8,["article"])):B("",!0)]}),_:1}),u])}const X=c(E,[["render",_]]);export{k as __pageData,X as default};
